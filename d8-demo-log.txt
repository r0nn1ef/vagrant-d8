[0mBringing machine 'default' up with 'virtualbox' provider...[0m
[0m    default: The Berkshelf shelf is at "C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default"[0m
[1m==> default: Sharing cookbooks with VM[0m
[1m==> default: Importing base box 'hashicorp/precise64'...[0m
[0m[K[0m[0mProgress: 60%[0m[0m[K[0m[0mProgress: 90%[0m[0m[K[0m[1m==> default: Matching MAC address for NAT networking...[0m
[1m==> default: Checking if box 'hashicorp/precise64' is up to date...[0m
[1m==> default: Setting the name of the VM: Drupal 8 Demo[0m
[1m==> default: Updating Vagrant's Berkshelf...[0m
[1m==> default: Resolving cookbook dependencies...
==> default: Fetching 'base' from source at provision/cookbooks/base
==> default: Fetching 'drupal8' from source at provision/cookbooks/drupal8
==> default: Using apache2 (3.1.0)
==> default: Using base (0.1.0) from source at provision/cookbooks/base
==> default: Using build-essential (2.2.4)
==> default: Using chef-sugar (3.3.0)
==> default: Using chef_handler (1.3.0)
==> default: Using composer (2.2.1)
==> default: Using drupal8 (0.1.0) from source at provision/cookbooks/drupal8
==> default: Using iis (4.1.6)
==> default: Using mysql (6.1.2)
==> default: Using php (1.7.2)
==> default: Using rbac (1.0.3)
==> default: Using smf (2.2.7)
==> default: Using windows (1.39.1)
==> default: Using xml (2.0.0)
==> default: Using yum (3.10.0)
==> default: Using yum-epel (0.6.5)
==> default: Using yum-mysql-community (0.1.21)
==> default: Vendoring apache2 (3.1.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/apache2
==> default: Vendoring base (0.1.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/base
==> default: Vendoring build-essential (2.2.4) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/build-essential
==> default: Vendoring chef-sugar (3.3.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/chef-sugar
==> default: Vendoring chef_handler (1.3.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/chef_handler
==> default: Vendoring composer (2.2.1) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/composer
==> default: Vendoring drupal8 (0.1.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/drupal8
==> default: Vendoring iis (4.1.6) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/iis
==> default: Vendoring mysql (6.1.2) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/mysql
==> default: Vendoring php (1.7.2) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/php
==> default: Vendoring rbac (1.0.3) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/rbac
==> default: Vendoring smf (2.2.7) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/smf
==> default: Vendoring windows (1.39.1) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/windows
==> default: Vendoring xml (2.0.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/xml
==> default: Vendoring yum (3.10.0) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/yum
==> default: Vendoring yum-epel (0.6.5) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/yum-epel
==> default: Vendoring yum-mysql-community (0.1.21) to C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default/yum-mysql-community[0m
[1m==> default: Auto-generating node name for Chef...[0m
[1m==> default: Clearing any previously set network interfaces...[0m
[1m==> default: Preparing network interfaces based on configuration...[0m
[0m    default: Adapter 1: nat[0m
[1m==> default: Forwarding ports...[0m
[0m    default: 80 (guest) => 8081 (host) (adapter 1)[0m
[0m    default: 22 (guest) => 2222 (host) (adapter 1)[0m
[1m==> default: Running 'pre-boot' VM customizations...[0m
[1m==> default: Booting VM...[0m
[1m==> default: Waiting for machine to boot. This may take a few minutes...[0m
[0m    default: SSH address: 127.0.0.1:2222[0m
[0m    default: SSH username: vagrant[0m
[0m    default: SSH auth method: private key[0m
[0m    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.[0m
[0m    default: 
    default: Inserting generated public key within guest...[0m
[0m    default: Removing insecure key from the guest if it's present...[0m
[0m    default: Key inserted! Disconnecting and reconnecting using new SSH key...[0m
[1m==> default: Machine booted and ready![0m
[1m==> default: Checking for guest additions in VM...[0m
[0m    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 4.2.0
    default: VirtualBox Version: 5.0[0m
[1m==> default: [vagrant-hostsupdater] Checking for host entries[0m
[1m==> default: Mounting shared folders...[0m
[0m    default: /vagrant => D:/d8-vagrant-demo[0m
[0m    default: /vagrant/sites => D:/sites[0m
[0m    default: /tmp/vagrant-chef/d2d25a618e21413b96372d8f2b31cc85/cookbooks => C:/Users/rrf011/.berkshelf/vagrant-berkshelf/shelves/berkshelf20160217-5936-189uozi-default[0m
[1m==> default: Running provisioner: shell...[0m
[0m    default: Running: inline script[0m
[1;31m==> default: stdin: is not a tty[0m
[1m==> default: Running provisioner: chef_solo...[0m
[0m    default: Installing Chef (latest)...[0m
[1m==> default: Generating chef JSON and uploading...[0m
[1m==> default: Running chef-solo...[0m
[1;31m==> default: stdin: is not a tty[0m
[1;32m==> default: [2016-02-17T14:59:17+00:00] INFO: Forking chef instance to converge...[0m
[1;32m==> default: Starting Chef Client, version 12.7.2[0m[0m
[1;32m==> default: [2016-02-17T14:59:17+00:00] INFO: *** Chef 12.7.2 ***
==> default: [2016-02-17T14:59:17+00:00] INFO: Chef-client pid: 1605[0m
[1;32m==> default: [2016-02-17T14:59:39+00:00] INFO: Setting the run_list to ["recipe[base::default]"] from CLI options[0m
[1;32m==> default: [2016-02-17T14:59:39+00:00] INFO: Run List is [recipe[base::default]]
==> default: [2016-02-17T14:59:39+00:00] INFO: Run List expands to [base::default][0m
[1;32m==> default: [2016-02-17T14:59:39+00:00] INFO: Starting Chef Run for vagrant-2ff67c2f[0m
[1;32m==> default: [2016-02-17T14:59:39+00:00] INFO: Running start handlers[0m
[1;32m==> default: [2016-02-17T14:59:39+00:00] INFO: Start handlers complete.[0m
[1;32m==> default: Compiling Cookbooks...[0m[0m
[1;32m==> default: [2016-02-17T14:59:41+00:00] INFO: Ignoring apache2::mod_authn_core. not available until apache 2.4[0m
[1;32m==> default: Converging 90 resources[0m[0m
[1;32m==> default: Recipe: apache2::default[0m[0m
[1;32m==> default:   * apt_package[apache2] action install[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: apt_package[apache2] installed apache2 at 2.2.22-1ubuntu1.10[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- install version 2.2.22-1ubuntu1.10 of package apache2[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * directory[/etc/apache2/sites-available] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * directory[/etc/apache2/sites-enabled] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * directory[/etc/apache2/mods-available] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * directory[/etc/apache2/mods-enabled] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * directory[/etc/apache2/conf-available] action create[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-available] created directory /etc/apache2/conf-available
==> default: 
==> default:     [0m
[1;32m==> default: [32m- create new directory /etc/apache2/conf-available[0m[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-available] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-available] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-available] mode changed to 755[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- change mode from '' to '0755'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * directory[/etc/apache2/conf-enabled] action create[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-enabled] created directory /etc/apache2/conf-enabled
==> default: 
==> default:     [0m
[1;32m==> default: [32m- create new directory /etc/apache2/conf-enabled[0m[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-enabled] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-enabled] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf-enabled] mode changed to 755[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- change mode from '' to '0755'[0m
==> default:     [32m- change owner from '' to 'root'[0m[0m
[1;32m==> default: 
==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * link[/etc/apache2/sites-enabled/default] action delete[0m
[1;32m==> default:  (up to date)
==> default:   * file[/etc/apache2/sites-available/default] action delete[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: file[/etc/apache2/sites-available/default] deleted file at /etc/apache2/sites-available/default[0m
[1;32m==> default:     [32m- delete file /etc/apache2/sites-available/default[0m
==> default: [0m[0m
[1;32m==> default:   * link[/etc/apache2/sites-enabled/default.conf] action delete[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * file[/etc/apache2/sites-available/default.conf] action delete[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * link[/etc/apache2/sites-enabled/000-default] action delete[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: link[/etc/apache2/sites-enabled/000-default] deleted[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- delete link at /etc/apache2/sites-enabled/000-default[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * file[/etc/apache2/sites-available/000-default] action delete[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * link[/etc/apache2/sites-enabled/000-default.conf] action delete[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * file[/etc/apache2/sites-available/000-default.conf] action delete[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * directory[/etc/apache2/conf.d] action delete[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/etc/apache2/conf.d] deleted /etc/apache2/conf.d recursively
==> default: 
==> default:     [0m
[1;32m==> default: [32m- delete existing directory /etc/apache2/conf.d[0m
==> default: [0m[0m
[1;32m==> default:   * directory[/var/log/apache2] action create[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: directory[/var/log/apache2] mode changed to 755
==> default: 
==> default:     [32m- change mode from '0750' to '0755'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * apt_package[perl] action install[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * link[/usr/sbin/a2ensite] action delete[0m
[1;32m==> default: [2016-02-17T14:59:54+00:00] INFO: link[/usr/sbin/a2ensite] deleted[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- delete link at /usr/sbin/a2ensite[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * template[/usr/sbin/a2ensite] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2ensite] created file /usr/sbin/a2ensite
==> default: 
==> default:     [32m- create new file /usr/sbin/a2ensite[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2ensite] updated file contents /usr/sbin/a2ensite[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- update content in file /usr/sbin/a2ensite from none to ce53f4[0m
==> default:     [37m--- /usr/sbin/a2ensite	2016-02-17 14:59:55.650987142 +0000[0m
==> default:     [37m+++ /usr/sbin/.a2ensite20160217-1605-18bmprq	2016-02-17 14:59:55.650987142 +0000[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -1 +1,533 @@[0m
==> default:     [0m
[1;32m==> default: [37m+#!/usr/bin/perl -w[0m
==> default:     [37m+#[0m
==> default:     [0m
[1;32m==> default: [37m+# a2enmod by Stefan Fritsch <sf@debian.org>[0m
==> default:     [37m+# Licensed under Apache License 2.0[0m[0m
[1;32m==> default: 
==> default:     [37m+#[0m
==> default:     [37m+# The coding style is "perltidy -pbp"[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+use strict;[0m[0m
[1;32m==> default: 
==> default:     [37m+use Cwd 'realpath';[0m
==> default:     [37m+use File::Spec;[0m
==> default:     [0m
[1;32m==> default: [37m+use File::Basename;[0m[0m
[1;32m==> default:     [37m+use File::Path;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+use Getopt::Long;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $quiet;[0m
==> default:     [0m
[1;32m==> default: [37m+my $force;[0m
==> default:     [37m+my $maintmode;[0m[0m
[1;32m==> default:     [37m+my $purge;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+Getopt::Long::Configure('bundling');[0m
==> default:     [0m
[1;32m==> default: [37m+GetOptions([0m
==> default:     [37m+    'quiet|q'     => \$quiet,[0m[0m
[1;32m==> default: 
==> default:     [37m+    'force|f'     => \$force,[0m
==> default:     [0m
[1;32m==> default: [37m+    'maintmode|m' => \$maintmode,[0m
==> default:     [37m+    'purge|p'     => \$purge[0m
==> default:     [0m
[1;32m==> default: [37m+) or exit 2;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $basename = basename($0);[0m
==> default:     [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    or die "$basename call name unknown\n";[0m
==> default:     [0m
[1;32m==> default: [37m+my $act        = $1;[0m
==> default:     [37m+my $obj        = $2;[0m
==> default:     [0m
[1;32m==> default: [37m+my $dir_suffix = $3;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+my $env_file = $ENV{APACHE_ENVVARS}[0m
==> default:     [37m+    || ([0m[0m
[1;32m==> default:     [37m+    $ENV{APACHE_CONFDIR}[0m
==> default:     [37m+    ? "$ENV{APACHE_CONFDIR}/envvars"[0m[0m
[1;32m==> default: 
==> default:     [37m+    : "/etc/apache2$dir_suffix/envvars"[0m[0m
[1;32m==> default: 
==> default:     [37m+    );[0m
==> default:     [37m+$ENV{LANG} = 'C';[0m[0m
[1;32m==> default: 
==> default:     [37m+read_env_file($env_file);[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+$act .= 'able';[0m
==> default:     [37m+my ( $name, $dir, $sffx, $reload );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+if ( $obj eq 'mod' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+    $obj    = 'module';[0m
==> default:     [37m+    $dir    = 'mods';[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $sffx   = '.load';[0m
==> default:     [37m+    $reload = 'restart';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+elsif ( $obj eq 'conf' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+    $obj    = 'conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'conf';[0m
==> default:     [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default:     [37m+    $reload = 'reload';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'sites';[0m
==> default:     [37m+    $sffx   = '.conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'reload';[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+$name = ucfirst($obj);[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m
==> default:     [37m+    || "$confdir/$dir-available";[0m
==> default:     [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m[0m
[1;32m==> default: 
==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+$statedir .= "/$obj";[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m
==> default:     [37m+my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $request_reload = 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+my $rc = 0;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+if ( !scalar @ARGV ) {[0m
==> default:     [37m+    my @choices = myglob('*');[0m[0m
[1;32m==> default: 
==> default:     [37m+    print "Your choices are: @choices\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";[0m[0m
[1;32m==> default:     [37m+    my $input = <>;[0m
==> default:     [37m+    @ARGV = split /\s+/, $input;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+my @objs;[0m
==> default:     [37m+foreach my $arg (@ARGV) {[0m
==> default:     [0m
[1;32m==> default: [37m+    $arg =~ s/${sffx}$//;[0m
==> default:     [37m+    my @glob = myglob($arg);[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !@glob ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        error("No $obj found matching $arg!\n");[0m
==> default:     [37m+        $rc = 1;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    else {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        push @objs, @glob;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+foreach my $acton (@objs) {[0m
==> default:     [37m+    doit($acton) or $rc = 1;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+info([0m
==> default:     [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+) if $request_reload;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+exit($rc);[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+##############################################################################[0m
==> default:     [37m+[0m
==> default:     [37m+sub myglob {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $arg = shift;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my @glob = map {[0m
==> default:     [37m+        s{^$choicedir/}{};[0m
==> default:     [0m
[1;32m==> default: [37m+        s{$sffx$}{};[0m[0m
[1;32m==> default: 
==> default:     [37m+        $_[0m
==> default:     [0m
[1;32m==> default: [37m+    } glob("$choicedir/$arg$sffx");[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    return @glob;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub doit {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $acton = shift;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default:     [37m+    my ( $conftgt, $conflink );[0m
==> default:     [37m+    if ( $obj eq 'module' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( $acton eq 'cgi' && threaded() ) {[0m
==> default:     [37m+            print[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+            $acton = 'cgid';[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        $conftgt = "$availdir/$acton.conf";[0m[0m
[1;32m==> default:     [37m+        if ( -e $conftgt ) {[0m
==> default:     [37m+            $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    my $tgt  = "$availdir/$acton$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !-e $tgt ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -l $link && !-e $link ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            if ( $act eq 'disable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                info("removing dangling symlink $link\n");[0m
==> default:     [37m+                unlink($link);[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m[0m
[1;32m==> default:     [37m+                $conflink = "$enabldir/$acton.conf";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( -l $conflink && !-e $conflink ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    info("removing dangling symlink $conflink\n");[0m
==> default:     [37m+                    unlink($conflink);[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                return 1;[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+            else {[0m[0m
[1;32m==> default: 
==> default:     [37m+                error("$link is a dangling symlink!\n");[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+        }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( $purge ) {[0m
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            # exit silently, we are purging anyway[0m
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("$name $acton does not exist!\n");[0m
==> default:     [37m+        return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    # handle module dependencies[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [37m+        if ( $act eq 'enable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( $acton eq 'mpm_itk' ) {[0m
==> default:     [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m
==> default:     [0m
[1;32m==> default: [37m+                        . "of the official Apache HTTPD. It has seen less "[0m
==> default:     [37m+                        . "testing than the official MPM modules." );[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            my @depends = get_deps("$availdir/$acton.load");[0m
==> default:     [37m+            do_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m
==> default:     [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+        else {[0m[0m
[1;32m==> default: 
==> default:     [37m+            my @depending;[0m
==> default:     [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                my @deps = get_deps($d);[0m
==> default:     [0m
[1;32m==> default: [37m+                if ( is_in( $acton, @deps ) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                    $d =~ m,/([^/]+).load$,;[0m
==> default:     [0m
[1;32m==> default: [37m+                    push @depending, $1;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [37m+            if ( scalar @depending ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ($force) {[0m
==> default:     [37m+                    do_deps( $acton, @depending ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+                else {[0m
==> default:     [37m+                    error([0m[0m
[1;32m==> default:     [37m+                        "The following modules depend on $acton ",[0m
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                    );[0m
==> default:     [37m+                    return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    elsif ( $act eq 'enable' ) {[0m
==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m
==> default:     [37m+        warn_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( $act eq 'enable' ) {[0m
==> default:     [37m+        my $check = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $check eq 'ok' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            if ($conflink) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default:     [37m+                if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+                    info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 1;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+                elsif ( $confcheck eq 'missing' ) {[0m
==> default:     [37m+                    print "Enabling config file $acton.conf.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+                else {[0m[0m
[1;32m==> default:     [37m+                    error([0m
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m[0m
[1;32m==> default:     [37m+                    );[0m
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            else {[0m
==> default:     [37m+                info("$name $acton already enabled\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                return 1;[0m
==> default:     [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        elsif ( $check eq 'missing' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            if ($conflink) {[0m
==> default:     [37m+[0m
==> default:     [37m+                # handle .conf file[0m
==> default:     [0m
[1;32m==> default: [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( $confcheck eq 'missing' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck ne 'ok' ) {[0m[0m
[1;32m==> default:     [37m+                    error([0m
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m
==> default:     [0m
[1;32m==> default: [37m+                    return 0;[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+[0m
==> default:     [37m+            print "Enabling $obj $acton.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( $acton eq 'ssl' ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m
==> default:     [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                );[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default:     [37m+            return add_link( $tgt, $link )[0m[0m
[1;32m==> default: 
==> default:     [37m+                && switch_marker( $obj, $act, $acton );[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        else {[0m[0m
[1;32m==> default: 
==> default:     [37m+            error("$name $acton not properly enabled: $check\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    else {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -e $link || -l $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            remove_link($link);[0m
==> default:     [37m+            if ( $conflink && -e $conflink ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                remove_link($conflink);[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+            print "$name $acton disabled.\n";[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        elsif ( $conflink && -e $conflink ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            print "Disabling stale config file $acton.conf.\n";[0m
==> default:     [37m+            remove_link($conflink);[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        else {[0m
==> default:     [37m+            info("$name $acton already disabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $purge ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub get_deps {[0m[0m
[1;32m==> default:     [37m+    my $file = shift;[0m
==> default:     [37m+    my $type = shift || "Depends";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    my $fd;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    if ( !open( $fd, '<', $file ) ) {[0m[0m
[1;32m==> default:     [37m+        error("Can't open $file: $!");[0m
==> default:     [0m
[1;32m==> default: [37m+        return;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    my $line;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    while ( defined( $line = <$fd> ) ) {[0m
==> default:     [37m+        chomp $line;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m
==> default:     [37m+            my $deps = $1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            return split( /[\n\s]+/, $deps );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+[0m
==> default:     [37m+        # only check until the first non-empty non-comment line[0m
==> default:     [0m
[1;32m==> default: [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    return;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub do_deps {[0m
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        info("Considering dependency $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( !doit($d) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Could not $act dependency $d for $acton, aborting\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub warn_deps {[0m
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Checking dependency $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            warning([0m
==> default:     [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub check_conflicts {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $acton    = shift;[0m
==> default:     [37m+    my $haderror = 0;[0m[0m
[1;32m==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        info("Considering conflict $d for $acton:\n");[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m
==> default:     [0m
[1;32m==> default: [37m+        my $link = "$enabldir/$d$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        my $confcheck = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $confcheck eq 'ok' ) {[0m[0m
[1;32m==> default:     [37m+            error([0m
==> default:     [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # Don't return immediately, there could be several conflicts[0m[0m
[1;32m==> default: 
==> default:     [37m+            $haderror++;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ($haderror) {[0m
==> default:     [37m+        return 0;[0m[0m
[1;32m==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub add_link {[0m
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    # create relative link[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        die("Could not create $link: $!\n");[0m
==> default:     [37m+    }[0m
==> default:     [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub check_link {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    if ( !-e $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -l $link ) {[0m
==> default:     [37m+[0m
==> default:     [37m+            # points to nowhere[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            info("Removing dangling link $link");[0m
==> default:     [37m+            unlink($link) or die "Could not remove $link\n";[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        return 'missing';[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    if ( -e $link && !-l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return "$link is a real file, not touching it";[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( realpath($link) ne realpath($tgt) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return "$link exists but does not point to $tgt, not touching it";[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 'ok';[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub remove_link {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my ($link) = @_;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    if ( -l $link ) {[0m
==> default:     [37m+        unlink($link) or die "Could not remove $link: $!\n";[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+    elsif ( -e $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        error("$link is not a symbolic link, not deleting\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    $request_reload = 1;[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub threaded {[0m
==> default:     [37m+    my $result = "";[0m[0m
[1;32m==> default: 
==> default:     [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m
==> default:     [37m+        if -x '/usr/sbin/apache2ctl';[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( $? != 0 ) {[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+        # config doesn't work[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m
==> default:     [37m+        {[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m[0m
[1;32m==> default: 
==> default:     [37m+            || -e "$enabldir/mpm_event.load" )[0m
==> default:     [37m+        {[0m[0m
[1;32m==> default:     [37m+            return 1;[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Can't determine enabled MPM");[0m
==> default:     [37m+[0m
==> default:     [37m+            # do what user requested[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( $result =~ / no/ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    elsif ( $result =~ / yes/ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 1;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    else {[0m
==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub info {[0m
==> default:     [0m
[1;32m==> default: [37m+    print @_ if !$quiet;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub error {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    print STDERR 'ERROR: ', @_;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub warning {[0m
==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub is_in {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $needle = shift;[0m
==> default:     [37m+    foreach my $e (@_) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 1 if $needle eq $e;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub read_env_file {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $file = shift;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    -r $file or return;[0m
==> default:     [0m
[1;32m==> default: [37m+    my @lines = qx{env - sh -c '. $file && env'};[0m
==> default:     [37m+    if ($?) {[0m
==> default:     [37m+        die "Could not read $file\n";[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach my $l (@lines) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        chomp $l;[0m
==> default:     [37m+        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";[0m
==> default:     [0m
[1;32m==> default: [37m+        $ENV{$1} = $2;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub switch_marker {[0m
==> default:     [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if @_ != 3;[0m
==> default:     [37m+    my $which = shift;[0m
==> default:     [37m+    my $what  = shift;[0m
==> default:     [37m+    my $name  = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    my $mode = "admin";[0m[0m
[1;32m==> default: 
==> default:     [37m+    $mode = "maint" if $maintmode;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    #print("switch_marker $which $what $name\n");[0m
==> default:     [37m+    # TODO: get rid of the magic string(s)[0m
==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $state_marker     = "$state_marker_dir/$name";[0m
==> default:     [37m+    if ( !-d $state_marker_dir ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            || error([0m
==> default:     [0m
[1;32m==> default: [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    # XXX: swap find with perl alternative[0m[0m
[1;32m==> default: 
==> default:     [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m[0m
[1;32m==> default: 
==> default:     [37m+    chomp(@markers);[0m
==> default:     [37m+    foreach (@markers) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        unless ( unlink $_ ) {[0m
==> default:     [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    unless ($purge) {[0m
==> default:     [37m+        qx{touch "$state_marker"};[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if ( $? != 0 ) {[0m
==> default:     [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+        return 1;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2ensite] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2ensite] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2ensite] mode changed to 700[0m
[1;32m==> default: 
==> default:     [32m- change mode from '' to '0700'[0m
==> default:     [32m- change owner from '' to 'root'[0m[0m
[1;32m==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * link[/usr/sbin/a2dissite] action delete[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: link[/usr/sbin/a2dissite] deleted
==> default: 
==> default:     [32m- delete link at /usr/sbin/a2dissite[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * template[/usr/sbin/a2dissite] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dissite] created file /usr/sbin/a2dissite
==> default: 
==> default:     [32m- create new file /usr/sbin/a2dissite[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dissite] updated file contents /usr/sbin/a2dissite[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- update content in file /usr/sbin/a2dissite from none to ce53f4[0m
==> default:     [37m--- /usr/sbin/a2dissite	2016-02-17 14:59:55.715018336 +0000[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+++ /usr/sbin/.a2dissite20160217-1605-amncl1	2016-02-17 14:59:55.715018336 +0000[0m
==> default:     [37m@@ -1 +1,533 @@[0m
==> default:     [0m
[1;32m==> default: [37m+#!/usr/bin/perl -w[0m
==> default:     [37m+#[0m
==> default:     [0m
[1;32m==> default: [37m+# a2enmod by Stefan Fritsch <sf@debian.org>[0m
==> default:     [37m+# Licensed under Apache License 2.0[0m
==> default:     [0m
[1;32m==> default: [37m+#[0m
==> default:     [37m+# The coding style is "perltidy -pbp"[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+use strict;[0m
==> default:     [37m+use Cwd 'realpath';[0m
==> default:     [37m+use File::Spec;[0m
==> default:     [37m+use File::Basename;[0m[0m
[1;32m==> default:     [37m+use File::Path;[0m
==> default:     [37m+use Getopt::Long;[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+my $quiet;[0m[0m
[1;32m==> default:     [37m+my $force;[0m
==> default:     [37m+my $maintmode;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $purge;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+Getopt::Long::Configure('bundling');[0m
==> default:     [37m+GetOptions([0m[0m
[1;32m==> default:     [37m+    'quiet|q'     => \$quiet,[0m
==> default:     [37m+    'force|f'     => \$force,[0m[0m
[1;32m==> default:     [37m+    'maintmode|m' => \$maintmode,[0m
==> default:     [37m+    'purge|p'     => \$purge[0m[0m
[1;32m==> default: 
==> default:     [37m+) or exit 2;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+my $basename = basename($0);[0m
==> default:     [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m
==> default:     [0m
[1;32m==> default: [37m+    or die "$basename call name unknown\n";[0m
==> default:     [0m
[1;32m==> default: [37m+my $act        = $1;[0m
==> default:     [37m+my $obj        = $2;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+my $dir_suffix = $3;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+my $env_file = $ENV{APACHE_ENVVARS}[0m
==> default:     [37m+    || ([0m
==> default:     [37m+    $ENV{APACHE_CONFDIR}[0m
==> default:     [0m
[1;32m==> default: [37m+    ? "$ENV{APACHE_CONFDIR}/envvars"[0m
==> default:     [37m+    : "/etc/apache2$dir_suffix/envvars"[0m
==> default:     [37m+    );[0m[0m
[1;32m==> default: 
==> default:     [37m+$ENV{LANG} = 'C';[0m
==> default:     [37m+read_env_file($env_file);[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+$act .= 'able';[0m
==> default:     [37m+my ( $name, $dir, $sffx, $reload );[0m[0m
[1;32m==> default: 
==> default:     [37m+if ( $obj eq 'mod' ) {[0m
==> default:     [37m+    $obj    = 'module';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $dir    = 'mods';[0m
==> default:     [0m
[1;32m==> default: [37m+    $sffx   = '.load';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'restart';[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+elsif ( $obj eq 'conf' ) {[0m
==> default:     [37m+    $obj    = 'conf';[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default:     [37m+    $reload = 'reload';[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'sites';[0m
==> default:     [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default:     [37m+    $reload = 'reload';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+$name = ucfirst($obj);[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m
==> default:     [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m[0m
[1;32m==> default:     [37m+    || "$confdir/$dir-available";[0m
==> default:     [0m
[1;32m==> default: [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m
==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+$statedir .= "/$obj";[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $request_reload = 0;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $rc = 0;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+if ( !scalar @ARGV ) {[0m
==> default:     [37m+    my @choices = myglob('*');[0m
==> default:     [0m
[1;32m==> default: [37m+    print "Your choices are: @choices\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    my $input = <>;[0m
==> default:     [37m+    @ARGV = split /\s+/, $input;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+my @objs;[0m
==> default:     [0m
[1;32m==> default: [37m+foreach my $arg (@ARGV) {[0m
==> default:     [37m+    $arg =~ s/${sffx}$//;[0m
==> default:     [37m+    my @glob = myglob($arg);[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !@glob ) {[0m
==> default:     [37m+        error("No $obj found matching $arg!\n");[0m[0m
[1;32m==> default:     [37m+        $rc = 1;[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    else {[0m
==> default:     [0m
[1;32m==> default: [37m+        push @objs, @glob;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+foreach my $acton (@objs) {[0m
==> default:     [37m+    doit($acton) or $rc = 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+info([0m
==> default:     [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m
==> default:     [37m+) if $request_reload;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+exit($rc);[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+##############################################################################[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub myglob {[0m
==> default:     [37m+    my $arg = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my @glob = map {[0m
==> default:     [37m+        s{^$choicedir/}{};[0m
==> default:     [0m
[1;32m==> default: [37m+        s{$sffx$}{};[0m
==> default:     [37m+        $_[0m
==> default:     [0m
[1;32m==> default: [37m+    } glob("$choicedir/$arg$sffx");[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    return @glob;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub doit {[0m
==> default:     [37m+    my $acton = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my ( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [37m+        if ( $acton eq 'cgi' && threaded() ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            print[0m
==> default:     [0m
[1;32m==> default: [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m[0m
[1;32m==> default:     [37m+            $acton = 'cgid';[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        $conftgt = "$availdir/$acton.conf";[0m
==> default:     [37m+        if ( -e $conftgt ) {[0m
==> default:     [37m+            $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $tgt  = "$availdir/$acton$sffx";[0m
==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !-e $tgt ) {[0m
==> default:     [37m+        if ( -l $link && !-e $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $act eq 'disable' ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                info("removing dangling symlink $link\n");[0m
==> default:     [37m+                unlink($link);[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m
==> default:     [0m
[1;32m==> default: [37m+                $conflink = "$enabldir/$acton.conf";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( -l $conflink && !-e $conflink ) {[0m[0m
[1;32m==> default:     [37m+                    info("removing dangling symlink $conflink\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                    unlink($conflink);[0m[0m
[1;32m==> default:     [37m+                }[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+                return 1;[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            else {[0m
==> default:     [37m+                error("$link is a dangling symlink!\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+        if ( $purge ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            # exit silently, we are purging anyway[0m
==> default:     [0m
[1;32m==> default: [37m+            return 1;[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        error("$name $acton does not exist!\n");[0m
==> default:     [0m
[1;32m==> default: [37m+        return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    # handle module dependencies[0m
==> default:     [37m+    if ( $obj eq 'module' ) {[0m[0m
[1;32m==> default:     [37m+        if ( $act eq 'enable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( $acton eq 'mpm_itk' ) {[0m
==> default:     [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m[0m
[1;32m==> default: 
==> default:     [37m+                        . "of the official Apache HTTPD. It has seen less "[0m[0m
[1;32m==> default: 
==> default:     [37m+                        . "testing than the official MPM modules." );[0m[0m
[1;32m==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            my @depends = get_deps("$availdir/$acton.load");[0m
==> default:     [0m
[1;32m==> default: [37m+            do_deps( $acton, @depends ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m
==> default:     [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default:     [37m+        else {[0m[0m
[1;32m==> default: 
==> default:     [37m+            my @depending;[0m
==> default:     [0m
[1;32m==> default: [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                my @deps = get_deps($d);[0m
==> default:     [0m
[1;32m==> default: [37m+                if ( is_in( $acton, @deps ) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    $d =~ m,/([^/]+).load$,;[0m
==> default:     [37m+                    push @depending, $1;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( scalar @depending ) {[0m
==> default:     [37m+                if ($force) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    do_deps( $acton, @depending ) or return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                else {[0m
==> default:     [37m+                    error([0m[0m
[1;32m==> default: 
==> default:     [37m+                        "The following modules depend on $acton ",[0m
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    return 0;[0m
==> default:     [37m+                }[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    elsif ( $act eq 'enable' ) {[0m[0m
[1;32m==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m
==> default:     [0m
[1;32m==> default: [37m+        warn_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( $act eq 'enable' ) {[0m
==> default:     [37m+        my $check = check_link( $tgt, $link );[0m[0m
[1;32m==> default:     [37m+        if ( $check eq 'ok' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ($conflink) {[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default:     [37m+                if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+                    info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck eq 'missing' ) {[0m[0m
[1;32m==> default:     [37m+                    print "Enabling config file $acton.conf.\n";[0m
==> default:     [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [37m+                else {[0m
==> default:     [0m
[1;32m==> default: [37m+                    error([0m[0m
[1;32m==> default: 
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+            else {[0m[0m
[1;32m==> default: 
==> default:     [37m+                info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                return 1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        elsif ( $check eq 'missing' ) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            if ($conflink) {[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                # handle .conf file[0m
==> default:     [0m
[1;32m==> default: [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m
==> default:     [37m+                if ( $confcheck eq 'missing' ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+                elsif ( $confcheck ne 'ok' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    error([0m
==> default:     [0m
[1;32m==> default: [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m
==> default:     [0m
[1;32m==> default: [37m+                    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+            print "Enabling $obj $acton.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( $acton eq 'ssl' ) {[0m
==> default:     [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m[0m
[1;32m==> default: 
==> default:     [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m
==> default:     [0m
[1;32m==> default: [37m+                );[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            return add_link( $tgt, $link )[0m[0m
[1;32m==> default:     [37m+                && switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("$name $acton not properly enabled: $check\n");[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    else {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -e $link || -l $link ) {[0m[0m
[1;32m==> default:     [37m+            remove_link($link);[0m
==> default:     [37m+            if ( $conflink && -e $conflink ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                remove_link($conflink);[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [0m
[1;32m==> default: [37m+            print "$name $acton disabled.\n";[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        elsif ( $conflink && -e $conflink ) {[0m
==> default:     [37m+            print "Disabling stale config file $acton.conf.\n";[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            remove_link($conflink);[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        else {[0m
==> default:     [37m+            info("$name $acton already disabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $purge ) {[0m
==> default:     [37m+                switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub get_deps {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $file = shift;[0m
==> default:     [37m+    my $type = shift || "Depends";[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my $fd;[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !open( $fd, '<', $file ) ) {[0m[0m
[1;32m==> default:     [37m+        error("Can't open $file: $!");[0m
==> default:     [37m+        return;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    my $line;[0m
==> default:     [0m
[1;32m==> default: [37m+    while ( defined( $line = <$fd> ) ) {[0m
==> default:     [37m+        chomp $line;[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            my $deps = $1;[0m
==> default:     [37m+            return split( /[\n\s]+/, $deps );[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        # only check until the first non-empty non-comment line[0m
==> default:     [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    return;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub do_deps {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    my $acton = shift;[0m
==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Considering dependency $d for $acton:\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        if ( !doit($d) ) {[0m
==> default:     [37m+            error("Could not $act dependency $d for $acton, aborting\n");[0m
==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub warn_deps {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $acton = shift;[0m
==> default:     [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m[0m
[1;32m==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Checking dependency $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            warning([0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+            );[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub check_conflicts {[0m
==> default:     [37m+    my $acton    = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $haderror = 0;[0m
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default:     [37m+        info("Considering conflict $d for $acton:\n");[0m
==> default:     [37m+[0m
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $link = "$enabldir/$d$sffx";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $confcheck = check_link( $tgt, $link );[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+            error([0m[0m
[1;32m==> default:     [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+            # Don't return immediately, there could be several conflicts[0m[0m
[1;32m==> default: 
==> default:     [37m+            $haderror++;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+    if ($haderror) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub add_link {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    # create relative link[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {[0m
==> default:     [37m+        die("Could not create $link: $!\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    $request_reload = 1;[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub check_link {[0m
==> default:     [0m
[1;32m==> default: [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !-e $link ) {[0m
==> default:     [37m+        if ( -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            # points to nowhere[0m
==> default:     [37m+            info("Removing dangling link $link");[0m
==> default:     [0m
[1;32m==> default: [37m+            unlink($link) or die "Could not remove $link\n";[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        return 'missing';[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+    if ( -e $link && !-l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return "$link is a real file, not touching it";[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( realpath($link) ne realpath($tgt) ) {[0m
==> default:     [37m+        return "$link exists but does not point to $tgt, not touching it";[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    return 'ok';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub remove_link {[0m
==> default:     [37m+    my ($link) = @_;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ( -l $link ) {[0m[0m
[1;32m==> default:     [37m+        unlink($link) or die "Could not remove $link: $!\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    elsif ( -e $link ) {[0m[0m
[1;32m==> default:     [37m+        error("$link is not a symbolic link, not deleting\n");[0m
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub threaded {[0m
==> default:     [37m+    my $result = "";[0m
==> default:     [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m
==> default:     [37m+        if -x '/usr/sbin/apache2ctl';[0m[0m
[1;32m==> default:     [37m+    if ( $? != 0 ) {[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+        # config doesn't work[0m
==> default:     [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        {[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m[0m
[1;32m==> default:     [37m+            || -e "$enabldir/mpm_event.load" )[0m
==> default:     [37m+        {[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 1;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        else {[0m
==> default:     [37m+            error("Can't determine enabled MPM");[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # do what user requested[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( $result =~ / no/ ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 0;[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+    elsif ( $result =~ / yes/ ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 1;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    else {[0m
==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub info {[0m
==> default:     [37m+    print @_ if !$quiet;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub error {[0m
==> default:     [0m
[1;32m==> default: [37m+    print STDERR 'ERROR: ', @_;[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub warning {[0m[0m
[1;32m==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub is_in {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $needle = shift;[0m[0m
[1;32m==> default:     [37m+    foreach my $e (@_) {[0m
==> default:     [37m+        return 1 if $needle eq $e;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub read_env_file {[0m
==> default:     [37m+    my $file = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    -r $file or return;[0m
==> default:     [37m+    my @lines = qx{env - sh -c '. $file && env'};[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ($?) {[0m
==> default:     [37m+        die "Could not read $file\n";[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $l (@lines) {[0m
==> default:     [0m
[1;32m==> default: [37m+        chomp $l;[0m
==> default:     [37m+        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";[0m
==> default:     [0m
[1;32m==> default: [37m+        $ENV{$1} = $2;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub switch_marker {[0m[0m
[1;32m==> default: 
==> default:     [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m[0m
[1;32m==> default:     [37m+        if @_ != 3;[0m
==> default:     [37m+    my $which = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $what  = shift;[0m
==> default:     [37m+    my $name  = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my $mode = "admin";[0m
==> default:     [0m
[1;32m==> default: [37m+    $mode = "maint" if $maintmode;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default:     [37m+    #print("switch_marker $which $what $name\n");[0m[0m
[1;32m==> default:     [37m+    # TODO: get rid of the magic string(s)[0m[0m
[1;32m==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m[0m
[1;32m==> default:     [37m+    my $state_marker     = "$state_marker_dir/$name";[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !-d $state_marker_dir ) {[0m
==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m[0m
[1;32m==> default: 
==> default:     [37m+            || error([0m
==> default:     [0m
[1;32m==> default: [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    # XXX: swap find with perl alternative[0m
==> default:     [0m
[1;32m==> default: [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m
==> default:     [37m+    chomp(@markers);[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach (@markers) {[0m
==> default:     [0m
[1;32m==> default: [37m+        unless ( unlink $_ ) {[0m
==> default:     [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    unless ($purge) {[0m
==> default:     [37m+        qx{touch "$state_marker"};[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if ( $? != 0 ) {[0m
==> default:     [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        return 1;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dissite] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dissite] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dissite] mode changed to 700
==> default: 
==> default:     [0m
[1;32m==> default: [32m- change mode from '' to '0700'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * link[/usr/sbin/a2enmod] action delete[0m
[1;32m==> default:  (skipped due to only_if)[0m
[1;32m==> default:   * template[/usr/sbin/a2enmod] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enmod] backed up to /var/chef/backup/usr/sbin/a2enmod.chef-20160217145955.792389[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enmod] updated file contents /usr/sbin/a2enmod[0m
[1;32m==> default: 
==> default:     [32m- update content in file /usr/sbin/a2enmod from 549dfe to ce53f4[0m
==> default:     [37m--- /usr/sbin/a2enmod	2012-02-07 04:16:57.000000000 +0000[0m
==> default:     [37m+++ /usr/sbin/.a2enmod20160217-1605-490q61	2016-02-17 14:59:55.775047583 +0000[0m
==> default:     [0m
[1;32m==> default: [37m@@ -2,23 +2,31 @@[0m
==> default:     [37m #[0m[0m
[1;32m==> default: 
==> default:     [37m # a2enmod by Stefan Fritsch <sf@debian.org>[0m
==> default:     [37m # Licensed under Apache License 2.0[0m
==> default:     [0m
[1;32m==> default: [37m+#[0m
==> default:     [37m+# The coding style is "perltidy -pbp"[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [0m
[1;32m==> default: [37m use strict;[0m
==> default:     [37m use Cwd 'realpath';[0m
==> default:     [0m
[1;32m==> default: [37m use File::Spec;[0m
==> default:     [0m
[1;32m==> default: [37m use File::Basename;[0m
==> default:     [37m+use File::Path;[0m[0m
[1;32m==> default: 
==> default:     [37m use Getopt::Long;[0m
==> default:     [0m
[1;32m==> default: [37m [0m[0m
[1;32m==> default: 
==> default:     [37m my $quiet;[0m[0m
[1;32m==> default:     [37m my $force;[0m
==> default:     [37m+my $maintmode;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+my $purge;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m Getopt::Long::Configure('bundling');[0m
==> default:     [37m GetOptions([0m
==> default:     [37m-    'quiet|q' => \$quiet,[0m
==> default:     [37m-    'force|f' => \$force[0m[0m
[1;32m==> default:     [37m+    'quiet|q'     => \$quiet,[0m
==> default:     [37m+    'force|f'     => \$force,[0m
==> default:     [37m+    'maintmode|m' => \$maintmode,[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    'purge|p'     => \$purge[0m
==> default:     [37m ) or exit 2;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m my $basename = basename($0);[0m
==> default:     [37m-$basename =~ /^a2(en|dis)(mod|site)((?:-.+)?)$/[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m
==> default:     [37m     or die "$basename call name unknown\n";[0m
==> default:     [0m
[1;32m==> default: [37m my $act        = $1;[0m
==> default:     [37m my $obj        = $2;[0m
==> default:     [37m@@ -30,7 +38,7 @@[0m
==> default:     [0m
[1;32m==> default: [37m     ? "$ENV{APACHE_CONFDIR}/envvars"[0m
==> default:     [37m     : "/etc/apache2$dir_suffix/envvars"[0m[0m
[1;32m==> default:     [37m     );[0m
==> default:     [0m
[1;32m==> default: [37m-$ENV{LANG}='C';[0m
==> default:     [37m+$ENV{LANG} = 'C';[0m
==> default:     [37m read_env_file($env_file);[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [37m $act .= 'able';[0m
==> default:     [37m@@ -41,17 +49,27 @@[0m
==> default:     [37m     $sffx   = '.load';[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m     $reload = 'restart';[0m
==> default:     [37m }[0m
==> default:     [37m+elsif ( $obj eq 'conf' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+    $obj    = 'conf';[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'conf';[0m
==> default:     [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $reload = 'reload';[0m
==> default:     [37m+}[0m
==> default:     [37m else {[0m[0m
[1;32m==> default:     [37m     $dir    = 'sites';[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m-    $sffx   = '';[0m
==> default:     [37m+    $sffx   = '.conf';[0m
==> default:     [37m     $reload = 'reload';[0m[0m
[1;32m==> default:     [37m }[0m
==> default:     [37m $name = ucfirst($obj);[0m
==> default:     [37m [0m[0m
[1;32m==> default:     [37m-my $confdir  = $ENV{APACHE_CONFDIR}                  || "/etc/apache2$dir_suffix";[0m
==> default:     [0m
[1;32m==> default: [37m-my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") } || "$confdir/$dir-available";[0m
==> default:     [37m-my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") }   || "$confdir/$dir-enabled";[0m
==> default:     [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m[0m
[1;32m==> default:     [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m
==> default:     [37m+    || "$confdir/$dir-available";[0m
==> default:     [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m[0m
[1;32m==> default: 
==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m+$statedir .= "/$obj";[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m
==> default:     [37m my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m@@ -70,6 +88,7 @@[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m my @objs;[0m
==> default:     [37m foreach my $arg (@ARGV) {[0m
==> default:     [0m
[1;32m==> default: [37m+    $arg =~ s/${sffx}$//;[0m
==> default:     [37m     my @glob = myglob($arg);[0m
==> default:     [37m     if ( !@glob ) {[0m
==> default:     [37m         error("No $obj found matching $arg!\n");[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -84,8 +103,9 @@[0m
==> default:     [37m     doit($acton) or $rc = 1;[0m[0m
[1;32m==> default:     [37m }[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m-info("To activate the new configuration, you need to run:\n  service apache2 $reload\n")[0m
==> default:     [37m-    if $request_reload;[0m[0m
[1;32m==> default: 
==> default:     [37m+info([0m
==> default:     [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+) if $request_reload;[0m
==> default:     [37m [0m
==> default:     [37m exit($rc);[0m
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m@@ -97,29 +117,20 @@[0m
==> default:     [0m
[1;32m==> default: [37m     my @glob = map {[0m
==> default:     [0m
[1;32m==> default: [37m         s{^$choicedir/}{};[0m
==> default:     [37m         s{$sffx$}{};[0m[0m
[1;32m==> default:     [37m-        s{^000-default$}{default};[0m
==> default:     [37m         $_[0m[0m
[1;32m==> default:     [37m     } glob("$choicedir/$arg$sffx");[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m-    # use same rules as apache's Include directive[0m
==> default:     [37m-    @glob = grep( /^[[:alnum:]][-._[:alnum:]]*$/, @glob );[0m
==> default:     [37m-    @glob = grep( !/\.dpkg/, @glob );[0m
==> default:     [0m
[1;32m==> default: [37m-[0m
==> default:     [37m     return @glob;[0m
==> default:     [0m
[1;32m==> default: [37m }[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m sub doit {[0m[0m
[1;32m==> default:     [37m     my $acton = shift;[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m-    my $prio = "";[0m
==> default:     [37m-    if ( $obj eq 'site' && $acton eq 'default' ) {[0m
==> default:     [0m
[1;32m==> default: [37m-        $prio = '000-';[0m
==> default:     [37m-    }[0m[0m
[1;32m==> default:     [37m-[0m
==> default:     [37m     my ( $conftgt, $conflink );[0m[0m
[1;32m==> default:     [37m     if ( $obj eq 'module' ) {[0m
==> default:     [37m         if ( $acton eq 'cgi' && threaded() ) {[0m[0m
[1;32m==> default:     [37m-            print "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m
==> default:     [37m+            print[0m
==> default:     [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m
==> default:     [0m
[1;32m==> default: [37m             $acton = 'cgid';[0m[0m
[1;32m==> default:     [37m         }[0m
==> default:     [37m [0m
==> default:     [37m@@ -130,20 +141,35 @@[0m
==> default:     [0m
[1;32m==> default: [37m     }[0m
==> default:     [37m [0m
==> default:     [37m     my $tgt  = "$availdir/$acton$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m-    my $link = "$enabldir/$prio$acton$sffx";[0m
==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m     if ( !-e $tgt ) {[0m[0m
[1;32m==> default: 
==> default:     [37m         if ( -l $link && !-e $link ) {[0m
==> default:     [37m-		if ( $act eq 'disable' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m-			info("removing dangling symlink $link\n");[0m
==> default:     [0m
[1;32m==> default: [37m-			unlink($link);[0m
==> default:     [37m-			return 1;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m-		}[0m
==> default:     [37m-		else {[0m
==> default:     [37m-			error("$link is a dangling symlink!\n");[0m[0m
[1;32m==> default:     [37m-		}[0m
==> default:     [37m-	}[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $act eq 'disable' ) {[0m
==> default:     [37m+                info("removing dangling symlink $link\n");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                unlink($link);[0m[0m
[1;32m==> default:     [37m [0m
==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m
==> default:     [37m+                $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+                if ( -l $conflink && !-e $conflink ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                    info("removing dangling symlink $conflink\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                    unlink($conflink);[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+                return 1;[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            else {[0m
==> default:     [37m+                error("$link is a dangling symlink!\n");[0m
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        if ( $purge ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            # exit silently, we are purging anyway[0m
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+[0m
==> default:     [37m         error("$name $acton does not exist!\n");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m         return 0;[0m
==> default:     [37m     }[0m
==> default:     [0m
[1;32m==> default: [37m@@ -151,28 +177,44 @@[0m
==> default:     [37m     # handle module dependencies[0m
==> default:     [37m     if ( $obj eq 'module' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m         if ( $act eq 'enable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m-            my $depends = qx{grep "# Depends:" "$availdir/$acton.load"|cut -f2 -d:};[0m[0m
[1;32m==> default:     [37m-            $depends =~ s,^[\s\n]+,,;[0m
==> default:     [37m-            $depends =~ s,[\s\n]+$,,;[0m[0m
[1;32m==> default:     [37m-            do_deps( $acton, split( /[\n\s]+/, $depends ) ) or return 0;[0m
==> default:     [37m+            if ( $acton eq 'mpm_itk' ) {[0m
==> default:     [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m
==> default:     [0m
[1;32m==> default: [37m+                        . "of the official Apache HTTPD. It has seen less "[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                        . "testing than the official MPM modules." );[0m
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            my @depends = get_deps("$availdir/$acton.load");[0m
==> default:     [37m+            do_deps( $acton, @depends ) or return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m
==> default:     [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m
==> default:     [37m         }[0m
==> default:     [0m
[1;32m==> default: [37m         else {[0m
==> default:     [37m-            my @depends = qx{egrep "# Depends:.*${acton}( |\$)" $enabldir/*.load};[0m
==> default:     [37m-            @depends = grep {s{^.*?/([^/]*?)\.load:.*}{$1}s} @depends;[0m
==> default:     [0m
[1;32m==> default: [37m-            if ( scalar @depends ) {[0m[0m
[1;32m==> default:     [37m+            my @depending;[0m
==> default:     [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m[0m
[1;32m==> default:     [37m+                my @deps = get_deps($d);[0m
==> default:     [37m+                if ( is_in( $acton, @deps ) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    $d =~ m,/([^/]+).load$,;[0m
==> default:     [37m+                    push @depending, $1;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( scalar @depending ) {[0m
==> default:     [37m                 if ($force) {[0m
==> default:     [0m
[1;32m==> default: [37m-                    do_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+                    do_deps( $acton, @depending ) or return 0;[0m[0m
[1;32m==> default:     [37m                 }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m                 else {[0m
==> default:     [37m                     error([0m
==> default:     [37m                         "The following modules depend on $acton ",[0m
==> default:     [37m-                        "and need to be disabled first: @depends\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m
==> default:     [37m                     );[0m[0m
[1;32m==> default:     [37m                     return 0;[0m
==> default:     [37m                 }[0m
==> default:     [0m
[1;32m==> default: [37m             }[0m
==> default:     [37m         }[0m
==> default:     [37m     }[0m[0m
[1;32m==> default: 
==> default:     [37m+    elsif ( $act eq 'enable' ) {[0m
==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m[0m
[1;32m==> default: 
==> default:     [37m+        warn_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [37m     if ( $act eq 'enable' ) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m         my $check = check_link( $tgt, $link );[0m
==> default:     [37m@@ -190,7 +232,9 @@[0m
==> default:     [37m                     add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m                 }[0m[0m
[1;32m==> default:     [37m                 else {[0m[0m
[1;32m==> default: 
==> default:     [37m-                    error("Config file $acton.conf not properly enabled: $confcheck\n");[0m
==> default:     [37m+                    error([0m
==> default:     [0m
[1;32m==> default: [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m
==> default:     [0m
[1;32m==> default: [37m                     return 0;[0m
==> default:     [37m                 }[0m
==> default:     [0m
[1;32m==> default: [37m             }[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -208,17 +252,21 @@[0m
==> default:     [37m                     add_link( $conftgt, $conflink ) or return 0;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m                 }[0m
==> default:     [37m                 elsif ( $confcheck ne 'ok' ) {[0m
==> default:     [0m
[1;32m==> default: [37m-                    error("Config file $acton.conf not properly enabled: $confcheck\n");[0m
==> default:     [37m+                    error([0m[0m
[1;32m==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m
==> default:     [0m
[1;32m==> default: [37m                     return 0;[0m
==> default:     [37m                 }[0m
==> default:     [0m
[1;32m==> default: [37m             }[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m             print "Enabling $obj $acton.\n";[0m
==> default:     [37m             if ( $acton eq 'ssl' ) {[0m
==> default:     [37m-                info("See /usr/share/doc/apache2.2-common/README.Debian.gz on " .[0m
==> default:     [0m
[1;32m==> default: [37m-                     "how to configure SSL and create self-signed certificates.\n");[0m
==> default:     [37m-	    }[0m
==> default:     [37m-            return add_link( $tgt, $link );[0m
==> default:     [0m
[1;32m==> default: [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m[0m
[1;32m==> default:     [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m
==> default:     [37m+                );[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            return add_link( $tgt, $link )[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                && switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [37m         }[0m
==> default:     [37m         else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m             error("$name $acton not properly enabled: $check\n");[0m
==> default:     [37m@@ -231,6 +279,7 @@[0m
==> default:     [37m             if ( $conflink && -e $conflink ) {[0m[0m
[1;32m==> default: 
==> default:     [37m                 remove_link($conflink);[0m
==> default:     [37m             }[0m[0m
[1;32m==> default: 
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [37m             print "$name $acton disabled.\n";[0m
==> default:     [0m
[1;32m==> default: [37m         }[0m
==> default:     [37m         elsif ( $conflink && -e $conflink ) {[0m
==> default:     [37m@@ -239,6 +288,9 @@[0m
==> default:     [0m
[1;32m==> default: [37m         }[0m
==> default:     [0m
[1;32m==> default: [37m         else {[0m
==> default:     [37m             info("$name $acton already disabled\n");[0m
==> default:     [37m+            if ( $purge ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default:     [37m             return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m         }[0m
==> default:     [0m
[1;32m==> default: [37m     }[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -246,6 +298,29 @@[0m
==> default:     [37m     return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m }[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m+sub get_deps {[0m
==> default:     [37m+    my $file = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $type = shift || "Depends";[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my $fd;[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !open( $fd, '<', $file ) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("Can't open $file: $!");[0m
==> default:     [37m+        return;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    my $line;[0m
==> default:     [37m+    while ( defined( $line = <$fd> ) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        chomp $line;[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            my $deps = $1;[0m
==> default:     [37m+            return split( /[\n\s]+/, $deps );[0m
==> default:     [37m+        }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        # only check until the first non-empty non-comment line[0m
==> default:     [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    return;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m sub do_deps {[0m
==> default:     [37m     my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m     foreach my $d (@_) {[0m
==> default:     [37m@@ -258,6 +333,48 @@[0m[0m
[1;32m==> default: 
==> default:     [37m     return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m }[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+sub warn_deps {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $acton = shift;[0m
==> default:     [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Checking dependency $d for $acton:\n");[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m
==> default:     [37m+            warning([0m[0m
[1;32m==> default:     [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m
==> default:     [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub check_conflicts {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $acton    = shift;[0m[0m
[1;32m==> default:     [37m+    my $haderror = 0;[0m
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        info("Considering conflict $d for $acton:\n");[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m
==> default:     [37m+        my $link = "$enabldir/$d$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        my $confcheck = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $confcheck eq 'ok' ) {[0m[0m
[1;32m==> default:     [37m+            error([0m
==> default:     [0m
[1;32m==> default: [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m
==> default:     [37m+            );[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+            # Don't return immediately, there could be several conflicts[0m
==> default:     [37m+            $haderror++;[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ($haderror) {[0m
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m sub add_link {[0m
==> default:     [37m     my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m@@ -307,13 +424,36 @@[0m
==> default:     [37m [0m[0m
[1;32m==> default:     [37m sub threaded {[0m
==> default:     [37m     my $result = "";[0m[0m
[1;32m==> default: 
==> default:     [37m-    $result = qx{/usr/sbin/apache2 -V | grep 'threaded'} if -x '/usr/sbin/apache2';[0m
==> default:     [0m
[1;32m==> default: [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m
==> default:     [37m+        if -x '/usr/sbin/apache2ctl';[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( $? != 0 ) {[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        # config doesn't work[0m
==> default:     [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m[0m
[1;32m==> default:     [37m+        {[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            || -e "$enabldir/mpm_event.load" )[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        {[0m
==> default:     [37m+            return 1;[0m
==> default:     [37m+        }[0m
==> default:     [37m+        else {[0m[0m
[1;32m==> default:     [37m+            error("Can't determine enabled MPM");[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # do what user requested[0m
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m     if ( $result =~ / no/ ) {[0m
==> default:     [37m         return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m     }[0m
==> default:     [0m
[1;32m==> default: [37m-    else {[0m
==> default:     [37m+    elsif ( $result =~ / yes/ ) {[0m
==> default:     [37m         return 1;[0m
==> default:     [37m     }[0m
==> default:     [37m+    else {[0m
==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m }[0m
==> default:     [37m [0m[0m
[1;32m==> default:     [37m sub info {[0m
==> default:     [37m@@ -324,6 +464,18 @@[0m
==> default:     [0m
[1;32m==> default: [37m     print STDERR 'ERROR: ', @_;[0m
==> default:     [37m }[0m
==> default:     [0m
[1;32m==> default: [37m [0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub warning {[0m
==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub is_in {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $needle = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $e (@_) {[0m
==> default:     [37m+        return 1 if $needle eq $e;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    return 0;[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m sub read_env_file {[0m
==> default:     [0m
[1;32m==> default: [37m     my $file = shift;[0m
==> default:     [37m [0m[0m
[1;32m==> default:     [37m@@ -339,4 +491,43 @@[0m
==> default:     [37m         $ENV{$1} = $2;[0m
==> default:     [0m
[1;32m==> default: [37m     }[0m
==> default:     [37m }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub switch_marker {[0m[0m
[1;32m==> default:     [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m
==> default:     [37m+        if @_ != 3;[0m
==> default:     [37m+    my $which = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $what  = shift;[0m
==> default:     [37m+    my $name  = shift;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $mode = "admin";[0m
==> default:     [0m
[1;32m==> default: [37m+    $mode = "maint" if $maintmode;[0m
==> default:     [37m+[0m
==> default:     [37m+    #print("switch_marker $which $what $name\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+    # TODO: get rid of the magic string(s)[0m
==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $state_marker     = "$state_marker_dir/$name";[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !-d $state_marker_dir ) {[0m
==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m[0m
[1;32m==> default: 
==> default:     [37m+            || error([0m
==> default:     [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m
==> default:     [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    # XXX: swap find with perl alternative[0m
==> default:     [0m
[1;32m==> default: [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m
==> default:     [37m+    chomp(@markers);[0m
==> default:     [37m+    foreach (@markers) {[0m
==> default:     [0m
[1;32m==> default: [37m+        unless ( unlink $_ ) {[0m
==> default:     [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [37m+    unless ($purge) {[0m[0m
[1;32m==> default:     [37m+        qx{touch "$state_marker"};[0m
==> default:     [37m+        if ( $? != 0 ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m
==> default:     [37m+        }[0m
==> default:     [37m+        return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enmod] mode changed to 700[0m
[1;32m==> default: 
==> default:     [32m- change mode from '0755' to '0700'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * link[/usr/sbin/a2dismod] action delete[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: link[/usr/sbin/a2dismod] deleted
==> default: 
==> default:     [0m
[1;32m==> default: [32m- delete link at /usr/sbin/a2dismod[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * template[/usr/sbin/a2dismod] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dismod] created file /usr/sbin/a2dismod
==> default: 
==> default:     [32m- create new file /usr/sbin/a2dismod[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dismod] updated file contents /usr/sbin/a2dismod[0m
[1;32m==> default:     [32m- update content in file /usr/sbin/a2dismod from none to ce53f4[0m[0m
[1;32m==> default:     [37m--- /usr/sbin/a2dismod	2016-02-17 14:59:55.827072930 +0000[0m[0m
[1;32m==> default:     [37m+++ /usr/sbin/.a2dismod20160217-1605-t875ks	2016-02-17 14:59:55.827072930 +0000[0m
==> default:     [37m@@ -1 +1,533 @@[0m[0m
[1;32m==> default: 
==> default:     [37m+#!/usr/bin/perl -w[0m
==> default:     [0m
[1;32m==> default: [37m+#[0m
==> default:     [37m+# a2enmod by Stefan Fritsch <sf@debian.org>[0m[0m
[1;32m==> default: 
==> default:     [37m+# Licensed under Apache License 2.0[0m
==> default:     [37m+#[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+# The coding style is "perltidy -pbp"[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+use strict;[0m
==> default:     [37m+use Cwd 'realpath';[0m[0m
[1;32m==> default: 
==> default:     [37m+use File::Spec;[0m[0m
[1;32m==> default:     [37m+use File::Basename;[0m[0m
[1;32m==> default: 
==> default:     [37m+use File::Path;[0m
==> default:     [37m+use Getopt::Long;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $quiet;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $force;[0m
==> default:     [0m
[1;32m==> default: [37m+my $maintmode;[0m
==> default:     [37m+my $purge;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+Getopt::Long::Configure('bundling');[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+GetOptions([0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    'quiet|q'     => \$quiet,[0m
==> default:     [37m+    'force|f'     => \$force,[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    'maintmode|m' => \$maintmode,[0m
==> default:     [37m+    'purge|p'     => \$purge[0m
==> default:     [0m
[1;32m==> default: [37m+) or exit 2;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+my $basename = basename($0);[0m
==> default:     [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m
==> default:     [37m+    or die "$basename call name unknown\n";[0m[0m
[1;32m==> default:     [37m+my $act        = $1;[0m
==> default:     [37m+my $obj        = $2;[0m
==> default:     [37m+my $dir_suffix = $3;[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $env_file = $ENV{APACHE_ENVVARS}[0m[0m
[1;32m==> default:     [37m+    || ([0m
==> default:     [0m
[1;32m==> default: [37m+    $ENV{APACHE_CONFDIR}[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    ? "$ENV{APACHE_CONFDIR}/envvars"[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    : "/etc/apache2$dir_suffix/envvars"[0m
==> default:     [0m
[1;32m==> default: [37m+    );[0m
==> default:     [0m
[1;32m==> default: [37m+$ENV{LANG} = 'C';[0m
==> default:     [0m
[1;32m==> default: [37m+read_env_file($env_file);[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+$act .= 'able';[0m[0m
[1;32m==> default: 
==> default:     [37m+my ( $name, $dir, $sffx, $reload );[0m
==> default:     [37m+if ( $obj eq 'mod' ) {[0m[0m
[1;32m==> default:     [37m+    $obj    = 'module';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $dir    = 'mods';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $sffx   = '.load';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'restart';[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+elsif ( $obj eq 'conf' ) {[0m
==> default:     [37m+    $obj    = 'conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'conf';[0m
==> default:     [37m+    $sffx   = '.conf';[0m
==> default:     [37m+    $reload = 'reload';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+else {[0m
==> default:     [37m+    $dir    = 'sites';[0m
==> default:     [0m
[1;32m==> default: [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    $reload = 'reload';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+$name = ucfirst($obj);[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m[0m
[1;32m==> default:     [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m
==> default:     [37m+    || "$confdir/$dir-available";[0m
==> default:     [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m[0m
[1;32m==> default: 
==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+$statedir .= "/$obj";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m
==> default:     [0m
[1;32m==> default: [37m+my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+my $request_reload = 0;[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+my $rc = 0;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+if ( !scalar @ARGV ) {[0m[0m
[1;32m==> default:     [37m+    my @choices = myglob('*');[0m
==> default:     [37m+    print "Your choices are: @choices\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $input = <>;[0m
==> default:     [37m+    @ARGV = split /\s+/, $input;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+my @objs;[0m[0m
[1;32m==> default:     [37m+foreach my $arg (@ARGV) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $arg =~ s/${sffx}$//;[0m
==> default:     [37m+    my @glob = myglob($arg);[0m
==> default:     [37m+    if ( !@glob ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        error("No $obj found matching $arg!\n");[0m
==> default:     [37m+        $rc = 1;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    else {[0m
==> default:     [0m
[1;32m==> default: [37m+        push @objs, @glob;[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+foreach my $acton (@objs) {[0m
==> default:     [37m+    doit($acton) or $rc = 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+info([0m
==> default:     [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+) if $request_reload;[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+exit($rc);[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+##############################################################################[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub myglob {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $arg = shift;[0m
==> default:     [37m+[0m
==> default:     [37m+    my @glob = map {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        s{^$choicedir/}{};[0m
==> default:     [37m+        s{$sffx$}{};[0m[0m
[1;32m==> default: 
==> default:     [37m+        $_[0m
==> default:     [37m+    } glob("$choicedir/$arg$sffx");[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    return @glob;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub doit {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $acton = shift;[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my ( $conftgt, $conflink );[0m
==> default:     [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $acton eq 'cgi' && threaded() ) {[0m
==> default:     [37m+            print[0m
==> default:     [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+            $acton = 'cgid';[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        $conftgt = "$availdir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( -e $conftgt ) {[0m
==> default:     [37m+            $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+    my $tgt  = "$availdir/$acton$sffx";[0m[0m
[1;32m==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    if ( !-e $tgt ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -l $link && !-e $link ) {[0m
==> default:     [37m+            if ( $act eq 'disable' ) {[0m
==> default:     [37m+                info("removing dangling symlink $link\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                unlink($link);[0m
==> default:     [37m+[0m
==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                $conflink = "$enabldir/$acton.conf";[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+                if ( -l $conflink && !-e $conflink ) {[0m
==> default:     [37m+                    info("removing dangling symlink $conflink\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                    unlink($conflink);[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+                return 1;[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            else {[0m
==> default:     [37m+                error("$link is a dangling symlink!\n");[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        if ( $purge ) {[0m[0m
[1;32m==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            # exit silently, we are purging anyway[0m
==> default:     [0m
[1;32m==> default: [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        error("$name $acton does not exist!\n");[0m
==> default:     [37m+        return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    # handle module dependencies[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [37m+        if ( $act eq 'enable' ) {[0m
==> default:     [37m+            if ( $acton eq 'mpm_itk' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m
==> default:     [37m+                        . "of the official Apache HTTPD. It has seen less "[0m[0m
[1;32m==> default: 
==> default:     [37m+                        . "testing than the official MPM modules." );[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+            my @depends = get_deps("$availdir/$acton.load");[0m[0m
[1;32m==> default: 
==> default:     [37m+            do_deps( $acton, @depends ) or return 0;[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m
==> default:     [0m
[1;32m==> default: [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        else {[0m
==> default:     [37m+            my @depending;[0m[0m
[1;32m==> default:     [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m
==> default:     [37m+                my @deps = get_deps($d);[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( is_in( $acton, @deps ) ) {[0m
==> default:     [37m+                    $d =~ m,/([^/]+).load$,;[0m[0m
[1;32m==> default: 
==> default:     [37m+                    push @depending, $1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+            if ( scalar @depending ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                if ($force) {[0m
==> default:     [37m+                    do_deps( $acton, @depending ) or return 0;[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [37m+                else {[0m[0m
[1;32m==> default: 
==> default:     [37m+                    error([0m
==> default:     [37m+                        "The following modules depend on $acton ",[0m[0m
[1;32m==> default: 
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    elsif ( $act eq 'enable' ) {[0m
==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m[0m
[1;32m==> default:     [37m+        warn_deps( $acton, @depends ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( $act eq 'enable' ) {[0m[0m
[1;32m==> default:     [37m+        my $check = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $check eq 'ok' ) {[0m
==> default:     [37m+            if ($conflink) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+                # handle .conf file[0m
==> default:     [0m
[1;32m==> default: [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m
==> default:     [37m+                if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+                    info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 1;[0m
==> default:     [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck eq 'missing' ) {[0m[0m
[1;32m==> default:     [37m+                    print "Enabling config file $acton.conf.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+                else {[0m[0m
[1;32m==> default: 
==> default:     [37m+                    error([0m
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            else {[0m
==> default:     [0m
[1;32m==> default: [37m+                info("$name $acton already enabled\n");[0m
==> default:     [37m+                return 1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        elsif ( $check eq 'missing' ) {[0m
==> default:     [37m+            if ($conflink) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default:     [37m+                if ( $confcheck eq 'missing' ) {[0m
==> default:     [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+                elsif ( $confcheck ne 'ok' ) {[0m
==> default:     [37m+                    error([0m
==> default:     [0m
[1;32m==> default: [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default:     [37m+            print "Enabling $obj $acton.\n";[0m
==> default:     [37m+            if ( $acton eq 'ssl' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m[0m
[1;32m==> default: 
==> default:     [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m
==> default:     [0m
[1;32m==> default: [37m+                );[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            return add_link( $tgt, $link )[0m
==> default:     [37m+                && switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("$name $acton not properly enabled: $check\n");[0m[0m
[1;32m==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    else {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -e $link || -l $link ) {[0m
==> default:     [37m+            remove_link($link);[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $conflink && -e $conflink ) {[0m
==> default:     [37m+                remove_link($conflink);[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            print "$name $acton disabled.\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+        elsif ( $conflink && -e $conflink ) {[0m[0m
[1;32m==> default:     [37m+            print "Disabling stale config file $acton.conf.\n";[0m
==> default:     [37m+            remove_link($conflink);[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            info("$name $acton already disabled\n");[0m
==> default:     [37m+            if ( $purge ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub get_deps {[0m
==> default:     [37m+    my $file = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $type = shift || "Depends";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $fd;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( !open( $fd, '<', $file ) ) {[0m
==> default:     [37m+        error("Can't open $file: $!");[0m[0m
[1;32m==> default:     [37m+        return;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $line;[0m
==> default:     [37m+    while ( defined( $line = <$fd> ) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        chomp $line;[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m
==> default:     [37m+            my $deps = $1;[0m
==> default:     [0m
[1;32m==> default: [37m+            return split( /[\n\s]+/, $deps );[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+        # only check until the first non-empty non-comment line[0m[0m
[1;32m==> default: 
==> default:     [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub do_deps {[0m
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [0m
[1;32m==> default: [37m+        info("Considering dependency $d for $acton:\n");[0m
==> default:     [37m+        if ( !doit($d) ) {[0m[0m
[1;32m==> default:     [37m+            error("Could not $act dependency $d for $acton, aborting\n");[0m
==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub warn_deps {[0m
==> default:     [37m+    my $acton = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default:     [37m+        info("Checking dependency $d for $acton:\n");[0m
==> default:     [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            warning([0m[0m
[1;32m==> default:     [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m[0m
[1;32m==> default:     [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub check_conflicts {[0m
==> default:     [37m+    my $acton    = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $haderror = 0;[0m
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default:     [37m+        info("Considering conflict $d for $acton:\n");[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m[0m
[1;32m==> default:     [37m+        my $link = "$enabldir/$d$sffx";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $confcheck = check_link( $tgt, $link );[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+            error([0m[0m
[1;32m==> default: 
==> default:     [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # Don't return immediately, there could be several conflicts[0m
==> default:     [37m+            $haderror++;[0m[0m
[1;32m==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ($haderror) {[0m[0m
[1;32m==> default:     [37m+        return 0;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub add_link {[0m
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    # create relative link[0m
==> default:     [37m+    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {[0m[0m
[1;32m==> default:     [37m+        die("Could not create $link: $!\n");[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    $request_reload = 1;[0m[0m
[1;32m==> default:     [37m+    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub check_link {[0m
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    if ( !-e $link ) {[0m
==> default:     [37m+        if ( -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+            # points to nowhere[0m[0m
[1;32m==> default:     [37m+            info("Removing dangling link $link");[0m
==> default:     [37m+            unlink($link) or die "Could not remove $link\n";[0m[0m
[1;32m==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        return 'missing';[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    if ( -e $link && !-l $link ) {[0m[0m
[1;32m==> default:     [37m+        return "$link is a real file, not touching it";[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( realpath($link) ne realpath($tgt) ) {[0m
==> default:     [37m+        return "$link exists but does not point to $tgt, not touching it";[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    return 'ok';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub remove_link {[0m
==> default:     [37m+    my ($link) = @_;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ( -l $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        unlink($link) or die "Could not remove $link: $!\n";[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    elsif ( -e $link ) {[0m
==> default:     [37m+        error("$link is not a symbolic link, not deleting\n");[0m[0m
[1;32m==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub threaded {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $result = "";[0m
==> default:     [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m
==> default:     [0m
[1;32m==> default: [37m+        if -x '/usr/sbin/apache2ctl';[0m
==> default:     [37m+    if ( $? != 0 ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        # config doesn't work[0m
==> default:     [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m[0m
[1;32m==> default: 
==> default:     [37m+        {[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m
==> default:     [37m+            || -e "$enabldir/mpm_event.load" )[0m[0m
[1;32m==> default: 
==> default:     [37m+        {[0m
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        else {[0m
==> default:     [37m+            error("Can't determine enabled MPM");[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # do what user requested[0m
==> default:     [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( $result =~ / no/ ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    elsif ( $result =~ / yes/ ) {[0m
==> default:     [37m+        return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    else {[0m[0m
[1;32m==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub info {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    print @_ if !$quiet;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub error {[0m
==> default:     [37m+    print STDERR 'ERROR: ', @_;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+sub warning {[0m
==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub is_in {[0m
==> default:     [37m+    my $needle = shift;[0m[0m
[1;32m==> default:     [37m+    foreach my $e (@_) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 1 if $needle eq $e;[0m
==> default:     [37m+    }[0m
==> default:     [37m+    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub read_env_file {[0m
==> default:     [37m+    my $file = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    -r $file or return;[0m[0m
[1;32m==> default:     [37m+    my @lines = qx{env - sh -c '. $file && env'};[0m
==> default:     [37m+    if ($?) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        die "Could not read $file\n";[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $l (@lines) {[0m
==> default:     [37m+        chomp $l;[0m[0m
[1;32m==> default: 
==> default:     [37m+        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";[0m
==> default:     [37m+        $ENV{$1} = $2;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub switch_marker {[0m
==> default:     [0m
[1;32m==> default: [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m
==> default:     [37m+        if @_ != 3;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $which = shift;[0m
==> default:     [37m+    my $what  = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $name  = shift;[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my $mode = "admin";[0m
==> default:     [37m+    $mode = "maint" if $maintmode;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    #print("switch_marker $which $what $name\n");[0m
==> default:     [37m+    # TODO: get rid of the magic string(s)[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m
==> default:     [0m
[1;32m==> default: [37m+    my $state_marker     = "$state_marker_dir/$name";[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( !-d $state_marker_dir ) {[0m
==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            || error([0m
==> default:     [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    # XXX: swap find with perl alternative[0m
==> default:     [0m
[1;32m==> default: [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m
==> default:     [37m+    chomp(@markers);[0m
==> default:     [37m+    foreach (@markers) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        unless ( unlink $_ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    unless ($purge) {[0m
==> default:     [37m+        qx{touch "$state_marker"};[0m[0m
[1;32m==> default:     [37m+        if ( $? != 0 ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 1;[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dismod] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dismod] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2dismod] mode changed to 700[0m
[1;32m==> default: 
==> default:     [32m- change mode from '' to '0700'[0m[0m
[1;32m==> default: 
==> default:     [32m- change owner from '' to 'root'[0m[0m
[1;32m==> default: 
==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * link[/usr/sbin/a2enconf] action delete[0m
[1;32m==> default:  (skipped due to only_if)[0m
[1;32m==> default:   * template[/usr/sbin/a2enconf] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enconf] created file /usr/sbin/a2enconf
==> default: 
==> default:     [32m- create new file /usr/sbin/a2enconf[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enconf] updated file contents /usr/sbin/a2enconf[0m
[1;32m==> default:     [32m- update content in file /usr/sbin/a2enconf from none to ce53f4[0m
==> default:     [0m
[1;32m==> default: [37m--- /usr/sbin/a2enconf	2016-02-17 14:59:55.887102174 +0000[0m
==> default:     [37m+++ /usr/sbin/.a2enconf20160217-1605-1icmwn1	2016-02-17 14:59:55.887102174 +0000[0m
==> default:     [0m
[1;32m==> default: [37m@@ -1 +1,533 @@[0m[0m
[1;32m==> default: 
==> default:     [37m+#!/usr/bin/perl -w[0m
==> default:     [37m+#[0m
==> default:     [0m
[1;32m==> default: [37m+# a2enmod by Stefan Fritsch <sf@debian.org>[0m
==> default:     [37m+# Licensed under Apache License 2.0[0m[0m
[1;32m==> default: 
==> default:     [37m+#[0m
==> default:     [37m+# The coding style is "perltidy -pbp"[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+use strict;[0m[0m
[1;32m==> default: 
==> default:     [37m+use Cwd 'realpath';[0m[0m
[1;32m==> default: 
==> default:     [37m+use File::Spec;[0m
==> default:     [37m+use File::Basename;[0m
==> default:     [0m
[1;32m==> default: [37m+use File::Path;[0m
==> default:     [37m+use Getopt::Long;[0m[0m
[1;32m==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $quiet;[0m
==> default:     [37m+my $force;[0m
==> default:     [37m+my $maintmode;[0m[0m
[1;32m==> default:     [37m+my $purge;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+Getopt::Long::Configure('bundling');[0m
==> default:     [0m
[1;32m==> default: [37m+GetOptions([0m
==> default:     [37m+    'quiet|q'     => \$quiet,[0m
==> default:     [0m
[1;32m==> default: [37m+    'force|f'     => \$force,[0m
==> default:     [37m+    'maintmode|m' => \$maintmode,[0m[0m
[1;32m==> default:     [37m+    'purge|p'     => \$purge[0m
==> default:     [37m+) or exit 2;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $basename = basename($0);[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    or die "$basename call name unknown\n";[0m
==> default:     [37m+my $act        = $1;[0m[0m
[1;32m==> default:     [37m+my $obj        = $2;[0m
==> default:     [37m+my $dir_suffix = $3;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $env_file = $ENV{APACHE_ENVVARS}[0m[0m
[1;32m==> default: 
==> default:     [37m+    || ([0m
==> default:     [37m+    $ENV{APACHE_CONFDIR}[0m[0m
[1;32m==> default: 
==> default:     [37m+    ? "$ENV{APACHE_CONFDIR}/envvars"[0m
==> default:     [0m
[1;32m==> default: [37m+    : "/etc/apache2$dir_suffix/envvars"[0m
==> default:     [37m+    );[0m
==> default:     [0m
[1;32m==> default: [37m+$ENV{LANG} = 'C';[0m
==> default:     [37m+read_env_file($env_file);[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+$act .= 'able';[0m
==> default:     [37m+my ( $name, $dir, $sffx, $reload );[0m[0m
[1;32m==> default: 
==> default:     [37m+if ( $obj eq 'mod' ) {[0m
==> default:     [37m+    $obj    = 'module';[0m
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'mods';[0m
==> default:     [37m+    $sffx   = '.load';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'restart';[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+elsif ( $obj eq 'conf' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+    $obj    = 'conf';[0m
==> default:     [37m+    $dir    = 'conf';[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $reload = 'reload';[0m
==> default:     [37m+}[0m
==> default:     [37m+else {[0m[0m
[1;32m==> default: 
==> default:     [37m+    $dir    = 'sites';[0m
==> default:     [37m+    $sffx   = '.conf';[0m
==> default:     [37m+    $reload = 'reload';[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+$name = ucfirst($obj);[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m[0m
[1;32m==> default: 
==> default:     [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m
==> default:     [37m+    || "$confdir/$dir-available";[0m
==> default:     [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m
==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+$statedir .= "/$obj";[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+my $request_reload = 0;[0m
==> default:     [37m+[0m
==> default:     [37m+my $rc = 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+if ( !scalar @ARGV ) {[0m
==> default:     [0m
[1;32m==> default: [37m+    my @choices = myglob('*');[0m
==> default:     [37m+    print "Your choices are: @choices\n";[0m
==> default:     [37m+    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";[0m
==> default:     [37m+    my $input = <>;[0m
==> default:     [0m
[1;32m==> default: [37m+    @ARGV = split /\s+/, $input;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my @objs;[0m
==> default:     [37m+foreach my $arg (@ARGV) {[0m
==> default:     [37m+    $arg =~ s/${sffx}$//;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my @glob = myglob($arg);[0m
==> default:     [37m+    if ( !@glob ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("No $obj found matching $arg!\n");[0m[0m
[1;32m==> default:     [37m+        $rc = 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    else {[0m
==> default:     [37m+        push @objs, @glob;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+foreach my $acton (@objs) {[0m
==> default:     [37m+    doit($acton) or $rc = 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+info([0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+) if $request_reload;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+exit($rc);[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+##############################################################################[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub myglob {[0m
==> default:     [37m+    my $arg = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my @glob = map {[0m
==> default:     [0m
[1;32m==> default: [37m+        s{^$choicedir/}{};[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        s{$sffx$}{};[0m
==> default:     [37m+        $_[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    } glob("$choicedir/$arg$sffx");[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    return @glob;[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+sub doit {[0m
==> default:     [37m+    my $acton = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my ( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [37m+        if ( $acton eq 'cgi' && threaded() ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            print[0m
==> default:     [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m
==> default:     [0m
[1;32m==> default: [37m+            $acton = 'cgid';[0m
==> default:     [37m+        }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        $conftgt = "$availdir/$acton.conf";[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        if ( -e $conftgt ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my $tgt  = "$availdir/$acton$sffx";[0m[0m
[1;32m==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    if ( !-e $tgt ) {[0m
==> default:     [37m+        if ( -l $link && !-e $link ) {[0m[0m
[1;32m==> default:     [37m+            if ( $act eq 'disable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                info("removing dangling symlink $link\n");[0m
==> default:     [37m+                unlink($link);[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m
==> default:     [37m+                $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+                if ( -l $conflink && !-e $conflink ) {[0m[0m
[1;32m==> default:     [37m+                    info("removing dangling symlink $conflink\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                    unlink($conflink);[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+                return 1;[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+            else {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                error("$link is a dangling symlink!\n");[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+        if ( $purge ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            # exit silently, we are purging anyway[0m
==> default:     [0m
[1;32m==> default: [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        error("$name $acton does not exist!\n");[0m
==> default:     [0m
[1;32m==> default: [37m+        return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    # handle module dependencies[0m
==> default:     [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $act eq 'enable' ) {[0m
==> default:     [37m+            if ( $acton eq 'mpm_itk' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m
==> default:     [37m+                        . "of the official Apache HTTPD. It has seen less "[0m[0m
[1;32m==> default:     [37m+                        . "testing than the official MPM modules." );[0m
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            my @depends = get_deps("$availdir/$acton.load");[0m
==> default:     [37m+            do_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m
==> default:     [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [37m+            my @depending;[0m
==> default:     [0m
[1;32m==> default: [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m
==> default:     [37m+                my @deps = get_deps($d);[0m
==> default:     [37m+                if ( is_in( $acton, @deps ) ) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                    $d =~ m,/([^/]+).load$,;[0m
==> default:     [37m+                    push @depending, $1;[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+            if ( scalar @depending ) {[0m
==> default:     [37m+                if ($force) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                    do_deps( $acton, @depending ) or return 0;[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+                else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                    error([0m[0m
[1;32m==> default: 
==> default:     [37m+                        "The following modules depend on $acton ",[0m
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+                    );[0m
==> default:     [37m+                    return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    elsif ( $act eq 'enable' ) {[0m
==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m[0m
[1;32m==> default:     [37m+        warn_deps( $acton, @depends ) or return 0;[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( $act eq 'enable' ) {[0m
==> default:     [37m+        my $check = check_link( $tgt, $link );[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $check eq 'ok' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ($conflink) {[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( $confcheck eq 'ok' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 1;[0m
==> default:     [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck eq 'missing' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    print "Enabling config file $acton.conf.\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+                else {[0m
==> default:     [37m+                    error([0m[0m
[1;32m==> default: 
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [0m
[1;32m==> default: [37m+                    );[0m
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                }[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            else {[0m
==> default:     [37m+                info("$name $acton already enabled\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        elsif ( $check eq 'missing' ) {[0m
==> default:     [37m+            if ($conflink) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( $confcheck eq 'missing' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck ne 'ok' ) {[0m[0m
[1;32m==> default:     [37m+                    error([0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+            print "Enabling $obj $acton.\n";[0m
==> default:     [37m+            if ( $acton eq 'ssl' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m
==> default:     [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m
==> default:     [37m+                );[0m[0m
[1;32m==> default:     [37m+            }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            return add_link( $tgt, $link )[0m
==> default:     [37m+                && switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        else {[0m[0m
[1;32m==> default:     [37m+            error("$name $acton not properly enabled: $check\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if ( -e $link || -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            remove_link($link);[0m
==> default:     [0m
[1;32m==> default: [37m+            if ( $conflink && -e $conflink ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                remove_link($conflink);[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default: 
==> default:     [37m+            print "$name $acton disabled.\n";[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        elsif ( $conflink && -e $conflink ) {[0m
==> default:     [37m+            print "Disabling stale config file $acton.conf.\n";[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            remove_link($conflink);[0m
==> default:     [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            info("$name $acton already disabled\n");[0m
==> default:     [37m+            if ( $purge ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub get_deps {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $file = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    my $type = shift || "Depends";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    my $fd;[0m[0m
[1;32m==> default:     [37m+    if ( !open( $fd, '<', $file ) ) {[0m
==> default:     [37m+        error("Can't open $file: $!");[0m[0m
[1;32m==> default:     [37m+        return;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    my $line;[0m
==> default:     [37m+    while ( defined( $line = <$fd> ) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        chomp $line;[0m
==> default:     [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m[0m
[1;32m==> default:     [37m+            my $deps = $1;[0m
==> default:     [37m+            return split( /[\n\s]+/, $deps );[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+[0m
==> default:     [37m+        # only check until the first non-empty non-comment line[0m[0m
[1;32m==> default: 
==> default:     [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    return;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub do_deps {[0m
==> default:     [37m+    my $acton = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        info("Considering dependency $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        if ( !doit($d) ) {[0m
==> default:     [37m+            error("Could not $act dependency $d for $acton, aborting\n");[0m
==> default:     [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub warn_deps {[0m
==> default:     [0m
[1;32m==> default: [37m+    my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m
==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [0m
[1;32m==> default: [37m+        info("Checking dependency $d for $acton:\n");[0m
==> default:     [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            warning([0m
==> default:     [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m
==> default:     [0m
[1;32m==> default: [37m+            );[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub check_conflicts {[0m
==> default:     [37m+    my $acton    = shift;[0m
==> default:     [37m+    my $haderror = 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        info("Considering conflict $d for $acton:\n");[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m
==> default:     [0m
[1;32m==> default: [37m+        my $link = "$enabldir/$d$sffx";[0m
==> default:     [37m+[0m
==> default:     [37m+        my $confcheck = check_link( $tgt, $link );[0m[0m
[1;32m==> default:     [37m+        if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+            error([0m[0m
[1;32m==> default: 
==> default:     [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+            );[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # Don't return immediately, there could be several conflicts[0m
==> default:     [37m+            $haderror++;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ($haderror) {[0m
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub add_link {[0m
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    # create relative link[0m
==> default:     [37m+    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        die("Could not create $link: $!\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub check_link {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    if ( !-e $link ) {[0m
==> default:     [37m+        if ( -l $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+            # points to nowhere[0m[0m
[1;32m==> default: 
==> default:     [37m+            info("Removing dangling link $link");[0m
==> default:     [0m
[1;32m==> default: [37m+            unlink($link) or die "Could not remove $link\n";[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        return 'missing';[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    if ( -e $link && !-l $link ) {[0m
==> default:     [37m+        return "$link is a real file, not touching it";[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( realpath($link) ne realpath($tgt) ) {[0m
==> default:     [37m+        return "$link exists but does not point to $tgt, not touching it";[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    return 'ok';[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub remove_link {[0m[0m
[1;32m==> default:     [37m+    my ($link) = @_;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( -l $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        unlink($link) or die "Could not remove $link: $!\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    elsif ( -e $link ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        error("$link is not a symbolic link, not deleting\n");[0m
==> default:     [37m+        return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    $request_reload = 1;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+sub threaded {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    my $result = "";[0m
==> default:     [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m[0m
[1;32m==> default: 
==> default:     [37m+        if -x '/usr/sbin/apache2ctl';[0m
==> default:     [37m+    if ( $? != 0 ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        # config doesn't work[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m
==> default:     [0m
[1;32m==> default: [37m+        {[0m
==> default:     [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m[0m
[1;32m==> default: 
==> default:     [37m+            || -e "$enabldir/mpm_event.load" )[0m
==> default:     [0m
[1;32m==> default: [37m+        {[0m
==> default:     [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Can't determine enabled MPM");[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+            # do what user requested[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    if ( $result =~ / no/ ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    elsif ( $result =~ / yes/ ) {[0m
==> default:     [37m+        return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    else {[0m[0m
[1;32m==> default: 
==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub info {[0m[0m
[1;32m==> default:     [37m+    print @_ if !$quiet;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+sub error {[0m
==> default:     [0m
[1;32m==> default: [37m+    print STDERR 'ERROR: ', @_;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub warning {[0m
==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+sub is_in {[0m
==> default:     [37m+    my $needle = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+    foreach my $e (@_) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 1 if $needle eq $e;[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub read_env_file {[0m
==> default:     [37m+    my $file = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    -r $file or return;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my @lines = qx{env - sh -c '. $file && env'};[0m
==> default:     [0m
[1;32m==> default: [37m+    if ($?) {[0m
==> default:     [37m+        die "Could not read $file\n";[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    foreach my $l (@lines) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        chomp $l;[0m
==> default:     [37m+        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";[0m[0m
[1;32m==> default:     [37m+        $ENV{$1} = $2;[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+sub switch_marker {[0m[0m
[1;32m==> default: 
==> default:     [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m
==> default:     [0m
[1;32m==> default: [37m+        if @_ != 3;[0m[0m
[1;32m==> default:     [37m+    my $which = shift;[0m
==> default:     [37m+    my $what  = shift;[0m
==> default:     [37m+    my $name  = shift;[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    my $mode = "admin";[0m
==> default:     [0m
[1;32m==> default: [37m+    $mode = "maint" if $maintmode;[0m
==> default:     [37m+[0m
==> default:     [37m+    #print("switch_marker $which $what $name\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+    # TODO: get rid of the magic string(s)[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $state_marker     = "$state_marker_dir/$name";[0m[0m
[1;32m==> default:     [37m+    if ( !-d $state_marker_dir ) {[0m[0m
[1;32m==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m
==> default:     [0m
[1;32m==> default: [37m+            || error([0m
==> default:     [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    # XXX: swap find with perl alternative[0m[0m
[1;32m==> default: 
==> default:     [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m
==> default:     [37m+    chomp(@markers);[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach (@markers) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        unless ( unlink $_ ) {[0m
==> default:     [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    unless ($purge) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        qx{touch "$state_marker"};[0m
==> default:     [37m+        if ( $? != 0 ) {[0m
==> default:     [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        return 1;[0m
==> default:     [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enconf] owner changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enconf] group changed to 0[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2enconf] mode changed to 700[0m
[1;32m==> default: 
==> default:     [32m- change mode from '' to '0700'[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * link[/usr/sbin/a2disconf] action delete[0m
[1;32m==> default:  (skipped due to only_if)[0m
[1;32m==> default:   * template[/usr/sbin/a2disconf] action create[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2disconf] created file /usr/sbin/a2disconf
==> default: 
==> default:     [32m- create new file /usr/sbin/a2disconf[0m[0m
[1;32m==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2disconf] updated file contents /usr/sbin/a2disconf[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- update content in file /usr/sbin/a2disconf from none to ce53f4[0m
==> default:     [37m--- /usr/sbin/a2disconf	2016-02-17 14:59:55.939127521 +0000[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+++ /usr/sbin/.a2disconf20160217-1605-f2k0dn	2016-02-17 14:59:55.939127521 +0000[0m
==> default:     [37m@@ -1 +1,533 @@[0m
==> default:     [0m
[1;32m==> default: [37m+#!/usr/bin/perl -w[0m
==> default:     [0m
[1;32m==> default: [37m+#[0m
==> default:     [0m
[1;32m==> default: [37m+# a2enmod by Stefan Fritsch <sf@debian.org>[0m
==> default:     [37m+# Licensed under Apache License 2.0[0m
==> default:     [0m
[1;32m==> default: [37m+#[0m
==> default:     [37m+# The coding style is "perltidy -pbp"[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+use strict;[0m
==> default:     [0m
[1;32m==> default: [37m+use Cwd 'realpath';[0m
==> default:     [37m+use File::Spec;[0m
==> default:     [0m
[1;32m==> default: [37m+use File::Basename;[0m[0m
[1;32m==> default: 
==> default:     [37m+use File::Path;[0m
==> default:     [37m+use Getopt::Long;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $quiet;[0m[0m
[1;32m==> default:     [37m+my $force;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $maintmode;[0m
==> default:     [37m+my $purge;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+Getopt::Long::Configure('bundling');[0m
==> default:     [37m+GetOptions([0m
==> default:     [0m
[1;32m==> default: [37m+    'quiet|q'     => \$quiet,[0m
==> default:     [37m+    'force|f'     => \$force,[0m[0m
[1;32m==> default:     [37m+    'maintmode|m' => \$maintmode,[0m
==> default:     [0m
[1;32m==> default: [37m+    'purge|p'     => \$purge[0m
==> default:     [0m
[1;32m==> default: [37m+) or exit 2;[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $basename = basename($0);[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+$basename =~ /^a2(en|dis)(mod|site|conf)((?:-.+)?)$/[0m
==> default:     [37m+    or die "$basename call name unknown\n";[0m[0m
[1;32m==> default:     [37m+my $act        = $1;[0m
==> default:     [37m+my $obj        = $2;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $dir_suffix = $3;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+my $env_file = $ENV{APACHE_ENVVARS}[0m[0m
[1;32m==> default:     [37m+    || ([0m
==> default:     [0m
[1;32m==> default: [37m+    $ENV{APACHE_CONFDIR}[0m
==> default:     [37m+    ? "$ENV{APACHE_CONFDIR}/envvars"[0m
==> default:     [37m+    : "/etc/apache2$dir_suffix/envvars"[0m[0m
[1;32m==> default: 
==> default:     [37m+    );[0m
==> default:     [0m
[1;32m==> default: [37m+$ENV{LANG} = 'C';[0m
==> default:     [37m+read_env_file($env_file);[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+$act .= 'able';[0m[0m
[1;32m==> default: 
==> default:     [37m+my ( $name, $dir, $sffx, $reload );[0m
==> default:     [37m+if ( $obj eq 'mod' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+    $obj    = 'module';[0m
==> default:     [37m+    $dir    = 'mods';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $sffx   = '.load';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'restart';[0m
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+elsif ( $obj eq 'conf' ) {[0m
==> default:     [37m+    $obj    = 'conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $dir    = 'conf';[0m[0m
[1;32m==> default: 
==> default:     [37m+    $sffx   = '.conf';[0m
==> default:     [0m
[1;32m==> default: [37m+    $reload = 'reload';[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+else {[0m[0m
[1;32m==> default:     [37m+    $dir    = 'sites';[0m
==> default:     [37m+    $sffx   = '.conf';[0m[0m
[1;32m==> default:     [37m+    $reload = 'reload';[0m
==> default:     [37m+}[0m
==> default:     [37m+$name = ucfirst($obj);[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+my $confdir = $ENV{APACHE_CONFDIR} || "/etc/apache2$dir_suffix";[0m
==> default:     [37m+my $availdir = $ENV{ uc("APACHE_${dir}_AVAILABLE") }[0m
==> default:     [37m+    || "$confdir/$dir-available";[0m[0m
[1;32m==> default: 
==> default:     [37m+my $enabldir = $ENV{ uc("APACHE_${dir}_ENABLED") } || "$confdir/$dir-enabled";[0m[0m
[1;32m==> default:     [37m+my $statedir = $ENV{ uc("APACHE_STATE_DIRECTORY") } || "/usr/lib/apache2";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+$statedir .= "/$obj";[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+my $choicedir = $act eq 'enable' ? $availdir : $enabldir;[0m[0m
[1;32m==> default: 
==> default:     [37m+my $linkdir = File::Spec->abs2rel( $availdir, $enabldir );[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+my $request_reload = 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+my $rc = 0;[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+if ( !scalar @ARGV ) {[0m[0m
[1;32m==> default:     [37m+    my @choices = myglob('*');[0m
==> default:     [0m
[1;32m==> default: [37m+    print "Your choices are: @choices\n";[0m
==> default:     [37m+    print "Which ${obj}(s) do you want to $act (wildcards ok)?\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $input = <>;[0m
==> default:     [37m+    @ARGV = split /\s+/, $input;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+my @objs;[0m
==> default:     [0m
[1;32m==> default: [37m+foreach my $arg (@ARGV) {[0m
==> default:     [37m+    $arg =~ s/${sffx}$//;[0m[0m
[1;32m==> default:     [37m+    my @glob = myglob($arg);[0m
==> default:     [0m
[1;32m==> default: [37m+    if ( !@glob ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("No $obj found matching $arg!\n");[0m
==> default:     [37m+        $rc = 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    else {[0m[0m
[1;32m==> default: 
==> default:     [37m+        push @objs, @glob;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+foreach my $acton (@objs) {[0m
==> default:     [37m+    doit($acton) or $rc = 1;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+info([0m
==> default:     [37m+    "To activate the new configuration, you need to run:\n  service apache2 $reload\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+) if $request_reload;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+exit($rc);[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+##############################################################################[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub myglob {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $arg = shift;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    my @glob = map {[0m
==> default:     [0m
[1;32m==> default: [37m+        s{^$choicedir/}{};[0m
==> default:     [37m+        s{$sffx$}{};[0m[0m
[1;32m==> default:     [37m+        $_[0m
==> default:     [37m+    } glob("$choicedir/$arg$sffx");[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    return @glob;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub doit {[0m
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    my ( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( $obj eq 'module' ) {[0m
==> default:     [37m+        if ( $acton eq 'cgi' && threaded() ) {[0m
==> default:     [37m+            print[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                "Your MPM seems to be threaded. Selecting cgid instead of cgi.\n";[0m
==> default:     [37m+            $acton = 'cgid';[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        $conftgt = "$availdir/$acton.conf";[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -e $conftgt ) {[0m
==> default:     [37m+            $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+    my $tgt  = "$availdir/$acton$sffx";[0m
==> default:     [37m+    my $link = "$enabldir/$acton$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    if ( !-e $tgt ) {[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( -l $link && !-e $link ) {[0m
==> default:     [37m+            if ( $act eq 'disable' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                info("removing dangling symlink $link\n");[0m
==> default:     [0m
[1;32m==> default: [37m+                unlink($link);[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+                # force a .conf path. It may exist as dangling link, too[0m[0m
[1;32m==> default: 
==> default:     [37m+                $conflink = "$enabldir/$acton.conf";[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+                if ( -l $conflink && !-e $conflink ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    info("removing dangling symlink $conflink\n");[0m
==> default:     [37m+                    unlink($conflink);[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+                return 1;[0m
==> default:     [37m+            }[0m
==> default:     [37m+            else {[0m[0m
[1;32m==> default: 
==> default:     [37m+                error("$link is a dangling symlink!\n");[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $purge ) {[0m
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+            # exit silently, we are purging anyway[0m
==> default:     [37m+            return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("$name $acton does not exist!\n");[0m
==> default:     [37m+        return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    # handle module dependencies[0m[0m
[1;32m==> default: 
==> default:     [37m+    if ( $obj eq 'module' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( $act eq 'enable' ) {[0m[0m
[1;32m==> default:     [37m+            if ( $acton eq 'mpm_itk' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                warning(  "MPM_ITK is a third party module that is not part "[0m
==> default:     [37m+                        . "of the official Apache HTTPD. It has seen less "[0m[0m
[1;32m==> default:     [37m+                        . "testing than the official MPM modules." );[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+            my @depends = get_deps("$availdir/$acton.load");[0m
==> default:     [0m
[1;32m==> default: [37m+            do_deps( $acton, @depends ) or return 0;[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            my @conflicts = get_deps( "$availdir/$acton.load", "Conflicts" );[0m[0m
[1;32m==> default: 
==> default:     [37m+            check_conflicts( $acton, @conflicts ) or return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default: 
==> default:     [37m+        else {[0m
==> default:     [37m+            my @depending;[0m[0m
[1;32m==> default: 
==> default:     [37m+            foreach my $d ( glob("$enabldir/*.load") ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                my @deps = get_deps($d);[0m
==> default:     [37m+                if ( is_in( $acton, @deps ) ) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                    $d =~ m,/([^/]+).load$,;[0m
==> default:     [37m+                    push @depending, $1;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [37m+            if ( scalar @depending ) {[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                if ($force) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    do_deps( $acton, @depending ) or return 0;[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [37m+                else {[0m[0m
[1;32m==> default:     [37m+                    error([0m
==> default:     [37m+                        "The following modules depend on $acton ",[0m[0m
[1;32m==> default: 
==> default:     [37m+                        "and need to be disabled first: @depending\n"[0m[0m
[1;32m==> default:     [37m+                    );[0m[0m
[1;32m==> default: 
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    elsif ( $act eq 'enable' ) {[0m
==> default:     [37m+        my @depends = get_deps("$availdir/$acton$sffx");[0m[0m
[1;32m==> default: 
==> default:     [37m+        warn_deps( $acton, @depends ) or return 0;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ( $act eq 'enable' ) {[0m[0m
[1;32m==> default:     [37m+        my $check = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $check eq 'ok' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ($conflink) {[0m
==> default:     [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+                # handle .conf file[0m[0m
[1;32m==> default: 
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( $confcheck eq 'ok' ) {[0m
==> default:     [37m+                    info("$name $acton already enabled\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck eq 'missing' ) {[0m
==> default:     [0m
[1;32m==> default: [37m+                    print "Enabling config file $acton.conf.\n";[0m
==> default:     [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+                else {[0m
==> default:     [0m
[1;32m==> default: [37m+                    error([0m
==> default:     [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [0m
[1;32m==> default: [37m+                    );[0m
==> default:     [37m+                    return 0;[0m[0m
[1;32m==> default:     [37m+                }[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            else {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+                info("$name $acton already enabled\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+                return 1;[0m
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        elsif ( $check eq 'missing' ) {[0m
==> default:     [37m+            if ($conflink) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+                # handle .conf file[0m
==> default:     [37m+                my $confcheck = check_link( $conftgt, $conflink );[0m[0m
[1;32m==> default: 
==> default:     [37m+                if ( $confcheck eq 'missing' ) {[0m[0m
[1;32m==> default:     [37m+                    add_link( $conftgt, $conflink ) or return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+                }[0m
==> default:     [37m+                elsif ( $confcheck ne 'ok' ) {[0m[0m
[1;32m==> default:     [37m+                    error([0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                        "Config file $acton.conf not properly enabled: $confcheck\n"[0m
==> default:     [37m+                    );[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+                    return 0;[0m
==> default:     [37m+                }[0m
==> default:     [0m
[1;32m==> default: [37m+            }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+            print "Enabling $obj $acton.\n";[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            if ( $acton eq 'ssl' ) {[0m
==> default:     [37m+                info(     "See /usr/share/doc/apache2/README.Debian.gz on "[0m
==> default:     [0m
[1;32m==> default: [37m+                        . "how to configure SSL and create self-signed certificates.\n"[0m
==> default:     [37m+                );[0m[0m
[1;32m==> default:     [37m+            }[0m[0m
[1;32m==> default:     [37m+            return add_link( $tgt, $link )[0m
==> default:     [0m
[1;32m==> default: [37m+                && switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        else {[0m
==> default:     [37m+            error("$name $acton not properly enabled: $check\n");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    else {[0m
==> default:     [37m+        if ( -e $link || -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            remove_link($link);[0m[0m
[1;32m==> default: 
==> default:     [37m+            if ( $conflink && -e $conflink ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                remove_link($conflink);[0m[0m
[1;32m==> default: 
==> default:     [37m+            }[0m[0m
[1;32m==> default: 
==> default:     [37m+            switch_marker( $obj, $act, $acton );[0m
==> default:     [37m+            print "$name $acton disabled.\n";[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        elsif ( $conflink && -e $conflink ) {[0m
==> default:     [37m+            print "Disabling stale config file $acton.conf.\n";[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+            remove_link($conflink);[0m[0m
[1;32m==> default:     [37m+        }[0m
==> default:     [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            info("$name $acton already disabled\n");[0m
==> default:     [37m+            if ( $purge ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+                switch_marker( $obj, $act, $acton );[0m[0m
[1;32m==> default:     [37m+            }[0m
==> default:     [37m+            return 1;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+sub get_deps {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $file = shift;[0m
==> default:     [37m+    my $type = shift || "Depends";[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+    my $fd;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+    if ( !open( $fd, '<', $file ) ) {[0m
==> default:     [37m+        error("Can't open $file: $!");[0m[0m
[1;32m==> default:     [37m+        return;[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $line;[0m
==> default:     [0m
[1;32m==> default: [37m+    while ( defined( $line = <$fd> ) ) {[0m
==> default:     [37m+        chomp $line;[0m
==> default:     [0m
[1;32m==> default: [37m+        if ( $line =~ /^# $type:\s+(.*?)\s*$/ ) {[0m
==> default:     [37m+            my $deps = $1;[0m
==> default:     [0m
[1;32m==> default: [37m+            return split( /[\n\s]+/, $deps );[0m
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default:     [37m+        # only check until the first non-empty non-comment line[0m
==> default:     [0m
[1;32m==> default: [37m+        last if ( $line !~ /^\s*(?:#.*)?$/ );[0m[0m
[1;32m==> default: 
==> default:     [37m+    }[0m
==> default:     [37m+    return;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub do_deps {[0m
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Considering dependency $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+        if ( !doit($d) ) {[0m
==> default:     [0m
[1;32m==> default: [37m+            error("Could not $act dependency $d for $acton, aborting\n");[0m
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+    }[0m[0m
[1;32m==> default:     [37m+    return 1;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+sub warn_deps {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $acton = shift;[0m[0m
[1;32m==> default:     [37m+    my $modsenabldir = $ENV{APACHE_MODS_ENABLED} || "$confdir/mods-enabled";[0m
==> default:     [37m+    foreach my $d (@_) {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+        info("Checking dependency $d for $acton:\n");[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+        if ( !-e "$modsenabldir/$d.load" ) {[0m
==> default:     [37m+            warning([0m
==> default:     [37m+                "Module $d is not enabled, but $acton depends on it, aborting\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+            );[0m
==> default:     [0m
[1;32m==> default: [37m+            return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+sub check_conflicts {[0m
==> default:     [37m+    my $acton    = shift;[0m[0m
[1;32m==> default: 
==> default:     [37m+    my $haderror = 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+    foreach my $d (@_) {[0m
==> default:     [37m+        info("Considering conflict $d for $acton:\n");[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+        my $tgt  = "$availdir/$d$sffx";[0m[0m
[1;32m==> default: 
==> default:     [37m+        my $link = "$enabldir/$d$sffx";[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+        my $confcheck = check_link( $tgt, $link );[0m
==> default:     [37m+        if ( $confcheck eq 'ok' ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+            error([0m
==> default:     [37m+                "Module $d is enabled - cannot proceed due to conflicts. It needs to be disabled first!\n"[0m[0m
[1;32m==> default: 
==> default:     [37m+            );[0m
==> default:     [37m+[0m[0m
[1;32m==> default:     [37m+            # Don't return immediately, there could be several conflicts[0m
==> default:     [37m+            $haderror++;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    if ($haderror) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return 0;[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m[0m
[1;32m==> default:     [37m+[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+sub add_link {[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    my ( $tgt, $link ) = @_;[0m
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+    # create relative link[0m
==> default:     [37m+    if ( !symlink( File::Spec->abs2rel( $tgt, dirname($link) ), $link ) ) {[0m[0m
[1;32m==> default:     [37m+        die("Could not create $link: $!\n");[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m
==> default:     [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub check_link {[0m[0m
[1;32m==> default: 
==> default:     [37m+    my ( $tgt, $link ) = @_;[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ( !-e $link ) {[0m
==> default:     [37m+        if ( -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+            # points to nowhere[0m
==> default:     [37m+            info("Removing dangling link $link");[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+            unlink($link) or die "Could not remove $link\n";[0m
==> default:     [37m+        }[0m[0m
[1;32m==> default:     [37m+        return 'missing';[0m
==> default:     [37m+    }[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [37m+    if ( -e $link && !-l $link ) {[0m[0m
[1;32m==> default:     [37m+        return "$link is a real file, not touching it";[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [37m+    if ( realpath($link) ne realpath($tgt) ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        return "$link exists but does not point to $tgt, not touching it";[0m
==> default:     [0m
[1;32m==> default: [37m+    }[0m
==> default:     [37m+    return 'ok';[0m
==> default:     [0m
[1;32m==> default: [37m+}[0m[0m
[1;32m==> default: 
==> default:     [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub remove_link {[0m
==> default:     [37m+    my ($link) = @_;[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+    if ( -l $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        unlink($link) or die "Could not remove $link: $!\n";[0m
==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    elsif ( -e $link ) {[0m[0m
[1;32m==> default: 
==> default:     [37m+        error("$link is not a symbolic link, not deleting\n");[0m
==> default:     [37m+        return 0;[0m[0m
[1;32m==> default:     [37m+    }[0m
==> default:     [0m
[1;32m==> default: [37m+    $request_reload = 1;[0m
==> default:     [37m+    return 1;[0m[0m
[1;32m==> default:     [37m+}[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [0m
[1;32m==> default: [37m+sub threaded {[0m
==> default:     [37m+    my $result = "";[0m
==> default:     [0m
[1;32m==> default: [37m+    $result = qx{/usr/sbin/apache2ctl -V | grep 'threaded'}[0m
==> default:     [37m+        if -x '/usr/sbin/apache2ctl';[0m[0m
[1;32m==> default:     [37m+    if ( $? != 0 ) {[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+        # config doesn't work[0m[0m
[1;32m==> default:     [37m+        if ( -e "$enabldir/mpm_prefork.load" || -e "$enabldir/mpm_itk.load" )[0m
==> default:     [37m+        {[0m[0m
[1;32m==> default: 
==> default:     [37m+            return 0;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [37m+        elsif (-e "$enabldir/mpm_worker.load"[0m[0m
[1;32m==> default: 
==> default:     [37m+            || -e "$enabldir/mpm_event.load" )[0m
==> default:     [37m+        {[0m[0m
[1;32m==> default:     [37m+            return 1;[0m[0m
[1;32m==> default: 
==> default:     [37m+        }[0m
==> default:     [0m
[1;32m==> default: [37m+        else {[0m
==> default:     [0m
[1;32m==> default: [37m+            erro[0m
[1;32m==> default: r("Can't determine enabled MPM");[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m+            # do what user requested[0m
==> default:     [37m+            return 0;[0m
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [37m+    if ( $result =~ / no/ ) {[0m
==> default:     [37m+        return 0;[0m
==> default:     [37m+    }[0m
==> default:     [37m+    elsif ( $result =~ / yes/ ) {[0m
==> default:     [37m+        return 1;[0m
==> default:     [37m+    }[0m
==> default:     [37m+    else {[0m
==> default:     [37m+        die("Can't parse output from apache2ctl -V:\n$result\n");[0m
==> default:     [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub info {[0m
==> default:     [37m+    print @_ if !$quiet;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub error {[0m
==> default:     [37m+    print STDERR 'ERROR: ', @_;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub warning {[0m
==> default:     [37m+    print STDERR 'WARNING: ', @_;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub is_in {[0m
==> default:     [37m+    my $needle = shift;[0m
==> default:     [37m+    foreach my $e (@_) {[0m
==> default:     [37m+        return 1 if $needle eq $e;[0m
==> default:     [37m+    }[0m
==> default:     [37m+    return 0;[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub read_env_file {[0m
==> default:     [37m+    my $file = shift;[0m
==> default:     [37m+[0m
==> default:     [37m+    -r $file or return;[0m
==> default:     [37m+    my @lines = qx{env - sh -c '. $file && env'};[0m
==> default:     [37m+    if ($?) {[0m
==> default:     [37m+        die "Could not read $file\n";[0m
==> default:     [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    foreach my $l (@lines) {[0m
==> default:     [37m+        chomp $l;[0m
==> default:     [37m+        $l =~ /^(.*)?=(.*)$/ or die "Could not parse $file\n";[0m
==> default:     [37m+        $ENV{$1} = $2;[0m
==> default:     [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+sub switch_marker {[0m
==> default:     [37m+    die('usage: switch_marker([module|site|conf], [enable|disable], $name)')[0m
==> default:     [37m+        if @_ != 3;[0m
==> default:     [37m+    my $which = shift;[0m
==> default:     [37m+    my $what  = shift;[0m
==> default:     [37m+    my $name  = shift;[0m
==> default:     [37m+[0m
==> default:     [37m+    my $mode = "admin";[0m
==> default:     [37m+    $mode = "maint" if $maintmode;[0m
==> default:     [37m+[0m
==> default:     [37m+    #print("switch_marker $which $what $name\n");[0m
==> default:     [37m+    # TODO: get rid of the magic string(s)[0m
==> default:     [37m+    my $state_marker_dir = "$statedir/$what" . "d" . "_by_$mode";[0m
==> default:     [37m+    my $state_marker     = "$state_marker_dir/$name";[0m
==> default:     [37m+    if ( !-d $state_marker_dir ) {[0m
==> default:     [37m+        File::Path::mkpath("$state_marker_dir")[0m
==> default:     [37m+            || error([0m
==> default:     [37m+            "Failed to create marker directory: '$state_marker_dir'\n");[0m
==> default:     [37m+    }[0m
==> default:     [37m+[0m
==> default:     [37m+    # XXX: swap find with perl alternative[0m
==> default:     [37m+    my @markers = qx{find "$statedir" -type f -a -name "$name"};[0m
==> default:     [37m+    chomp(@markers);[0m
==> default:     [37m+    foreach (@markers) {[0m
==> default:     [37m+        unless ( unlink $_ ) {[0m
==> default:     [37m+            error("Failed to remove old marker '$_'!\n") && return 0;[0m
==> default:     [37m+        }[0m
==> default:     [37m+    }[0m
==> default:     [37m+    unless ($purge) {[0m
==> default:     [37m+        qx{touch "$state_marker"};[0m
==> default:     [37m+        if ( $? != 0 ) {[0m
==> default:     [37m+            error("Failed to create marker '$state_marker'!\n") && return 0;[0m
==> default:     [37m+        }[0m
==> default:     [37m+        return 1;[0m
==> default:     [37m+    }[0m
==> default:     [37m+}[0m
==> default:     [37m+[0m
==> default:     [37m+# vim: syntax=perl sw=4 sts=4 sr et[0m[2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2disconf] owner changed to 0
==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2disconf] group changed to 0
==> default: [2016-02-17T14:59:55+00:00] INFO: template[/usr/sbin/a2disconf] mode changed to 700
==> default: 
==> default:     [32m- change mode from '' to '0700'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m
==> default: [0m  * directory[/etc/apache2/ssl] action create[2016-02-17T14:59:55+00:00] INFO: directory[/etc/apache2/ssl] created directory /etc/apache2/ssl
==> default: 
==> default:     [32m- create new directory /etc/apache2/ssl[0m[2016-02-17T14:59:55+00:00] INFO: directory[/etc/apache2/ssl] owner changed to 0
==> default: [2016-02-17T14:59:55+00:00] INFO: directory[/etc/apache2/ssl] group changed to 0
==> default: [2016-02-17T14:59:55+00:00] INFO: directory[/etc/apache2/ssl] mode changed to 755
==> default: 
==> default:     [32m- change mode from '' to '0755'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m
==> default: [0m  * directory[/var/cache/apache2] action create[2016-02-17T14:59:55+00:00] INFO: directory[/var/cache/apache2] owner changed to 0
==> default: [2016-02-17T14:59:56+00:00] INFO: directory[/var/cache/apache2] group changed to 0
==> default: 
==> default:     [32m- change owner from 'www-data' to 'root'[0m
==> default:     [32m- change group from 'www-data' to 'root'[0m
==> default: [0m  * directory[/var/lock/apache2] action create (up to date)
==> default:   * template[/etc/sysconfig/apache2] action create (skipped due to only_if)
==> default:   * template[/etc/apache2/envvars] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/envvars] backed up to /var/chef/backup/etc/apache2/envvars.chef-20160217145956.016870
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/envvars] updated file contents /etc/apache2/envvars
==> default: 
==> default:     [32m- update content in file /etc/apache2/envvars from 57ed3f to 983383[0m
==> default:     [37m--- /etc/apache2/envvars	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/.envvars20160217-1605-1httr3x	2016-02-17 14:59:56.011162614 +0000[0m
==> default:     [37m@@ -3,30 +3,21 @@[0m
==> default:     [37m # this won't be correct after changing uid[0m
==> default:     [37m unset HOME[0m
==> default:     [37m [0m
==> default:     [37m-# for supporting multiple apache2 instances[0m
==> default:     [37m-if [ "${APACHE_CONFDIR##/etc/apache2-}" != "${APACHE_CONFDIR}" ] ; then[0m
==> default:     [37m-	SUFFIX="-${APACHE_CONFDIR##/etc/apache2-}"[0m
==> default:     [37m-else[0m
==> default:     [37m-	SUFFIX=[0m
==> default:     [37m-fi[0m
==> default:     [37m-[0m
==> default:     [37m # Since there is no sane way to get the parsed apache2 config in scripts, some[0m
==> default:     [37m # settings are defined via environment variables and then used in apache2ctl,[0m
==> default:     [37m # /etc/init.d/apache2, /etc/logrotate.d/apache2, etc.[0m
==> default:     [37m export APACHE_RUN_USER=www-data[0m
==> default:     [37m export APACHE_RUN_GROUP=www-data[0m
==> default:     [37m-export APACHE_PID_FILE=/var/run/apache2$SUFFIX.pid[0m
==> default:     [37m-export APACHE_RUN_DIR=/var/run/apache2$SUFFIX[0m
==> default:     [37m-export APACHE_LOCK_DIR=/var/lock/apache2$SUFFIX[0m
==> default:     [37m-# Only /var/log/apache2 is handled by /etc/logrotate.d/apache2.[0m
==> default:     [37m-export APACHE_LOG_DIR=/var/log/apache2$SUFFIX[0m
==> default:     [37m+# temporary state file location. This might be changed to /run in Wheezy+1[0m
==> default:     [37m+export APACHE_PID_FILE=/var/run/apache2.pid[0m
==> default:     [37m+export APACHE_RUN_DIR=/var/run/apache2[0m
==> default:     [37m+export APACHE_LOCK_DIR=/var/lock/apache2[0m
==> default:     [37m+export APACHE_LOG_DIR=/var/log/apache2[0m
==> default:     [37m [0m
==> default:     [37m ## The locale used by some modules like mod_dav[0m
==> default:     [37m export LANG=C[0m
==> default:     [37m-## Uncomment the following line to use the system default locale instead:[0m
==> default:     [37m-#. /etc/default/locale[0m
==> default:     [37m+export LC_ALL=C[0m
==> default:     [37m [0m
==> default:     [37m-export LANG[0m
==> default:     [37m [0m
==> default:     [37m ## The command to get the status for 'apache2ctl status'.[0m
==> default:     [37m ## Some packages providing 'www-browser' need '--dump' instead of '-dump'.[0m
==> default:     [37m@@ -35,4 +26,13 @@[0m
==> default:     [37m ## If you need a higher file descriptor limit, uncomment and adjust the[0m
==> default:     [37m ## following line (default is 8192):[0m
==> default:     [37m #APACHE_ULIMIT_MAX_FILES='ulimit -n 65536'[0m
==> default:     [37m+[0m
==> default:     [37m+## If you would like to pass arguments to the web server, add them below[0m
==> default:     [37m+## to the APACHE_ARGUMENTS environment.[0m
==> default:     [37m+#export APACHE_ARGUMENTS=''[0m
==> default:     [37m+[0m
==> default:     [37m+## Enable the debug mode for maintainer scripts.[0m
==> default:     [37m+## This will produce a verbose output on package installations of web server modules and web application[0m
==> default:     [37m+## installations which interact with Apache[0m
==> default:     [37m+#export APACHE2_MAINTSCRIPT_DEBUG=1[0m
==> default: [0m  * template[apache2.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[apache2.conf] backed up to /var/chef/backup/etc/apache2/apache2.conf.chef-20160217145956.040005
==> default: [2016-02-17T14:59:56+00:00] INFO: template[apache2.conf] updated file contents /etc/apache2/apache2.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/apache2.conf from ad8601 to 8fa44a[0m
==> default:     [37m--- /etc/apache2/apache2.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/.apache2.conf20160217-1605-17r2rvn	2016-02-17 14:59:56.027170414 +0000[0m
==> default:     [37m@@ -1,65 +1,20 @@[0m
==> default:     [37m #[0m
==> default:     [37m-# Based upon the NCSA server configuration files originally by Rob McCool.[0m
==> default:     [37m+# Generated by Chef[0m
==> default:     [37m #[0m
==> default:     [37m-# This is the main Apache server configuration file.  It contains the[0m
==> default:     [37m-# configuration directives that give the server its instructions.[0m
==> default:     [37m-# See http://httpd.apache.org/docs/2.2/ for detailed information about[0m
==> default:     [37m-# the directives.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Do NOT simply read the instructions in here without understanding[0m
==> default:     [37m-# what they do.  They're here only as hints or reminders.  If you are unsure[0m
==> default:     [37m-# consult the online docs. You have been warned.  [0m
==> default:     [37m-#[0m
==> default:     [37m-# The configuration directives are grouped into three basic sections:[0m
==> default:     [37m-#  1. Directives that control the operation of the Apache server process as a[0m
==> default:     [37m-#     whole (the 'global environment').[0m
==> default:     [37m-#  2. Directives that define the parameters of the 'main' or 'default' server,[0m
==> default:     [37m-#     which responds to requests that aren't handled by a virtual host.[0m
==> default:     [37m-#     These directives also provide default values for the settings[0m
==> default:     [37m-#     of all virtual hosts.[0m
==> default:     [37m-#  3. Settings for virtual hosts, which allow Web requests to be sent to[0m
==> default:     [37m-#     different IP addresses or hostnames and have them handled by the[0m
==> default:     [37m-#     same Apache server process.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Configuration and logfile names: If the filenames you specify for many[0m
==> default:     [37m-# of the server's control files begin with "/" (or "drive:/" for Win32), the[0m
==> default:     [37m-# server will use that explicit path.  If the filenames do *not* begin[0m
==> default:     [37m-# with "/", the value of ServerRoot is prepended -- so "foo.log"[0m
==> default:     [37m-# with ServerRoot set to "/etc/apache2" will be interpreted by the[0m
==> default:     [37m-# server as "/etc/apache2/foo.log".[0m
==> default:     [37m-#[0m
==> default:     [37m+# Based on the Ubuntu apache2.conf[0m
==> default:     [37m [0m
==> default:     [37m-### Section 1: Global Environment[0m
==> default:     [37m-#[0m
==> default:     [37m-# The directives in this section affect the overall operation of Apache,[0m
==> default:     [37m-# such as the number of concurrent requests it can handle or where it[0m
==> default:     [37m-# can find its configuration files.[0m
==> default:     [37m-#[0m
==> default:     [37m+ServerRoot "/etc/apache2"[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m-# ServerRoot: The top of the directory tree under which the server's[0m
==> default:     [37m-# configuration, error, and log files are kept.[0m
==> default:     [37m-#[0m
==> default:     [37m-# NOTE!  If you intend to place this on an NFS (or otherwise network)[0m
==> default:     [37m-# mounted filesystem then please read the LockFile documentation (available[0m
==> default:     [37m-# at <URL:http://httpd.apache.org/docs/2.2/mod/mpm_common.html#lockfile>);[0m
==> default:     [37m-# you will save yourself a lot of trouble.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Do NOT add a slash at the end of the directory path.[0m
==> default:     [37m-#[0m
==> default:     [37m-#ServerRoot "/etc/apache2"[0m
==> default:     [37m-[0m
==> default:     [37m-#[0m
==> default:     [37m # The accept serialization lock file MUST BE STORED ON A LOCAL DISK.[0m
==> default:     [37m #[0m
==> default:     [37m-LockFile ${APACHE_LOCK_DIR}/accept.lock[0m
==> default:     [37m+LockFile /var/lock/apache2/accept.lock[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m # PidFile: The file in which the server should record its process[0m
==> default:     [37m # identification number when it starts.[0m
==> default:     [37m-# This needs to be set in /etc/apache2/envvars[0m
==> default:     [37m #[0m
==> default:     [37m-PidFile ${APACHE_PID_FILE}[0m
==> default:     [37m+PidFile /var/run/apache2.pid[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m # Timeout: The number of seconds before receives and sends time out.[0m
==> default:     [37m@@ -85,65 +40,12 @@[0m
==> default:     [37m #[0m
==> default:     [37m KeepAliveTimeout 5[0m
==> default:     [37m [0m
==> default:     [37m-##[0m
==> default:     [37m-## Server-Pool Size Regulation (MPM specific)[0m
==> default:     [37m-## [0m
==> default:     [37m+#<IfModule unixd_module>[0m
==> default:     [37m+User www-data[0m
==> default:     [37m+Group www-data[0m
==> default:     [37m+#</IfModule>[0m
==> default:     [37m [0m
==> default:     [37m-# prefork MPM[0m
==> default:     [37m-# StartServers: number of server processes to start[0m
==> default:     [37m-# MinSpareServers: minimum number of server processes which are kept spare[0m
==> default:     [37m-# MaxSpareServers: maximum number of server processes which are kept spare[0m
==> default:     [37m-# MaxClients: maximum number of server processes allowed to start[0m
==> default:     [37m-# MaxRequestsPerChild: maximum number of requests a server process serves[0m
==> default:     [37m-<IfModule mpm_prefork_module>[0m
==> default:     [37m-    StartServers          5[0m
==> default:     [37m-    MinSpareServers       5[0m
==> default:     [37m-    MaxSpareServers      10[0m
==> default:     [37m-    MaxClients          150[0m
==> default:     [37m-    MaxRequestsPerChild   0[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m [0m
==> default:     [37m-# worker MPM[0m
==> default:     [37m-# StartServers: initial number of server processes to start[0m
==> default:     [37m-# MinSpareThreads: minimum number of worker threads which are kept spare[0m
==> default:     [37m-# MaxSpareThreads: maximum number of worker threads which are kept spare[0m
==> default:     [37m-# ThreadLimit: ThreadsPerChild can be changed to this maximum value during a[0m
==> default:     [37m-#              graceful restart. ThreadLimit can only be changed by stopping[0m
==> default:     [37m-#              and starting Apache.[0m
==> default:     [37m-# ThreadsPerChild: constant number of worker threads in each server process[0m
==> default:     [37m-# MaxClients: maximum number of simultaneous client connections[0m
==> default:     [37m-# MaxRequestsPerChild: maximum number of requests a server process serves[0m
==> default:     [37m-<IfModule mpm_worker_module>[0m
==> default:     [37m-    StartServers          2[0m
==> default:     [37m-    MinSpareThreads      25[0m
==> default:     [37m-    MaxSpareThreads      75 [0m
==> default:     [37m-    ThreadLimit          64[0m
==> default:     [37m-    ThreadsPerChild      25[0m
==> default:     [37m-    MaxClients          150[0m
==> default:     [37m-    MaxRequestsPerChild   0[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m-[0m
==> default:     [37m-# event MPM[0m
==> default:     [37m-# StartServers: initial number of server processes to start[0m
==> default:     [37m-# MinSpareThreads: minimum number of worker threads which are kept spare[0m
==> default:     [37m-# MaxSpareThreads: maximum number of worker threads which are kept spare[0m
==> default:     [37m-# ThreadsPerChild: constant number of worker threads in each server process[0m
==> default:     [37m-# MaxClients: maximum number of simultaneous client connections[0m
==> default:     [37m-# MaxRequestsPerChild: maximum number of requests a server process serves[0m
==> default:     [37m-<IfModule mpm_event_module>[0m
==> default:     [37m-    StartServers          2[0m
==> default:     [37m-    MinSpareThreads      25[0m
==> default:     [37m-    MaxSpareThreads      75 [0m
==> default:     [37m-    ThreadLimit          64[0m
==> default:     [37m-    ThreadsPerChild      25[0m
==> default:     [37m-    MaxClients          150[0m
==> default:     [37m-    MaxRequestsPerChild   0[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m-[0m
==> default:     [37m-# These need to be set in /etc/apache2/envvars[0m
==> default:     [37m-User ${APACHE_RUN_USER}[0m
==> default:     [37m-Group ${APACHE_RUN_GROUP}[0m
==> default:     [37m-[0m
==> default:     [37m #[0m
==> default:     [37m # AccessFileName: The name of the file to look for in each directory[0m
==> default:     [37m # for additional configuration directives.  See also the AllowOverride[0m
==> default:     [37m@@ -153,13 +55,12 @@[0m
==> default:     [37m AccessFileName .htaccess[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m-# The following lines prevent .htaccess and .htpasswd files from being [0m
==> default:     [37m-# viewed by Web clients. [0m
==> default:     [37m+# The following lines prevent .htaccess and .htpasswd files from being[0m
==> default:     [37m+# viewed by Web clients.[0m
==> default:     [37m #[0m
==> default:     [37m-<Files ~ "^\.ht">[0m
==> default:     [37m+<Files ~ "^.ht">[0m
==> default:     [37m     Order allow,deny[0m
==> default:     [37m     Deny from all[0m
==> default:     [37m-    Satisfy all[0m
==> default:     [37m </Files>[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m@@ -171,16 +72,8 @@[0m
==> default:     [37m # keep browsers from trying to display binary files as though they are[0m
==> default:     [37m # text.[0m
==> default:     [37m #[0m
==> default:     [37m-# It is also possible to omit any default MIME type and let the[0m
==> default:   [0m
[1;32m==> default:   [37m-# client's browser guess an appropriate action instead. Typically the[0m
==> default:     [37m-# browser will decide based on the file's extension then. In cases[0m
==> default:     [37m-# where no good assumption can be made, letting the default MIME type[0m
==> default:     [37m-# unset is suggested  instead of forcing the browser to accept[0m
==> default:     [37m-# incorrect  metadata.[0m
==> default:     [37m-#[0m
==> default:     [37m-DefaultType None[0m
==> default:     [37m+DefaultType text/plain[0m
==> default:     [37m [0m
==> default:     [37m-[0m
==> default:     [37m #[0m
==> default:     [37m # HostnameLookups: Log the names of clients or just their IP addresses[0m
==> default:     [37m # e.g., www.apache.org (on) or 204.62.129.132 (off).[0m
==> default:     [37m@@ -197,7 +90,7 @@[0m
==> default:     [37m # logged here.  If you *do* define an error logfile for a <VirtualHost>[0m
==> default:     [37m # container, that host's errors will be logged there and not here.[0m
==> default:     [37m #[0m
==> default:     [37m-ErrorLog ${APACHE_LOG_DIR}/error.log[0m
==> default:     [37m+ErrorLog /var/log/apache2/error.log[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m # LogLevel: Control the number of messages logged to the error_log.[0m
==> default:     [37m@@ -206,33 +99,92 @@[0m
==> default:     [37m #[0m
==> default:     [37m LogLevel warn[0m
==> default:     [37m [0m
==> default:     [37m+# COOK-1021: Dummy LoadModule directive to aid module installations[0m
==> default:     [37m+#LoadModule dummy_module modules/mod_dummy.so[0m
==> default:     [37m+[0m
==> default:     [37m # Include module configuration:[0m
==> default:     [37m-Include mods-enabled/*.load[0m
==> default:     [37m-Include mods-enabled/*.conf[0m
==> default:     [37m+Include /etc/apache2/mods-enabled/*.load[0m
==> default:     [37m+Include /etc/apache2/mods-enabled/*.conf[0m
==> default:     [37m [0m
==> default:     [37m-# Include all the user configurations:[0m
==> default:     [37m-Include httpd.conf[0m
==> default:     [37m [0m
==> default:     [37m # Include ports listing[0m
==> default:     [37m-Include ports.conf[0m
==> default:     [37m+Include /etc/apache2/ports.conf[0m
==> default:     [37m [0m
==> default:     [37m #[0m
==> default:     [37m # The following directives define some format nicknames for use with[0m
==> default:     [37m # a CustomLog directive (see below).[0m
==> default:     [37m-# If you are behind a reverse proxy, you might want to change %h into %{X-Forwarded-For}i[0m
==> default:     [37m #[0m
==> default:     [37m LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined[0m
==> default:     [37m-LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined[0m
==> default:     [37m-LogFormat "%h %l %u %t \"%r\" %>s %O" common[0m
==> default:     [37m+LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined[0m
==> default:     [37m+LogFormat "%h %l %u %t \"%r\" %>s %b" common[0m
==> default:     [37m LogFormat "%{Referer}i -> %U" referer[0m
==> default:     [37m LogFormat "%{User-agent}i" agent[0m
==> default:     [37m+#[0m
==> default:     [37m+# Customizable error responses come in three flavors:[0m
==> default:     [37m+# 1) plain text 2) local redirects 3) external redirects[0m
==> default:     [37m+#[0m
==> default:     [37m+# Some examples:[0m
==> default:     [37m+#ErrorDocument 500 "The server made a boo boo."[0m
==> default:     [37m+#ErrorDocument 404 /missing.html[0m
==> default:     [37m+#ErrorDocument 404 "/cgi-bin/missing_handler.pl"[0m
==> default:     [37m+#ErrorDocument 402 http://www.example.com/subscription_info.html[0m
==> default:     [37m+#[0m
==> default:     [37m [0m
==> default:     [37m-# Include of directories ignores editors' and dpkg's backup files,[0m
==> default:     [37m-# see README.Debian for details.[0m
==> default:     [37m+#[0m
==> default:     [37m+# Putting this all together, we can internationalize error responses.[0m
==> default:     [37m+#[0m
==> default:     [37m+# We use Alias to redirect any /error/HTTP_<error>.html.var response to[0m
==> default:     [37m+# our collection of by-error message multi-language collections.  We use[0m
==> default:     [37m+# includes to substitute the appropriate text.[0m
==> default:     [37m+#[0m
==> default:     [37m+# You can modify the messages' appearance without changing any of the[0m
==> default:     [37m+# default HTTP_<error>.html.var files by adding the line:[0m
==> default:     [37m+#[0m
==> default:     [37m+#   Alias /error/include/ "/your/include/path/"[0m
==> default:     [37m+#[0m
==> default:     [37m+# which allows you to create your own set of files by starting with the[0m
==> default:     [37m+# /usr/share/apache2/error/include/ files and copying them to /your/include/path/,[0m
==> default:     [37m+# even on a per-VirtualHost basis.  The default include files will display[0m
==> default:     [37m+# your Apache version number and your ServerAdmin email address regardless[0m
==> default:     [37m+# of the setting of ServerSignature.[0m
==> default:     [37m+#[0m
==> default:     [37m+# The internationalized error documents require mod_alias, mod_include[0m
==> default:     [37m+# and mod_negotiation.  To activate them, uncomment the following 30 lines.[0m
==> default:     [37m [0m
==> default:     [37m+#    Alias /error/ "/usr/share/apache2/error/"[0m
==> default:     [37m+#[0m
==> default:     [37m+#    <Directory "/usr/share/apache2/error">[0m
==> default:     [37m+#        AllowOverride None[0m
==> default:     [37m+#        Options IncludesNoExec[0m
==> default:     [37m+#        AddOutputFilter Includes html[0m
==> default:     [37m+#        AddHandler type-map var[0m
==> default:     [37m+#        Order allow,deny[0m
==> default:     [37m+#        Allow from all[0m
==> default:     [37m+#        LanguagePriority en cs de es fr it nl sv pt-br ro[0m
==> default:     [37m+#        ForceLanguagePriority Prefer Fallback[0m
==> default:     [37m+#    </Directory>[0m
==> default:     [37m+#[0m
==> default:     [37m+#    ErrorDocument 400 /error/HTTP_BAD_REQUEST.html.var[0m
==> default:     [37m+#    ErrorDocument 401 /error/HTTP_UNAUTHORIZED.html.var[0m
==> default:     [37m+#    ErrorDocument 403 /error/HTTP_FORBIDDEN.html.var[0m
==> default:     [37m+#    ErrorDocument 404 /error/HTTP_NOT_FOUND.html.var[0m
==> default:     [37m+#    ErrorDocument 405 /error/HTTP_METHOD_NOT_ALLOWED.html.var[0m
==> default:     [37m+#    ErrorDocument 408 /error/HTTP_REQUEST_TIME_OUT.html.var[0m
==> default:     [37m+#    ErrorDocument 410 /error/HTTP_GONE.html.var[0m
==> default:     [37m+#    ErrorDocument 411 /error/HTTP_LENGTH_REQUIRED.html.var[0m
==> default:     [37m+#    ErrorDocument 412 /error/HTTP_PRECONDITION_FAILED.html.var[0m
==> default:     [37m+#    ErrorDocument 413 /error/HTTP_REQUEST_ENTITY_TOO_LARGE.html.var[0m
==> default:     [37m+#    ErrorDocument 414 /error/HTTP_REQUEST_URI_TOO_LARGE.html.var[0m
==> default:     [37m+#    ErrorDocument 415 /error/HTTP_UNSUPPORTED_MEDIA_TYPE.html.var[0m
==> default:     [37m+#    ErrorDocument 500 /error/HTTP_INTERNAL_SERVER_ERROR.html.var[0m
==> default:     [37m+#    ErrorDocument 501 /error/HTTP_NOT_IMPLEMENTED.html.var[0m
==> default:     [37m+#    ErrorDocument 502 /error/HTTP_BAD_GATEWAY.html.var[0m
==> default:     [37m+#    ErrorDocument 503 /error/HTTP_SERVICE_UNAVAILABLE.html.var[0m
==> default:     [37m+#    ErrorDocument 506 /error/HTTP_VARIANT_ALSO_VARIES.html.var[0m
==> default:     [37m+[0m
==> default:     [37m # Include generic snippets of statements[0m
==> default:     [37m-Include conf.d/[0m
==> default:     [37m+Include /etc/apache2/conf-enabled/*.conf[0m
==> default:     [37m [0m
==> default:     [37m # Include the virtual host configurations:[0m
==> default:     [37m-Include sites-enabled/[0m
==> default:     [37m+Include /etc/apache2/sites-enabled/*.conf[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[apache2.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/conf-available/security] action delete (up to date)
==> default:   * template[/etc/apache2/conf-available/security.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] created file /etc/apache2/conf-available/security.conf
==> default: 
==> default:     [32m- create new file /etc/apache2/conf-available/security.conf[0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] updated file contents /etc/apache2/conf-available/security.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/conf-available/security.conf from none to 595bd1[0m
==> default:     [37m--- /etc/apache2/conf-available/security.conf	2016-02-17 14:59:56.055184063 +0000[0m
==> default:     [37m+++ /etc/apache2/conf-available/.security.conf20160217-1605-151bm50	2016-02-17 14:59:56.055184063 +0000[0m
==> default:     [37m@@ -1 +1,46 @@[0m
==> default:     [37m+#[0m
==> default:     [37m+# Disable access to the entire file system except for the directories that[0m
==> default:     [37m+# are explicitly allowed later.[0m
==> default:     [37m+#[0m
==> default:     [37m+# This currently breaks the configurations that come with some web application[0m
==> default:     [37m+# Debian packages. It will be made the default for the release after lenny.[0m
==> default:     [37m+#[0m
==> default:     [37m+#<Directory />[0m
==> default:     [37m+#	AllowOverride None[0m
==> default:     [37m+#	Order Deny,Allow[0m
==> default:     [37m+#	Deny from all[0m
==> default:     [37m+#</Directory>[0m
==> default:     [37m+[0m
==> default:     [37m+# Changing the following options will not really affect the security of the[0m
==> default:     [37m+# server, but might make attacks slightly more difficult in some cases.[0m
==> default:     [37m+[0m
==> default:     [37m+#[0m
==> default:     [37m+# ServerTokens[0m
==> default:     [37m+# This directive configures what you return as the Server HTTP response[0m
==> default:     [37m+# Header. The default is 'Full' which sends information about the OS-Type[0m
==> default:     [37m+# and compiled in modules.[0m
==> default:     [37m+# Set to one of:  Full | OS | Minimal | Minor | Major | Prod[0m
==> default:     [37m+# where Full conveys the most information, and Prod the least.[0m
==> default:     [37m+#[0m
==> default:     [37m+ServerTokens Prod[0m
==> default:     [37m+[0m
==> default:     [37m+#[0m
==> default:     [37m+# Optionally add a line containing the server version and virtual host[0m
==> default:     [37m+# name to server-generated pages (internal error documents, FTP directory[0m
==> default:     [37m+# listings, mod_status and mod_info output etc., but not CGI generated[0m
==> default:     [37m+# documents or custom error documents).[0m
==> default:     [37m+# Set to "EMail" to also include a mailto: link to the ServerAdmin.[0m
==> default:     [37m+# Set to one of:  On | Off | EMail[0m
==> default:     [37m+#[0m
==> default:     [37m+ServerSignature On[0m
==> default:     [37m+[0m
==> default:     [37m+#[0m
==> default:     [37m+# Allow TRACE method[0m
==> default:     [37m+#[0m
==> default:     [37m+# Set to "extended" to also reflect the request body (only for testing and[0m
==> default:     [37m+# diagnostic purposes).[0m
==> default:     [37m+#[0m
==> default:     [37m+# Set to one of:  On | Off | extended[0m
==> default:     [37m+#[0m
==> default:     [37m+TraceEnable Off[0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] owner changed to 0
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] group changed to 0
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] mode changed to 644
==> default: 
==> default:     [32m- change mode from '' to '0644'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/security.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * execute[a2enconf security.conf] action run
==> default:     [execute] Enabling conf security.
==> default:               To activate the new configuration, you need to run:
==> default:                 service apache2 reload
==> default: [2016-02-17T14:59:56+00:00] INFO: execute[a2enconf security.conf] ran successfully
==> default:     [32m- execute /usr/sbin/a2enconf security.conf[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: execute[a2enconf security.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/conf-available/charset] action delete (up to date)
==> default:   * template[/etc/apache2/conf-available/charset.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] created file /etc/apache2/conf-available/charset.conf
==> default: 
==> default:     [32m- create new file /etc/apache2/conf-available/charset.conf[0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] updated file contents /etc/apache2/conf-available/charset.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/conf-available/charset.conf from none to 543c6c[0m
==> default:     [37m--- /etc/apache2/conf-available/charset.conf	2016-02-17 14:59:56.163236706 +0000[0m
==> default:     [37m+++ /etc/apache2/conf-available/.charset.conf20160217-1605-1g23p1r	2016-02-17 14:59:56.163236706 +0000[0m
==> default:     [37m@@ -1 +1,7 @@[0m
==> default:     [37m+# Read the documentation before enabling AddDefaultCharset.[0m
==> default:     [37m+# In general, it is only a good idea if you know that all your files[0m
==> default:     [37m+# have this encoding. It will override any encoding given in the files[0m
==> default:     [37m+# in meta http-equiv or xml encoding tags.[0m
==> default:     [37m+[0m
==> default:     [37m+#AddDefaultCharset UTF-8[0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] owner changed to 0
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] group changed to 0
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] mode changed to 644
==> default: 
==> default:     [32m- change mode from '' to '0644'[0m
==> default:     [32m- change owner from '' to 'root'[0m
==> default:     [32m- change group from '' to 'root'[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/conf-available/charset.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * execute[a2enconf charset.conf] action run
==> default:     [execute] Enabling conf charset.
==> default:               To activate the new configuration, you need to run:
==> default:                 service apache2 reload
==> default: [2016-02-17T14:59:56+00:00] INFO: execute[a2enconf charset.conf] ran successfully
==> default:     [32m- execute /usr/sbin/a2enconf charset.conf[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: execute[a2enconf charset.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/ports] action delete (up to date)
==> default:   * template[/etc/apache2/ports.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/ports.conf] updated file contents /etc/apache2/ports.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/ports.conf from 69cde6 to 385227[0m
==> default:     [37m--- /etc/apache2/ports.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/.ports.conf20160217-1605-1lmjenl	2016-02-17 14:59:56.247277648 +0000[0m
==> default:     [37m@@ -1,24 +1,6 @@[0m
==> default:     [37m-# If you just change the port or add more ports here, you will likely also[0m
==> default:     [37m-# have to change the VirtualHost statement in[0m
==> default:     [37m-# /etc/apache2/sites-enabled/000-default[0m
==> default:     [37m-# This is also true if you have upgraded from before 2.2.9-3 (i.e. from[0m
==> default:     [37m-# Debian etch). See /usr/share/doc/apache2.2-common/NEWS.Debian.gz and[0m
==> default:     [37m-# README.Debian.gz[0m
==> default:     [37m+# This file was generated by Chef for precise64.[0m
==> default:     [37m+# Do NOT modify this file by hand![0m
==> default:     [37m [0m
==> default:     [37m+Listen *:80[0m
==> default:     [37m NameVirtualHost *:80[0m
==> default:     [37m-Listen 80[0m
==> default:     [37m-[0m
==> default:     [37m-<IfModule mod_ssl.c>[0m
==> default:     [37m-    # If you add NameVirtualHost *:443 here, you will also have to change[0m
==> default:     [37m-    # the VirtualHost statement in /etc/apache2/sites-available/default-ssl[0m
==> default:     [37m-    # to <VirtualHost *:443>[0m
==> default:     [37m-    # Server Name Indication for SSL named virtual hosts is currently not[0m
==> default:     [37m-    # supported by MSIE on Windows XP.[0m
==> default:     [37m-    Listen 443[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m-[0m
==> default:     [37m-<IfModule mod_gnutls.c>[0m
==> default:     [37m-    Listen 443[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m-[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/ports.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default: Recipe: apache2::mod_status[0m
==> default:   * template[/etc/apache2/mods-available/status.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/status.conf] backed up to /var/chef/backup/etc/apache2/mods-available/status.conf.chef-20160217145956.269341
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/status.conf] updated file contents /etc/apache2/mods-available/status.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/status.conf from 5f6b3c to 7736cd[0m
==> default:     [37m--- /etc/apache2/mods-available/status.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.status.conf20160217-1605-1dinf0f	2016-02-17 14:59:56.263285448 +0000[0m
==> default:     [37m@@ -1,31 +1,23 @@[0m
==> default:     [37m <IfModule mod_status.c>[0m
==> default:     [37m-#[0m
==> default:     [37m-# Allow server status reports generated by mod_status,[0m
==> default:     [37m-# with the URL of http://servername/server-status[0m
==> default:     [37m-# Uncomment and change the "192.0.2.0/24" to allow access from other hosts.[0m
==> default:     [37m-#[0m
==> default:     [37m-<Location /server-status>[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Allow server status reports generated by mod_status,[0m
==> default:     [37m+  # with the URL of http://servername/server-status[0m
==> default:     [37m+  # Uncomment and change the ".example.com" to allow[0m
==> default:     [37m+  # access from other hosts.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  <Location /server-[0m
[1;32m==> default: status>[0m
==> default:     [37m     SetHandler server-status[0m
==> default:     [37m     Order deny,allow[0m
==> default:     [37m     Deny from all[0m
==> default:     [37m     Allow from 127.0.0.1 ::1[0m
==> default:     [37m-#    Allow from 192.0.2.0/24[0m
==> default:     [37m-</Location>[0m
==> default:     [37m+  </Location>[0m
==> default:     [37m [0m
==> default:     [37m-# Keep track of extended status information for each request[0m
==> default:     [37m-ExtendedStatus On[0m
==> default:     [37m-[0m
==> default:     [37m-# Determine if mod_status displays the first 63 characters of a request or[0m
==> default:     [37m-# the last 63, assuming the request itself is greater than 63 chars.[0m
==> default:     [37m-# Default: Off[0m
==> default:     [37m-#SeeRequestTail On[0m
==> default:     [37m-[0m
==> default:     [37m-[0m
==> default:     [37m-<IfModule mod_proxy.c>[0m
==> default:     [37m-    # Show Proxy LoadBalancer status in mod_status[0m
==> default:     [37m-    ProxyStatus On[0m
==> default:     [37m-</IfModule>[0m
==> default:     [37m-[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # ExtendedStatus controls whether Apache will generate "full" status[0m
==> default:     [37m+  # information (ExtendedStatus On) or just basic information (ExtendedStatus[0m
==> default:     [37m+  # Off) when the "server-status" handler is called. The default is Off.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  ExtendedStatus Off[0m
==> default:     [37m [0m
==> default:     [37m </IfModule>[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/status.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/mods-available/status.load] action create (up to date)
==> default:   * execute[a2enmod status] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_alias[0m
==> default:   * template[/etc/apache2/mods-available/alias.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/alias.conf] backed up to /var/chef/backup/etc/apache2/mods-available/alias.conf.chef-20160217145956.288716
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/alias.conf] updated file contents /etc/apache2/mods-available/alias.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/alias.conf from 541075 to 43605a[0m
==> default:     [37m--- /etc/apache2/mods-available/alias.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.alias.conf20160217-1605-1mvp034	2016-02-17 14:59:56.283295196 +0000[0m
==> default:     [37m@@ -1,25 +1,24 @@[0m
==> default:     [37m <IfModule alias_module>[0m
==> default:     [37m-#[0m
==> default:     [37m-# Aliases: Add here as many aliases as you need (with no limit). The format is [0m
==> default:     [37m-# Alias fakename realname[0m
==> default:     [37m-#[0m
==> default:     [37m-# Note that if you include a trailing / on fakename then the server will[0m
==> default:     [37m-# require it to be present in the URL.  So "/icons" isn't aliased in this[0m
==> default:     [37m-# example, only "/icons/".  If the fakename is slash-terminated, then the [0m
==> default:     [37m-# realname must also be slash terminated, and if the fakename omits the [0m
==> default:     [37m-# trailing slash, the realname must also omit it.[0m
==> default:     [37m-#[0m
==> default:     [37m-# We include the /icons/ alias for FancyIndexed directory listings.  If[0m
==> default:     [37m-# you do not use FancyIndexing, you may comment this out.[0m
==> default:     [37m-#[0m
==> default:     [37m-Alias /icons/ "/usr/share/apache2/icons/"[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Aliases: Add here as many aliases as you need (with no limit). The format is[0m
==> default:     [37m+  # Alias fakename realname[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Note that if you include a trailing / on fakename then the server will[0m
==> default:     [37m+  # require it to be present in the URL.  So "/icons" isn't aliased in this[0m
==> default:     [37m+  # example, only "/icons/".  If the fakename is slash-terminated, then the[0m
==> default:     [37m+  # realname must also be slash terminated, and if the fakename omits the[0m
==> default:     [37m+  # trailing slash, the realname must also omit it.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # We include the /icons/ alias for FancyIndexed directory listings.  If[0m
==> default:     [37m+  # you do not use FancyIndexing, you may comment this out.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  Alias /icons/ "/usr/share/apache2/icons/"[0m
==> default:     [37m [0m
==> default:     [37m-<Directory "/usr/share/apache2/icons">[0m
==> default:     [37m-    Options FollowSymlinks[0m
==> default:     [37m+  <Directory "/usr/share/apache2/icons">[0m
==> default:     [37m+    Options Indexes MultiViews[0m
==> default:     [37m     AllowOverride None[0m
==> default:     [37m     Order allow,deny[0m
==> default:     [37m     Allow from all[0m
==> default:     [37m-</Directory>[0m
==> default:     [37m-[0m
==> default:     [37m+  </Directory>[0m
==> default:     [37m </IfModule>[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/alias.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/mods-available/alias.load] action create (up to date)
==> default:   * execute[a2enmod alias] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_auth_basic[0m
==> default:   * file[/etc/apache2/mods-available/auth_basic.load] action create (up to date)
==> default:   * execute[a2enmod auth_basic] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_authn_file[0m
==> default:   * file[/etc/apache2/mods-available/authn_file.load] action create (up to date)
==> default:   * execute[a2enmod authn_file] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_authz_core[0m
==> default:   * file[/etc/apache2/mods-available/authz_default.load] action create (up to date)
==> default:   * execute[a2enmod authz_default] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_authz_groupfile[0m
==> default:   * file[/etc/apache2/mods-available/authz_groupfile.load] action create (up to date)
==> default:   * execute[a2enmod authz_groupfile] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_authz_host[0m
==> default:   * file[/etc/apache2/mods-available/authz_host.load] action create (up to date)
==> default:   * execute[a2enmod authz_host] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_authz_user[0m
==> default:   * file[/etc/apache2/mods-available/authz_user.load] action create (up to date)
==> default:   * execute[a2enmod authz_user] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_autoindex[0m
==> default:   * template[/etc/apache2/mods-available/autoindex.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/autoindex.conf] backed up to /var/chef/backup/etc/apache2/mods-available/autoindex.conf.chef-20160217145956.333325
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/autoindex.conf] updated file contents /etc/apache2/mods-available/autoindex.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/autoindex.conf from e9cb73 to 8e7e44[0m
==> default:     [37m--- /etc/apache2/mods-available/autoindex.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.autoindex.conf20160217-1605-8lnkqv	2016-02-17 14:59:56.323314694 +0000[0m
==> default:     [37m@@ -1,102 +1,101 @@[0m
==> default:     [37m <IfModule mod_autoindex.c>[0m
==> default:     [37m-#[0m
==> default:     [37m-# Directives controlling the display of server-generated directory listings.[0m
==> default:     [37m-#[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Directives controlling the display of server-generated directory listings.[0m
==> default:     [37m+  #[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# IndexOptions: Controls the appearance of server-generated directory[0m
==> default:     [37m-# listings.[0m
==> default:     [37m-# Remove/replace the "Charset=UTF-8" if you don't use UTF-8 for your filenames.[0m
==> default:     [37m-#[0m
==> default:     [37m-IndexOptions FancyIndexing VersionSort HTMLTable NameWidth=* DescriptionWidth=* Charset=UTF-8[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # IndexOptions: Controls the appearance of server-generated directory[0m
==> default:     [37m+  # listings.[0m
==> default:     [37m+  # Remove/replace the "Charset=UTF-8" if you don't use UTF-8 for your filenames.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  IndexOptions FancyIndexing VersionSort HTMLTable NameWidth=* DescriptionWidth=* Charset=UTF-8[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# AddIcon* directives tell the server which icon to show for different[0m
==> default:     [37m-# files or filename extensions.  These are only displayed for[0m
==> default:     [37m-# FancyIndexed directories.[0m
==> default:     [37m-#[0m
==> default:     [37m-AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip x-bzip2[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # AddIcon* directives tell the server which icon to show for different[0m
==> default:     [37m+  # files or filename extensions.  These are only displayed for[0m
==> default:     [37m+  # FancyIndexed directories.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip x-bzip2[0m
==> default:     [37m [0m
==> default:     [37m-AddIconByType (TXT,/icons/text.gif) text/*[0m
==> default:     [37m-AddIconByType (IMG,/icons/image2.gif) image/*[0m
==> default:     [37m-AddIconByType (SND,/icons/sound2.gif) audio/*[0m
==> default:     [37m-AddIconByType (VID,/icons/movie.gif) video/*[0m
==> default:     [37m+  AddIconByType (TXT,/icons/text.gif) text/*[0m
==> default:     [37m+  AddIconByType (IMG,/icons/image2.gif) image/*[0m
==> default:     [37m+  AddIconByType (SND,/icons/sound2.gif) audio/*[0m
==> default:     [37m+  AddIconByType (VID,/icons/movie.gif) video/*[0m
==> default:     [37m [0m
==> default:     [37m-AddIcon /icons/binary.gif .bin .exe[0m
==> default:     [37m-AddIcon /icons/binhex.gif .hqx[0m
==> default:     [37m-AddIcon /icons/tar.gif .tar[0m
==> default:     [37m-AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv[0m
==> default:     [37m-AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip[0m
==> default:     [37m-AddIcon /icons/a.gif .ps .ai .eps[0m
==> default:     [37m-AddIcon /icons/layout.gif .html .shtml .htm .pdf[0m
==> default:     [37m-AddIcon /icons/text.gif .txt[0m
==> default:     [37m-AddIcon /icons/c.gif .c[0m
==> default:     [37m-AddIcon /icons/p.gif .pl .py[0m
==> default:     [37m-AddIcon /icons/f.gif .for[0m
==> default:     [37m-AddIcon /icons/dvi.gif .dvi[0m
==> default:     [37m-AddIcon /icons/uuencoded.gif .uu[0m
==> default:     [37m-AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl[0m
==> default:     [37m-AddIcon /icons/tex.gif .tex[0m
==> default:     [37m-# It's a suffix rule, so simply matching "core" matches "score" as well ![0m
==> default:     [37m-AddIcon /icons/bomb.gif /core[0m
==> default:     [37m-AddIcon (SND,/icons/sound2.gif) .ogg[0m
==> default:     [37m-AddIcon (VID,/icons/movie.gif) .ogm[0m
==> default:     [37m+  AddIcon /icons/binary.gif .bin .exe[0m
==> default:     [37m+  AddIcon /icons/binhex.gif .hqx[0m
==> default:     [37m+  AddIcon /icons/tar.gif .tar[0m
==> default:     [37m+  AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv[0m
==> default:     [37m+  AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip[0m
==> default:     [37m+  AddIcon /icons/a.gif .ps .ai .eps[0m
==> default:     [37m+  AddIcon /icons/layout.gif .html .shtml .htm .pdf[0m
==> default:     [37m+  AddIcon /icons/text.gif .txt[0m
==> default:     [37m+  AddIcon /icons/c.gif .c[0m
==> default:     [37m+  AddIcon /icons/p.gif .pl .py[0m
==> default:     [37m+  AddIcon /icons/f.gif .for[0m
==> default:     [37m+  AddIcon /icons/dvi.gif .dvi[0m
==> default:     [37m+  AddIcon /icons/uuencoded.gif .uu[0m
==> default:     [37m+  AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl[0m
==> default:     [37m+  AddIcon /icons/tex.gif .tex[0m
==> default:     [37m+  # It's a suffix rule, so simply matching "core" matches "score" as well ![0m
==> default:     [37m+  AddIcon /icons/bomb.gif /core[0m
==> default:     [37m+  AddIcon (SND,/icons/sound2.gif) .ogg[0m
==> default:     [37m+  AddIcon (VID,/icons/movie.gif) .ogm[0m
==> default:     [37m [0m
==> default:     [37m-AddIcon /icons/back.gif ..[0m
==> default:     [37m-AddIcon /icons/hand.right.gif README[0m
==> default:     [37m-AddIcon /icons/folder.gif ^^DIRECTORY^^[0m
==> default:     [37m-AddIcon /icons/blank.gif ^^BLANKICON^^[0m
==> default:     [37m+  AddIcon /icons/back.gif ..[0m
==> default:     [37m+  AddIcon /icons/hand.right.gif README[0m
==> default:     [37m+  AddIcon /icons/folder.gif ^^DIRECTORY^^[0m
==> default:     [37m+  AddIcon /icons/blank.gif ^^BLANKICON^^[0m
==> default:     [37m [0m
==> default:     [37m-# Default icons for OpenDocument format[0m
==> default:     [37m-AddIcon /icons/odf6odt-20x22.png .odt[0m
==> default:     [37m-AddIcon /icons/odf6ods-20x22.png .ods[0m
==> default:     [37m-AddIcon /icons/odf6odp-20x22.png .odp[0m
==> default:     [37m-AddIcon /icons/odf6odg-20x22.png .odg[0m
==> default:     [37m-AddIcon /icons/odf6odc-20x22.png .odc[0m
==> default:     [37m-AddIcon /icons/odf6odf-20x22.png .odf[0m
==> default:     [37m-AddIcon /icons/odf6odb-20x22.png .odb[0m
==> default:     [37m-AddIcon /icons/odf6odi-20x22.png .odi[0m
==> default:     [37m-AddIcon /icons/odf6odm-20x22.png .odm[0m
==> default:     [37m+  # Default icons for OpenDocument format[0m
==> default:     [37m+  AddIcon /icons/odf6odt-20x22.png .odt[0m
==> default:     [37m+  AddIcon /icons/odf6ods-20x22.png .ods[0m
==> default:     [37m+  AddIcon /icons/odf6odp-20x22.png .odp[0m
==> default:     [37m+  AddIcon /icons/odf6odg-20x22.png .odg[0m
==> default:     [37m+  AddIcon /icons/odf6odc-20x22.png .odc[0m
==> default:     [37m+  AddIcon /icons/odf6odf-20x22.png .odf[0m
==> default:     [37m+  AddIcon /icons/odf6odb-20x22.png .odb[0m
==> default:     [37m+  AddIcon /icons/odf6odi-20x22.png .odi[0m
==> default:     [37m+  AddIcon /icons/odf6odm-20x22.png .odm[0m
==> default:     [37m [0m
==> default:     [37m-AddIcon /icons/odf6ott-20x22.png .ott[0m
==> default:     [37m-AddIcon /icons/odf6ots-20x22.png .ots[0m
==> default:     [37m-AddIcon /icons/odf6otp-20x22.png .otp[0m
==> default:     [37m-AddIcon /icons/odf6otg-20x22.png .otg[0m
==> default:     [37m-AddIcon /icons/odf6otc-20x22.png .otc[0m
==> default:     [37m-AddIcon /icons/odf6otf-20x22.png .otf[0m
==> default:     [37m-AddIcon /icons/odf6oti-20x22.png .oti[0m
==> default:     [37m-AddIcon /icons/odf6oth-20x22.png .oth[0m
==> default:     [37m+  AddIcon /icons/odf6ott-20x22.png .ott[0m
==> default:     [37m+  AddIcon /icons/odf6ots-20x22.png .ots[0m
==> default:     [37m+  AddIcon /icons/odf6otp-20x22.png .otp[0m
==> default:     [37m+  AddIcon /icons/odf6otg-20x22.png .otg[0m
==> default:     [37m+  AddIcon /icons/odf6otc-20x22.png .otc[0m
==> default:     [37m+  AddIcon /icons/odf6otf-20x22.png .otf[0m
==> default:     [37m+  AddIcon /icons/odf6oti-20x22.png .oti[0m
==> default:     [37m+  AddIcon /icons/odf6oth-20x22.png .oth[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# DefaultIcon is which icon to show for files which do not have an icon[0m
==> default:     [37m-# explicitly set.[0m
==> default:     [37m-#[0m
==> default:     [37m-DefaultIcon /icons/unknown.gif[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # DefaultIcon is which icon to show for files which do not have an icon[0m
==> default:     [37m+  # explicitly set.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  DefaultIcon /icons/unknown.gif[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# AddDescription allows you to place a short description after a file in[0m
==> default:     [37m-# server-generated indexes.  These are only displayed for FancyIndexed[0m
==> default:     [37m-# directories.[0m
==> default:     [37m-# Format: AddDescription "description" filename[0m
==> default:     [37m-#[0m
==> default:     [37m-#AddDescription "GZIP compressed document" .gz[0m
==> default:     [37m-#AddDescription "tar archive" .tar[0m
==> default:     [37m-#AddDescription "GZIP compressed tar archive" .tgz[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # AddDescription allows you to place a short description after a file in[0m
==> default:     [37m+  # server-generated indexes.  These are only displayed for FancyIndexed[0m
==> default:     [37m+  # directories.[0m
==> default:     [37m+  # Format: AddDescription "description" filename[0m
==> default:     [37m+  #[0m
==> default:     [37m+  #AddDescription "GZIP compressed document" .gz[0m
==> default:     [37m+  #AddDescription "tar archive" .tar[0m
==> default:     [37m+  #AddDescription "GZIP compressed tar archive" .tgz[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# ReadmeName is the name of the README file the server will look for by[0m
==> default:     [37m-# default, and append to directory listings.[0m
==> default:     [37m-#[0m
==> default:     [37m-# HeaderName is the name of a file which should be prepended to[0m
==> default:     [37m-# directory indexes. [0m
==> default:     [37m-ReadmeName README.html[0m
==> default:     [37m-HeaderName HEADER.html[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # ReadmeName is the name of the README file the server will look for by[0m
==> default:     [37m+  # default, and append to directory listings.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # HeaderName is the name of a file which should be prepended to[0m
==> default:     [37m+  # directory indexes.[0m
==> default:     [37m+  ReadmeName README.html[0m
==> default:     [37m+  HeaderName HEADER.html[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# IndexIgnore is a set of filenames which directory indexing should ignore[0m
==> default:     [37m-# and not include in the listing.  Shell-style wildcarding is permitted.[0m
==> default:     [37m-#[0m
==> default:     [37m-IndexIgnore .??* *~ *# RCS CVS *,v *,t [0m
==> default:     [37m-[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # IndexIgnore is a set of filenames which directory indexing should ignore[0m
==> default:     [37m+  # and not include in the listing.  Shell-style wildcarding is permitted.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  IndexIgnore .??* *~ *# RCS CVS *,v *,t[0m
==> default:     [37m </IfModule>[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/autoindex.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/mods-available/autoindex.load] action create (up to date)
==> default:   * execute[a2enmod autoindex] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_dir[0m
==> default:   * template[/etc/apache2/mods-available/dir.conf] action create[2016-02-17T14:59:56+0[0m
[1;32m==> default: 0:00] INFO: template[/etc/apache2/mods-available/dir.conf] backed up to /var/chef/backup/etc/apache2/mods-available/dir.conf.chef-20160217145956.362544
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/dir.conf] updated file contents /etc/apache2/mods-available/dir.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/dir.conf from f8a5bd to 5d2651[0m
==> default:     [37m--- /etc/apache2/mods-available/dir.conf	2012-02-07 04:17:00.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.dir.conf20160217-1605-oy0pam	2016-02-17 14:59:56.359332240 +0000[0m
==> default:     [37m@@ -1,6 +1,4 @@[0m
==> default:     [37m <IfModule mod_dir.c>[0m
==> default:     [37m-[0m
==> default:     [37m-          DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm[0m
==> default:     [37m-[0m
==> default:     [37m+  DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm[0m
==> default:     [37m </IfModule>[0m
==> default: [0m[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/dir.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued
==> default:   * file[/etc/apache2/mods-available/dir.load] action create (up to date)
==> default:   * execute[a2enmod dir] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_env[0m
==> default:   * file[/etc/apache2/mods-available/env.load] action create (up to date)
==> default:   * execute[a2enmod env] action run (skipped due to not_if)
==> default: Recipe: apache2::mod_mime[0m
==> default:   * template[/etc/apache2/mods-available/mime.conf] action create[2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/mime.conf] backed up to /var/chef/backup/etc/apache2/mods-available/mime.conf.chef-20160217145956.388433
==> default: [2016-02-17T14:59:56+00:00] INFO: template[/etc/apache2/mods-available/mime.conf] updated file contents /etc/apache2/mods-available/mime.conf
==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/mime.conf from 43438f to 76e7d0[0m
==> default:     [37m--- /etc/apache2/mods-available/mime.conf	2012-02-07 04:16:59.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.mime.conf20160217-1605-1jcqafl	2016-02-17 14:59:56.379341990 +0000[0m
==> default:     [37m@@ -1,247 +1,193 @@[0m
==> default:     [37m <IfModule mod_mime.c>[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # TypesConfig points to the file containing the list of mappings from[0m
==> default:     [37m+  # filename extension to MIME-type.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  TypesConfig /etc/mime.types[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# TypesConfig points to the file containing the list of mappings from[0m
==> default:     [37m-# filename extension to MIME-type.[0m
==> default:     [37m-#[0m
==> default:     [37m-TypesConfig /etc/mime.types[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # AddType allows you to add to or override the MIME configuration[0m
==> default:     [37m+  # file mime.types for specific file types.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  #AddType application/x-gzip .tgz[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # AddEncoding allows you to have certain browsers uncompress[0m
==> default:     [37m+  # information on the fly. Note: Not all browsers support this.[0m
==> default:     [37m+  # Despite the name similarity, the following Add* directives have[0m
==> default:     [37m+  # nothing to do with the FancyIndexing customization directives above.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  #AddEncoding x-compress .Z[0m
==> default:     [37m+  #AddEncoding x-gzip .gz .tgz[0m
==> default:     [37m+  #AddEncoding x-bzip2 .bz2[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # If the AddEncoding directives above are commented-out, then you[0m
==> default:     [37m+  # probably should define those extensions to indicate media types:[0m
==> default:     [37m+  #[0m
==> default:     [37m+  AddType application/x-compress .Z[0m
==> default:     [37m+  AddType application/x-gzip .gz .tgz[0m
==> default:     [37m+  AddType application/x-bzip2 .bz2[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# AddType allows you to add to or override the MIME configuration[0m
==> default:     [37m-# file mime.types for specific file types.[0m
==> default:     [37m-#[0m
==> default:     [37m-#AddType application/x-gzip .tgz[0m
==> default:     [37m-#[0m
==> default:     [37m-# AddEncoding allows you to have certain browsers uncompress[0m
==> default:     [37m-# information on the fly. Note: Not all browsers support this.[0m
==> default:     [37m-# Despite the name similarity, the following Add* directives have[0m
==> default:     [37m-# nothing to do with the FancyIndexing customization directives above.[0m
==> default:     [37m-#[0m
==> default:     [37m-#AddEncoding x-compress .Z[0m
==> default:     [37m-#AddEncoding x-gzip .gz .tgz[0m
==> default:     [37m-#AddEncoding x-bzip2 .bz2[0m
==> default:     [37m-#[0m
==> default:     [37m-# If the AddEncoding directives above are commented-out, then you[0m
==> default:     [37m-# probably should define those extensions to indicate media types:[0m
==> default:     [37m-#[0m
==> default:     [37m-AddType application/x-compress .Z[0m
==> default:     [37m-AddType application/x-gzip .gz .tgz[0m
==> default:     [37m-AddType application/x-bzip2 .bz2[0m
==> default:     [37m+  AddType image/svg+xml svg svgz[0m
==> default:     [37m+  AddEncoding gzip svgz[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# DefaultLanguage and AddLanguage allows you to specify the language of [0m
==> default:     [37m-# a document. You can then use content negotiation to give a browser a [0m
==> default:     [37m-# file in a language the user can understand.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Specify a default language. This means that all data[0m
==> default:     [37m-# going out without a specific language tag (see below) will [0m
==> default:     [37m-# be marked with this one. You probably do NOT want to set[0m
==> default:     [37m-# this unless you are sure it is correct for all cases.[0m
==> default:     [37m-#[0m
==> default:     [37m-# * It is generally better to not mark a page as [0m
==> default:     [37m-# * being a certain language than marking it with the wrong[0m
==> default:     [37m-# * language![0m
==> default:     [37m-#[0m
==> default:     [37m-# DefaultLanguage nl[0m
==> default:     [37m-#[0m
==> default:     [37m-# Note 1: The suffix does not have to be the same as the language[0m
==> default:     [37m-# keyword --- those with documents in Polish (whose net-standard[0m
==> default:     [37m-# language code is pl) may wish to use "AddLanguage pl .po" to[0m
==> default:     [37m-# avoid the ambiguity with the common suffix for perl scripts.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Note 2: The example entries below illustrate that in some cases [0m
==> default:     [37m-# the two character 'Language' abbreviation is not identical to [0m
==> default:     [37m-# the two character 'Country' code for its country,[0m
==> default:     [37m-# E.g. 'Danmark/dk' versus 'Danish/da'.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Note 3: In the case of 'ltz' we violate the RFC by using a three char[0m
==> default:     [37m-# specifier. There is 'work in progress' to fix this and get[0m
==> default:     [37m-# the reference data for rfc1766 cleaned up.[0m
==> default:     [37m-#[0m
==> default:     [37m-# Catalan (ca) - Croatian (hr) - Czech (cs) - Danish (da) - Dutch (nl)[0m
==> default:     [37m-# English (en) - Esperanto (eo) - Estonian (et) - French (fr) - German (de)[0m
==> default:     [37m-# Greek-Modern (el) - Hebrew (he) - Italian (it) - Japanese (ja)[0m
==> default:     [37m-# Korean (ko) - Luxembourgeois* (ltz) - Norwegian Nynorsk (nn)[0m
==> default:     [37m-# Norwegian (no) - Polish (pl) - Portugese (pt)[0m
==> default:     [37m-# Brazilian Portuguese (pt-BR) - Russian (ru) - Swedish (sv)[0m
==> default:     [37m-# Simplified Chinese (zh-CN) - Spanish (es) - Traditional Chinese (zh-TW)[0m
==> default:     [37m-#[0m
==> default:     [37m-AddLanguage am .amh[0m
==> default:     [37m-AddLanguage ar .ara[0m
==> default:     [37m-AddLanguage be .be[0m
==> default:     [37m-AddLanguage bg .bg[0m
==> default:     [37m-AddLanguage bn .bn[0m
==> default:     [37m-AddLanguage br .br[0m
==> default:     [37m-AddLanguage bs .bs[0m
==> default:     [37m-AddLanguage ca .ca[0m
==> default:     [37m-AddLanguage cs .cz .cs[0m
==> default:     [37m-AddLanguage cy .cy[0m
==> default:     [37m-AddLanguage da .dk[0m
==> default:     [37m-AddLanguage de .de[0m
==> default:     [37m-AddLanguage dz .dz[0m
==> default:     [37m-AddLanguage el .el[0m
==> default:     [37m-AddLanguage en .en[0m
==> default:     [37m-AddLanguage eo .eo[0m
==> default:     [37m-# es is ecmascript in /etc/mime.types[0m
==> default:     [37m-RemoveType  es[0m
==> default:     [37m-AddLanguage es .es[0m
==> default:     [37m-AddLanguage et .et[0m
==> default:     [37m-AddLanguage eu .eu[0m
==> default:     [37m-AddLanguage fa .fa[0m
==> default:     [37m-AddLanguage fi .fi[0m
==> default:     [37m-AddLanguage fr .fr[0m
==> default:     [37m-AddLanguage ga .ga[0m
==> default:     [37m-AddLanguage gl .glg[0m
==> default:     [37m-AddLanguage gu .gu[0m
==> default:     [37m-AddLanguage he .he[0m
==> default:     [37m-AddLanguage hi .hi[0m
==> default:     [37m-AddLanguage hr .hr[0m
==> default:     [37m-AddLanguage hu .hu[0m
==> default:     [37m-AddLanguage hy .hy[0m
==> default:     [37m-AddLanguage id .id[0m
==> default:     [37m-AddLanguage is .is[0m
==> default:     [37m-AddLanguage it .it[0m
==> default:     [37m-AddLanguage ja .ja[0m
==> default:     [37m-AddLanguage ka .ka[0m
==> default:     [37m-AddLanguage kk .kk[0m
==> default:     [37m-AddLanguage km .km[0m
==> default:     [37m-AddLanguage kn .kn[0m
==> default:     [37m-AddLanguage ko .ko[0m
==> default:     [37m-AddLanguage ku .ku[0m
==> default:     [37m-AddLanguage lo .lo[0m
==> default:     [37m-AddLanguage lt .lt[0m
==> default:     [37m-AddLanguage ltz .ltz[0m
==> default:     [37m-AddLanguage lv .lv[0m
==> default:     [37m-AddLanguage mg .mg[0m
==> default:     [37m-AddLanguage mk .mk[0m
==> default:     [37m-AddLanguage ml .ml[0m
==> default:     [37m-AddLanguage mr .mr[0m
==> default:     [37m-AddLanguage ms .msa[0m
==> default:     [37m-AddLanguage nb .nob[0m
==> default:     [37m-AddLanguage ne .ne[0m
==> default:     [37m-AddLanguage nl .nl[0m
==> default:     [37m-AddLanguage nn .nn[0m
==> default:     [37m-AddLanguage no .no[0m
==> default:     [37m-AddLanguage pa .pa[0m
==> default:     [37m-AddLanguage pl .po[0m
==> default:     [37m-AddLanguage pt-BR .pt-br[0m
==> default:     [37m-AddLanguage pt .pt[0m
==> default:     [37m-AddLanguage ro .ro[0m
==> default:     [37m-AddLanguage ru .ru[0m
==> default:     [37m-AddLanguage sa .sa[0m
==> default:     [37m-AddLanguage se .se[0m
==> default:     [37m-AddLanguage si .si[0m
==> default:     [37m-AddLanguage sk .sk[0m
==> default:     [37m-AddLanguage sl .sl[0m
==> default:     [37m-AddLanguage sq .sq[0m
==> default:     [37m-AddLanguage sr .sr[0m
==> default:     [37m-AddLanguage sv .sv[0m
==> default:     [37m-AddLanguage ta .ta[0m
==> default:     [37m-AddLanguage te .te[0m
==> default:     [37m-AddLanguage th .th[0m
==> default:     [37m-AddLanguage tl .tl[0m
==> default:     [37m-RemoveType  tr[0m
==> default:     [37m-# tr is troff in /etc/mime.types[0m
==> default:     [37m-AddLanguage tr .tr[0m
==> default:     [37m-AddLanguage uk .uk[0m
==> default:     [37m-AddLanguage ur .ur[0m
==> default:     [37m-AddLanguage vi .vi[0m
==> default:     [37m-AddLanguage wo .wo[0m
==> default:     [37m-AddLanguage xh .xh[0m
==> default:     [37m-AddLanguage zh-CN .zh-cn[0m
==> default:     [37m-AddLanguage zh-TW .zh-tw[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # DefaultLanguage and AddLanguage allows you to specify the language of[0m
==> default:     [37m+  # a document. You can then use content negotiation to give a browser a[0m
==> default:     [37m+  # file in a language the user can understand.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Specify a default language. This means that all data[0m
==> default:     [37m+  # going out without a specific language tag (see below) will[0m
==> default:     [37m+  # be marked with this one. You probably do NOT want to set[0m
==> default:     [37m+  # this unless you are sure it is correct for all cases.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # * It is generally better to not mark a page as[0m
==> default:     [37m+  # * being a certain language than marking it with the wrong[0m
==> default:     [37m+  # * language![0m
==> default:     [37m+  #[0m
==> default:     [37m+  # DefaultLanguage nl[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Note 1: The suffix does not have to be the same as the language[0m
==> default:     [37m+  # keyword --- those with documents in Polish (whose net-standard[0m
==> default:     [37m+  # language code is pl) may wish to use "AddLanguage pl .po" to[0m
==> default:     [37m+  # avoid the ambiguity with the common suffix for perl scripts.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Note 2: The example entries below illustrate that in some cases[0m
==> default:     [37m+  # the two character 'Language' abbreviation is not identical to[0m
==> default:     [37m+  # the two character 'Country' code for its country,[0m
==> default:     [37m+  # E.g. 'Danmark/dk' versus 'Danish/da'.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Note 3: In the case of 'ltz' we violate the RFC by using a three char[0m
==> default:     [37m+  # specifier. There is 'work in progress' to fix this and get[0m
==> default:     [37m+  # the reference data for rfc1766 cleaned up.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Catalan (ca) - Croatian (hr) - Czech (cs) - Danish (da) - Dutch (nl)[0m
==> default:     [37m+  # English (en) - Esperanto (eo) - Estonian (et) - French (fr) - German (de)[0m
==> default:     [37m+  # Greek-Modern (el) - Hebrew (he) - Italian (it) - Japanese (ja)[0m
==> default:     [37m+  # Korean (ko) - Luxembourgeois* (ltz) - Norwegian Nynorsk (nn)[0m
==> default:     [37m+  # Norwegian (no) - Polish (pl) - Portugese (pt)[0m
==> default:     [37m+  # Brazilian Portuguese (pt-BR) - Russian (ru) - Swedish (sv)[0m
==> default:     [37m+  # Simplified Chinese (zh-CN) - Spanish (es) - Traditional Chinese (zh-TW)[0m
==> default:     [37m+  #[0m
==> default:     [37m+  AddLanguage ca .ca[0m
==> default:     [37m+  AddLanguage cs .cz .cs[0m
==> default:     [37m+  AddLanguage da .dk[0m
==> default:     [37m+  AddLanguage de .de[0m
==> default:     [37m+  AddLanguage el .el[0m
==> default:     [37m+  AddLanguage en .en[0m
==> default:     [37m+  AddLanguage eo .eo[0m
==> default:     [37m+  # See README.Debian for Spanish[0m
==> default:     [37m+  AddLanguage es .es[0m
==> default:     [37m+  AddLanguage et .et[0m
==> default:     [37m+  AddLanguage fr .fr[0m
==> default:     [37m+  AddLanguage he .he[0m
==> default:     [37m+  AddLanguage hr .hr[0m
==> default:     [37m+  AddLanguage it .it[0m
==> default:     [37m+  AddLanguage ja .ja[0m
==> default:     [37m+  AddLanguage ko .ko[0m
==> default:     [37m+  AddLanguage ltz .ltz[0m
==> default:     [37m+  AddLanguage nl .nl[0m
==> default:     [37m+  AddLanguage nn .nn[0m
==> default:     [37m+  AddLanguage no .no[0m
==> default:     [37m+  AddLanguage pl .po[0m
==> default:     [37m+  AddLanguage pt .pt[0m
==> default:     [37m+  AddLanguage pt-BR .pt-br[0m
==> default:     [37m+  AddLanguage ru .ru[0m
==> default:     [37m+  AddLanguage sv .sv[0m
==> default:     [37m+  # See README.Debian for Turkish[0m
==> default:     [37m+  AddLanguage tr .tr[0m
==> default:     [37m+  AddLanguage zh-CN .zh-cn[0m
==> default:     [37m+  AddLanguage zh-TW .zh-tw[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# Commonly used filename extensions to character sets. You probably[0m
==> default:     [37m-# want to avoid clashes with the language extensions, unless you[0m
==> default:     [37m-# are good at carefully testing your setup after each change.[0m
==> default:     [37m-# See http://www.iana.org/assignments/character-sets for the[0m
==> default:     [37m-# official list of charset names and their respective RFCs.[0m
==> default:     [37m-#[0m
==> default:     [37m-AddCharset us-ascii    .ascii .us-ascii[0m
==> default:     [37m-AddCharset ISO-8859-1  .iso8859-1  .latin1[0m
==> default:     [37m-AddCharset ISO-8859-2  .iso8859-2  .latin2 .cen[0m
==> default:     [37m-AddCharset ISO-8859-3  .iso8859-3  .latin3[0m
==> default:     [37m-AddCharset ISO-8859-4  .iso8859-4  .latin4[0m
==> default:     [37m-AddCharset ISO-8859-5  .iso8859-5  .cyr .iso-ru[0m
==> default:     [37m-AddCharset ISO-8859-6  .iso8859-6  .arb .arabic[0m
==> default:     [37m-AddCharset ISO-8859-7  .iso8859-7  .grk .greek[0m
==> default:     [37m-AddCharset ISO-8859-8  .iso8859-8  .heb .hebrew[0m
==> default:     [37m-AddCharset ISO-8859-9  .iso8859-9  .latin5 .trk[0m
==> default:     [37m-AddCharset ISO-8859-10  .iso8859-10  .latin6[0m
==> default:     [37m-AddCharset ISO-8859-13  .iso8859-13[0m
==> default:     [37m-AddCharset ISO-8859-14  .iso8859-14  .latin8[0m
==> default:     [37m-AddCharset ISO-8859-15  .iso8859-15  .latin9[0m
==> default:     [37m-AddCharset ISO-8859-16  .iso8859-16  .latin10[0m
==> default:     [37m-AddCharset ISO-2022-JP .iso2022-jp .jis[0m
==> default:     [37m-AddCharset ISO-2022-KR .iso2022-kr .kis[0m
==> default:     [37m-AddCharset ISO-2022-CN .iso2022-cn .cis[0m
==> default:     [37m-AddCharset Big5        .Big5       .big5 .b5[0m
==> default:     [37m-AddCharset cn-Big5     .cn-big5[0m
==> default:     [37m-# For russian, more than one charset is used (depends on client, mostly):[0m
==> default:     [37m-AddCharset WINDOWS-1251 .cp-1251   .win-1251[0m
==> default:     [37m-AddCharset CP866       .cp866[0m
==> default:     [37m-AddCharset KOI8      .koi8[0m
==> default:     [37m-AddCharset KOI8-E      .koi8-e[0m
==> default:     [37m-AddCharset KOI8-r      .koi8-r .koi8-ru[0m
==> default:     [37m-AddCharset KOI8-U      .koi8-u[0m
==> default:     [37m-AddCharset KOI8-ru     .koi8-uk .ua[0m
==> default:     [37m-AddCharset ISO-10646-UCS-2 .ucs2[0m
==> default:     [37m-AddCharset ISO-10646-UCS-4 .ucs4[0m
==> default:     [37m-AddCharset UTF-7       .utf7[0m
==> default:     [37m-AddCharset UTF-8       .utf8[0m
==> default:     [37m-AddCharset UTF-16      .utf16[0m
==> default:     [37m-AddCharset UTF-16BE    .utf16be[0m
==> default:     [37m-AddCharset UTF-16LE    .utf16le[0m
==> default:     [37m-AddCharset UTF-32      .utf32[0m
==> default:     [37m-AddCharset UTF-32BE    .utf32be[0m
==> default:     [37m-AddCharset UTF-32LE    .utf32le[0m
==> default:     [37m-AddCharset euc-cn      .euc-cn[0m
==> default:     [37m-AddCharset euc-gb      .euc-gb[0m
==> default:     [37m-AddCharset euc-jp      .euc-jp[0m
==> default:     [37m-AddCharset euc-kr      .euc-kr[0m
==> default:     [37m-#Not sure how euc-tw got in - IANA doesn't list it???[0m
==> default:     [37m-AddCharset EUC-TW      .euc-tw[0m
==> default:     [37m-AddCharset gb2312      .gb2312 .gb[0m
==> default:     [37m-AddCharset iso-10646-ucs-2 .ucs-2 .iso-10646-ucs-2[0m
==> default:     [37m-AddCharset iso-10646-ucs-4 .ucs-4 .iso-10646-ucs-4[0m
==> default:     [37m-AddCharset shift_jis   .shift_jis .sjis[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # Commonly used filename extensions to character sets. You probably[0m
==> default:     [37m+  # want to avoid clashes with the lang[0m
[1;32m==> default: uage extensions, unless you[0m
==> default:     [37m+  # are good at carefully testing your setup after each change.[0m
==> default:     [37m+  # See http://www.iana.org/assignments/character-sets for the[0m
==> default:     [37m+  # official list of charset names and their respective RFCs.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  AddCharset us-ascii    .ascii .us-ascii[0m
==> default:     [37m+  AddCharset ISO-8859-1  .iso8859-1  .latin1[0m
==> default:     [37m+  AddCharset ISO-8859-2  .iso8859-2  .latin2 .cen[0m
==> default:     [37m+  AddCharset ISO-8859-3  .iso8859-3  .latin3[0m
==> default:     [37m+  AddCharset ISO-8859-4  .iso8859-4  .latin4[0m
==> default:     [37m+  AddCharset ISO-8859-5  .iso8859-5  .cyr .iso-ru[0m
==> default:     [37m+  AddCharset ISO-8859-6  .iso8859-6  .arb .arabic[0m
==> default:     [37m+  AddCharset ISO-8859-7  .iso8859-7  .grk .greek[0m
==> default:     [37m+  AddCharset ISO-8859-8  .iso8859-8  .heb .hebrew[0m
==> default:     [37m+  AddCharset ISO-8859-9  .iso8859-9  .latin5 .trk[0m
==> default:     [37m+  AddCharset ISO-8859-10  .iso8859-10  .latin6[0m
==> default:     [37m+  AddCharset ISO-8859-13  .iso8859-13[0m
==> default:     [37m+  AddCharset ISO-8859-14  .iso8859-14  .latin8[0m
==> default:     [37m+  AddCharset ISO-8859-15  .iso8859-15  .latin9[0m
==> default:     [37m+  AddCharset ISO-8859-16  .iso8859-16  .latin10[0m
==> default:     [37m+  AddCharset ISO-2022-JP .iso2022-jp .jis[0m
==> default:     [37m+  AddCharset ISO-2022-KR .iso2022-kr .kis[0m
==> default:     [37m+  AddCharset ISO-2022-CN .iso2022-cn .cis[0m
==> default:     [37m+  AddCharset Big5        .Big5       .big5 .b5[0m
==> default:     [37m+  AddCharset cn-Big5     .cn-big5[0m
==> default:     [37m+  # For russian, more than one charset is used (depends on client, mostly):[0m
==> default:     [37m+  AddCharset WINDOWS-1251 .cp-1251   .win-1251[0m
==> default:     [37m+  AddCharset CP866       .cp866[0m
==> default:     [37m+  AddCharset KOI8      .koi8[0m
==> default:     [37m+  AddCharset KOI8-E      .koi8-e[0m
==> default:     [37m+  AddCharset KOI8-r      .koi8-r .koi8-ru[0m
==> default:     [37m+  AddCharset KOI8-U      .koi8-u[0m
==> default:     [37m+  AddCharset KOI8-ru     .koi8-uk .ua[0m
==> default:     [37m+  AddCharset ISO-10646-UCS-2 .ucs2[0m[0m
[1;32m==> default: 
==> default:     [37m+  AddCharset ISO-10646-UCS-4 .ucs4[0m
==> default:     [37m+  AddCharset UTF-7       .utf7[0m
==> default:     [37m+  AddCharset UTF-8       .utf8[0m
==> default:     [37m+  AddCharset UTF-16      .utf16[0m
==> default:     [37m+  AddCharset UTF-16BE    .utf16be[0m
==> default:     [37m+  AddCharset UTF-16LE    .utf16le[0m
==> default:     [37m+  AddCharset UTF-32      .utf32[0m
==> default:     [37m+  AddCharset UTF-32BE    .utf32be[0m
==> default:     [37m+  AddCharset UTF-32LE    .utf32le[0m
==> default:     [37m+  AddCharset euc-cn      .euc-cn[0m[0m
[1;32m==> default:     [37m+  AddCharset euc-gb      .euc-gb[0m
==> default:     [37m+  AddCharset euc-jp      .euc-jp[0m
==> default:     [37m+  AddCharset euc-kr      .euc-kr[0m
==> default:     [37m+  #Not sure how euc-tw got in - IANA doesn't list it???[0m
==> default:     [37m+  AddCharset EUC-TW      .euc-tw[0m
==> default:     [37m+  AddCharset gb2312      .gb2312 .gb[0m[0m
[1;32m==> default:     [37m+  AddCharset iso-10646-ucs-2 .ucs-2 .iso-10646-ucs-2[0m
==> default:     [37m+  AddCharset iso-10646-ucs-4 .ucs-4 .iso-10646-ucs-4[0m
==> default:     [37m+  AddCharset shift_jis   .shift_jis .sjis[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-# AddHandler allows you to map certain file extensions to "handlers":[0m
==> default:     [37m-# actions unrelated to filetype. These can be either built into the server[0m
==> default:     [37m-# or added with the Action directive (see below)[0m
==> default:     [37m-#[0m
==> default:     [37m-# To use CGI scripts outside of ScriptAliased directories:[0m
==> default:     [0m
[1;32m==> default: [37m-# (You will also need to add "ExecCGI" to the "Options" directive.)[0m
==> default:     [0m
[1;32m==> default: [37m-#[0m
==> default:     [37m-#AddHandler cgi-script .cgi[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # AddHandler allows you to map certain file extensions to "handlers":[0m
==> default:     [0m
[1;32m==> default: [37m+  # actions unrelated to filetype. These can be either built into the server[0m[0m
[1;32m==> default: 
==> default:     [37m+  # or added with the Action directive (see below)[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # To use CGI scripts outside of ScriptAliased directories:[0m
==> default:     [37m+  # (You will also need to add "ExecCGI" to the "Options" directive.)[0m
==> default:     [37m+  #[0m[0m
[1;32m==> default: 
==> default:     [37m+  #AddHandler cgi-script .cgi[0m
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-# For files that include their own HTTP headers:[0m[0m
[1;32m==> default: 
==> default:     [37m-#[0m
==> default:     [37m-#AddHandler send-as-is asis[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # For files that include their own HTTP headers:[0m
==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  #AddHandler send-as-is asis[0m
==> default:     [37m [0m[0m
[1;32m==> default:     [37m-#[0m
==> default:     [37m-# For server-parsed imagemap files:[0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-#AddHandler imap-file map[0m
==> default:     [37m+  #[0m
==> default:     [37m+  # For server-parsed imagemap files:[0m
==> default:     [37m+  #[0m
==> default:     [37m+  #AddHandler imap-file map[0m
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m-#[0m
==> default:     [37m-# For type maps (negotiated resources):[0m[0m
[1;32m==> default: 
==> default:     [37m-# (This is enabled by default to allow the Apache "It Worked" page[0m
==> default:     [37m-#  to be distributed in multiple languages.)[0m
==> default:     [37m-#[0m
==> default:     [37m-AddHandler type-map var[0m
==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  # For type maps (negotiated resources):[0m
==> default:     [37m+  # (This is enabled by default to allow the Apache "It Worked" page[0m
==> default:     [37m+  #  to be distributed in multiple languages.)[0m
==> default:     [37m+  #[0m
==> default:     [37m+  AddHandler type-map var[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-# Filters allow you to process content before it is sent to the client.[0m
==> default:     [37m-#[0m
==> default:     [37m-# To parse .shtml files for server-side includes (SSI):[0m
==> default:     [37m-# (You will also need to add "Includes" to the "Options" directive.)[0m
==> default:     [0m
[1;32m==> default: [37m-#[0m
==> default:     [37m-AddType text/html .shtml[0m
==> default:     [37m-AddOutputFilter INCLUDES .shtml[0m
==> default:     [37m-[0m
==> default:     [37m+  #[0m
==> default:     [0m
[1;32m==> default: [37m+  # Filters allow you to process content before it is sent to the client.[0m
==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  # To parse .shtml files for server-side includes (SSI):[0m
==> default:     [37m+  # (You will also need to add "Includes" to the "Options" directive.)[0m[0m
[1;32m==> default: 
==> default:     [37m+  #[0m
==> default:     [37m+  AddType text/html .shtml[0m
==> default:     [37m+  AddOutputFilter INCLUDES .shtml[0m
==> default:     [37m </IfModule>[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/mime.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued[0m
[1;32m==> default:   * file[/etc/apache2/mods-available/mime.load] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * execute[a2enmod mime] action run[0m
[1;32m==> default:  (skipped due to not_if)[0m
[1;32m==> default: Recipe: apache2::mod_negotiation[0m[0m
[1;32m==> default:   * template[/etc/apache2/mods-available/negotiation.conf] action create[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/negotiation.conf] backed up to /var/chef/backup/etc/apache2/mods-available/negotiation.conf.chef-20160217145957.057337[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/negotiation.conf] updated file contents /etc/apache2/mods-available/negotiation.conf[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- update content in file /etc/apache2/mods-available/negotiation.conf from ca1d73 to 3ad8fd[0m
==> default:     [37m--- /etc/apache2/mods-available/negotiation.conf	2012-02-07 04:17:00.000000000 +0000[0m
==> default:     [0m
[1;32m==> default: [37m+++ /etc/apache2/mods-available/.negotiation.conf20160217-1605-deofrx	2016-02-17 14:59:57.051669552 +0000[0m
==> default:     [37m@@ -1,19 +1,18 @@[0m
==> default:     [37m <IfModule mod_negotiation.c>[0m[0m
[1;32m==> default: 
==> default:     [37m-#[0m
==> default:     [37m-# LanguagePriority allows you to give precedence to some languages[0m
==> default:     [0m
[1;32m==> default: [37m-# in case of a tie during content negotiation.[0m[0m
[1;32m==> default:     [37m-#[0m[0m
[1;32m==> default:     [37m-# Just list the languages in decreasing order of preference. We have[0m
==> default:     [37m-# more or less alphabetized them here. You probably want to change this.[0m[0m
[1;32m==> default:     [37m-#[0m
==> default:     [37m-LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv tr zh-CN zh-TW[0m[0m
[1;32m==> default: 
==> default:     [37m+  #[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+  # LanguagePriority allows you to give precedence to some languages[0m[0m
[1;32m==> default: 
==> default:     [37m+  # in case of a tie during content negotiation.[0m
==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  # Just list the languages in decreasing order of preference. We have[0m
==> default:     [0m
[1;32m==> default: [37m+  # more or less alphabetized them here. You probably want to change this.[0m
==> default:     [37m+  #[0m
==> default:     [37m+  LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv tr zh-CN zh-TW[0m
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [0m
[1;32m==> default: [37m-#[0m
==> default:     [37m-# ForceLanguagePriority allows you to serve a result page rather than[0m
==> default:     [37m-# MULTIPLE CHOICES (Prefer) [in case of a tie] or NOT ACCEPTABLE (Fallback)[0m
==> default:     [37m-# [in case no accepted languages matched the available variants][0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-ForceLanguagePriority Prefer Fallback[0m
==> default:     [37m-[0m[0m
[1;32m==> default:     [37m+  #[0m
==> default:     [37m+  # ForceLanguagePriority allows you to serve a result page rather than[0m
==> default:     [37m+  # MULTIPLE CHOICES (Prefer) [in case of a tie] or NOT ACCEPTABLE (Fallback)[0m
==> default:     [0m
[1;32m==> default: [37m+  # [in case no accepted languages matched the available variants][0m[0m
[1;32m==> default:     [37m+  #[0m
==> default:     [37m+  ForceLanguagePriority Prefer Fallback[0m
==> default:     [37m </IfModule>[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/negotiation.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued[0m
[1;32m==> default:   * file[/etc/apache2/mods-available/negotiation.load] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   [0m
[1;32m==> default: * execute[a2enmod negotiation] action run[0m
[1;32m==> default:  (skipped due to not_if)[0m
[1;32m==> default: Recipe: apache2::mod_setenvif[0m[0m
[1;32m==> default:   * template[/etc/apache2/mods-available/setenvif.conf] action create[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/setenvif.conf] backed up to /var/chef/backup/etc/apache2/mods-available/setenvif.conf.chef-20160217145957.078814[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/setenvif.conf] updated file contents /etc/apache2/mods-available/setenvif.conf[0m
[1;32m==> default: 
==> default:     [32m- update content in file /etc/apache2/mods-available/setenvif.conf from 1798c3 to fb5a27[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m--- /etc/apache2/mods-available/setenvif.conf	2012-02-07 04:17:00.000000000 +0000[0m
==> default:     [37m+++ /etc/apache2/mods-available/.setenvif.conf20160217-1605-18787nh	2016-02-17 14:59:57.071679288 +0000[0m
==> default:     [0m
[1;32m==> default: [37m@@ -1,31 +1,29 @@[0m
==> default:     [37m <IfModule mod_setenvif.c>[0m
==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  # The following directives modify normal HTTP response behavior to[0m
==> default:     [0m
[1;32m==> default: [37m+  # handle known problems with browser implementations.[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+  #[0m
==> default:     [37m+  BrowserMatch "Mozilla/2" nokeepalive[0m
==> default:     [0m
[1;32m==> default: [37m+  BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0[0m
==> default:     [37m+  BrowserMatch "RealPlayer 4\.0" force-response-1.0[0m
==> default:     [0m
[1;32m==> default: [37m+  BrowserMatch "Java/1\.0" force-response-1.0[0m
==> default:     [37m+  BrowserMatch "JDK/1\.0" force-response-1.0[0m
==> default:     [0m
[1;32m==> default: [37m [0m[0m
[1;32m==> default: 
==> default:     [37m-#[0m
==> default:     [37m-# The following directives modify normal HTTP response behavior to[0m[0m
[1;32m==> default: 
==> default:     [37m-# handle known problems with browser implementations.[0m
==> default:     [37m-#[0m[0m
[1;32m==> default: 
==> default:     [37m-BrowserMatch "Mozilla/2" nokeepalive[0m
==> default:     [37m-BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0[0m[0m
[1;32m==> default: 
==> default:     [37m-BrowserMatch "RealPlayer 4\.0" force-response-1.0[0m
==> default:     [0m
[1;32m==> default: [37m-BrowserMatch "Java/1\.0" force-response-1.0[0m
==> default:     [37m-BrowserMatch "JDK/1\.0" force-response-1.0[0m
==> default:     [0m
[1;32m==> default: [37m-[0m[0m
[1;32m==> default: 
==> default:     [37m-#[0m
==> default:     [37m-# The following directive disables redirects on non-GET requests for[0m
==> default:     [0m
[1;32m==> default: [37m-# a directory that does not include the trailing slash.  This fixes a [0m[0m
[1;32m==> default: 
==> default:     [37m-# problem with Microsoft WebFolders which does not appropriately handle [0m
==> default:     [37m-# redirects for folders with DAV methods.[0m[0m
[1;32m==> default:     [37m-# Same deal with Apple's DAV filesystem and Gnome VFS support for DAV.[0m
==> default:     [37m-#[0m
==> default:     [0m
[1;32m==> default: [37m-BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefully[0m
==> default:     [37m-BrowserMatch "MS FrontPage" redirect-carefully[0m[0m
[1;32m==> default: 
==> default:     [37m-BrowserMatch "^WebDrive" redirect-carefully[0m[0m
[1;32m==> default:     [37m-BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully[0m
==> default:     [37m-BrowserMatch "^gnome-vfs/1.0" redirect-carefully[0m
==> default:     [0m
[1;32m==> default: [37m-BrowserMatch "^gvfs/1" redirect-carefully[0m
==> default:     [37m-BrowserMatch "^XML Spy" redirect-carefully[0m
==> default:     [0m
[1;32m==> default: [37m-BrowserMatch "^Dreamweaver-WebDAV-SCM1" redirect-carefully[0m
==> default:     [37m-BrowserMatch " Konqueror/4" redirect-carefully[0m
==> default:     [37m-[0m[0m
[1;32m==> default: 
==> default:     [37m+  #[0m
==> default:     [37m+  # The following directive disables redirects on non-GET requests for[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+  # a directory that does not include the trailing slash.  This fixes a[0m
==> default:     [0m
[1;32m==> default: [37m+  # problem with Microsoft WebFolders which does not appropriately handle[0m[0m
[1;32m==> default: 
==> default:     [37m+  # redirects for folders with DAV methods.[0m
==> default:     [0m
[1;32m==> default: [37m+  # Same deal with Apple's DAV filesystem and Gnome VFS support for DAV.[0m
==> default:     [37m+  #[0m
==> default:     [0m
[1;32m==> default: [37m+  BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefully[0m
==> default:     [37m+  BrowserMatch "MS FrontPage" redirect-carefully[0m
==> default:     [0m
[1;32m==> default: [37m+  BrowserMatch "^WebDrive" redirect-carefully[0m[0m
[1;32m==> default: 
==> default:     [37m+  BrowserMatch "^WebDAVFS/1.[012]" redirect-carefully[0m
==> default:     [37m+  BrowserMatch "^gnome-vfs/1.0" redirect-carefully[0m[0m
[1;32m==> default: 
==> default:     [37m+  BrowserMatch "^gvfs/1" redirect-carefully[0m
==> default:     [37m+  BrowserMatch "^XML Spy" redirect-carefully[0m
==> default:     [37m+  BrowserMatch "^Dreamweaver-WebDAV-SCM1" redirect-carefully[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+  BrowserMatch " Konqueror/4" redirect-carefully[0m
==> default:     [0m
[1;32m==> default: [37m </IfModule>[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: [2016-02-17T14:59:57+00:00] INFO: template[/etc/apache2/mods-available/setenvif.conf] not queuing delayed action reload on service[apache2] (delayed), as it's already been queued[0m
[1;32m==> default:   * file[/etc/apache2/mods-available/setenvif.load] action create[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * execute[a2enmod setenvif] action run[0m
[1;32m==> default:  (skipped due to not_if)[0m
[1;32m==> default: Recipe: apache2::default[0m[0m
[1;32m==> default:   * service[apache2] action enable[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * service[apache2] action start[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default: Recipe: php::package[0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * apt_package[php5-cgi] action install[0m
[1;32m==> default: [2016-02-17T15:00:03+00:00] INFO: apt_package[php5-cgi] installed php5-cgi at 5.3.10-1ubuntu3.21[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- install version 5.3.10-1ubuntu3.21 of package php5-cgi[0m
==> default: [0m[0m
[1;32m==> default:   * apt_package[php5] action install[0m
[1;32m==> default: [2016-02-17T15:00:09+00:00] INFO: apt_package[php5] installed php5 at 5.3.10-1ubuntu3.21[0m
[1;32m==> default:     [32m- install version 5.3.10-1ubuntu3.21 of package php5[0m[0m
[1;32m==> default: 
==> default: [0m  * apt_package[php5-dev] action install[0m
[1;32m==> default: [2016-02-17T15:00:28+00:00] INFO: apt_package[php5-dev] installed php5-dev at 5.3.10-1ubuntu3.21[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- install version 5.3.10-1ubuntu3.21 of package php5-dev[0m
==> default: [0m[0m
[1;32m==> default:   * apt_package[php5-cli] action install[0m
[1;32m==> default: [2016-02-17T15:00:46+00:00] INFO: apt_package[php5-cli] installed php5-cli at 5.3.10-1ubuntu3.21[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- install version 5.3.10-1ubuntu3.21 of package php5-cli[0m
==> default: [0m[0m
[1;32m==> default:   * apt_package[php-pear] action install[0m
[1;32m==> default: [2016-02-17T15:00:57+00:00] INFO: apt_package[php-pear] installed php-pear at 5.3.10-1ubuntu3.21[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- install version 5.3.10-1ubuntu3.21 of package php-pear[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: Recipe: php::ini[0m[0m
[1;32m==> default:   * template[/etc/php5/cli/php.ini] action create[0m
[1;32m==> default: [2016-02-17T15:00:57+00:00] INFO: template[/etc/php5/cli/php.ini] backed up to /var/chef/backup/etc/php5/cli/php.ini.chef-20160217150057.682299[0m
[1;32m==> default: [2016-02-17T15:00:57+00:00] INFO: template[/etc/php5/cli/php.ini] updated file contents /etc/php5/cli/php.ini[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- update content in file /etc/php5/cli/php.ini from d8fe7d to 194631[0m
==> default:     [37m--- /etc/php5/cli/php.ini	2015-10-28 01:58:44.000000000 +0000[0m[0m
[1;32m==> default:     [37m+++ /etc/php5/cli/.php.ini20160217-1605-tc5pae	2016-02-17 15:00:57.537137517 +0000[0m
==> default:     [0m
[1;32m==> default: [37m@@ -225,7 +225,7 @@[0m
==> default:     [37m ; http://php.net/short-open-tag[0m[0m
[1;32m==> default: 
==> default:     [37m short_open_tag = On[0m
==> default:     [37m [0m
==> default:     [37m-; Allow ASP-style <% %> tags.[0m
==> default:     [0m
[1;32m==> default: [37m+; Allow ASP-style  tags.[0m
==> default:     [37m ; http://php.net/asp-tags[0m[0m
[1;32m==> default:     [37m asp_tags = Off[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m@@ -317,7 +317,7 @@[0m
==> default:     [37m ; When floats & doubles are serialized store serialize_precision significant[0m[0m
[1;32m==> default: 
==> default:     [37m ; digits after the floating point. The default value ensures that when floats[0m
==> default:     [37m ; are decoded with unserialize, the data will remain the same.[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m-serialize_precision = 17[0m
==> default:     [37m+serialize_precision = 100[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [0m
[1;32m==> default: [37m ; This directive allows you to enable and disable warnings which PHP will issue[0m[0m
[1;32m==> default: 
==> default:     [37m ; if you pass a value by reference at function call time. Passing values by[0m
==> default:     [37m@@ -419,10 +419,6 @@[0m
==> default:     [37m ; http://php.net/realpath-cache-ttl[0m
==> default:     [0m
[1;32m==> default: [37m ;realpath_cache_ttl = 120[0m[0m
[1;32m==> default: 
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m-; Enables or disables the circular reference collector.[0m
==> default:     [37m-; http://php.net/zend.enable-gc[0m[0m
[1;32m==> default:     [37m-zend.enable_gc = On[0m[0m
[1;32m==> default: 
==> default:     [37m-[0m
==> default:     [0m
[1;32m==> default: [37m ;;;;;;;;;;;;;;;;;[0m
==> default:     [37m ; Miscellaneous ;[0m[0m
[1;32m==> default:     [37m ;;;;;;;;;;;;;;;;;[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -457,9 +453,6 @@[0m
==> default:     [37m ; http://php.net/max-input-nesting-level[0m
==> default:     [37m ;max_input_nesting_level = 64[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m-; How many GET/POST/COOKIE input variables may be accepted[0m[0m
[1;32m==> default: 
==> default:     [37m-; max_input_vars = 1000[0m
==> default:     [37m-[0m[0m
[1;32m==> default:     [37m ; Maximum amount of memory a script may consume (128MB)[0m
==> default:     [37m ; http://php.net/memory-limit[0m
==> default:     [0m
[1;32m==> default: [37m memory_limit = -1[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -628,13 +621,13 @@[0m
==> default:     [37m ; this setting blank.[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ; http://php.net/error-prepend-string[0m
==> default:     [37m ; Example:[0m
==> default:     [0m
[1;32m==> default: [37m-;error_prepend_string = "<span style='color: #ff0000'>"[0m
==> default:     [0m
[1;32m==> default: [37m+;error_prepend_string = "<font color=#ff0000>"[0m
==> default:     [37m [0m
==> default:     [37m ; String to output after an error message. PHP's default behavior is to leave[0m
==> default:     [37m ; this setting blank.[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ; http://php.net/error-append-string[0m
==> default:     [0m
[1;32m==> default: [37m ; Example:[0m
==> default:     [0m
[1;32m==> default: [37m-;error_append_string = "</span>"[0m[0m
[1;32m==> default: 
==> default:     [37m+;error_append_string = "</font>"[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [37m ; Log errors to specified file. PHP's default behavior is to leave this value[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m ; empty.[0m[0m
[1;32m==> default:     [37m@@ -644,11 +637,6 @@[0m[0m
[1;32m==> default: 
==> default:     [37m ; Log errors to syslog (Event Log on NT, not valid in Windows 95).[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m ;error_log = syslog[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m-;windows.show_crt_warning[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m-; Default value: 0[0m
==> default:     [37m-; Development value: 0[0m[0m
[1;32m==> default: 
==> default:     [37m-; Production value: 0[0m[0m
[1;32m==> default: 
==> default:     [37m-[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m ;;;;;;;;;;;;;;;;;[0m[0m
[1;32m==> default:     [37m ; Data Handling ;[0m
==> default:     [0m
[1;32m==> default: [37m ;;;;;;;;;;;;;;;;;[0m[0m
[1;32m==> default:     [37m@@ -949,6 +937,7 @@[0m
==> default:     [37m ;[0m[0m
[1;32m==> default:     [37m ; If you only provide the name of the extension, PHP will look for it in its[0m
==> default:     [0m
[1;32m==> default: [37m ; default extension directory.[0m
==> default:     [37m+;[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m ;;;;;;;;;;;;;;;;;;;[0m
==> default:     [37m ; Module Settings ;[0m
==> default:     [0m
[1;32m==> default: [37m@@ -1065,8 +1054,7 @@[0m[0m
[1;32m==> default:     [37m ; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename[0m
==> default:     [0m
[1;32m==> default: [37m mail.add_x_header = On[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [37m-; The path to a log file that will log all mail() calls. Log entries include[0m[0m
[1;32m==> default:     [37m-; the full path of the script, line number, To address and headers.[0m
==> default:     [37m+; Log all mail() calls including the full path of the script, line #, to address and headers[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ;mail.log =[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m [SQL][0m
==> default:     [0m
[1;32m==> default: [37m@@ -1259,12 +1247,12 @@[0m
==> default:     [37m mysqli.reconnect = Off[0m
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m [mysqlnd][0m
==> default:     [37m-; Enable / Disable collection of general statistics by mysqlnd which can be[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m+; Enable / Disable collection of general statstics by mysqlnd which can be[0m
==> default:     [0m
[1;32m==> default: [37m ; used to tune and monitor MySQL operations.[0m
==> default:     [37m ; http://php.net/mysqlnd.collect_statistics[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m mysqlnd.collect_statistics = On[0m
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m-; Enable / Disable collection of memory usage statistics by mysqlnd which can be[0m
==> default:     [0m
[1;32m==> default: [37m+; Enable / Disable collection of memory usage statstics by mysqlnd which can be[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ; used to tune and monitor MySQL operations.[0m
==> default:     [0m
[1;32m==> default: [37m ; http://php.net/mysqlnd.collect_memory_statistics[0m[0m
[1;32m==> default: 
==> default:     [37m mysqlnd.collect_memory_statistics = Off[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m@@ -1331,7 +1319,7 @@[0m
==> default:     [0m
[1;32m==> default: [37m ; http://php.net/oci8.old-oci-close-semantics[0m[0m
[1;32m==> default: 
==> default:     [37m ;oci8.old_oci_close_semantics = Off[0m[0m
[1;32m==> default: 
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m-[PostgreSQL][0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m+[PostgresSQL][0m
==> default:     [37m ; Allow or prevent persistent links.[0m
==> default:     [37m ; http://php.net/pgsql.allow-persistent[0m[0m
[1;32m==> default:     [37m pgsql.allow_persistent = On[0m[0m
[1;32m==> default:     [37m@@ -1354,7 +1342,7 @@[0m
==> default:     [0m
[1;32m==> default: [37m ; http://php.net/pgsql.ignore-notice[0m
==> default:     [37m pgsql.ignore_notice = 0[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m-; Log PostgreSQL backends Notice message or not.[0m
==> default:     [0m
[1;32m==> default: [37m+; Log PostgreSQL backends Noitce message or not.[0m
==> default:     [37m ; Unless pgsql.ignore_notice=0, module cannot log notice message.[0m[0m
[1;32m==> default:     [37m ; http://php.net/pgsql.log-notice[0m
==> default:     [0m
[1;32m==> default: [37m pgsql.log_notice = 0[0m
==> default:     [0m
[1;32m==> default: [37m@@ -1493,7 +1481,7 @@[0m
==> default:     [37m ; Development Value: 1[0m[0m
[1;32m==> default: 
==> default:     [37m ; Production Value: 1[0m[0m
[1;32m==> default:     [37m ; http://php.net/session.gc-probability[0m
==> default:     [0m
[1;32m==> default: [37m-session.gc_probability = 0[0m
==> default:     [37m+session.gc_probability = 1[0m[0m
[1;32m==> default: 
==> default:     [37m [0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m ; Defines the probability that the 'garbage collection' process is started on every[0m
==> default:     [0m
[1;32m==> default: [37m ; session initialization. The probability is calculated by using the following equation:[0m[0m
[1;32m==> default: 
==> default:     [37m@@ -1520,7 +1508,7 @@[0m
==> default:     [37m ;       collection through a shell script, cron entry, or some other method.[0m[0m
[1;32m==> default: 
==> default:     [37m ;       For example, the following script would is the equivalent of[0m
==> default:     [0m
[1;32m==> default: [37m ;       setting session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):[0m
==> default:     [0m
[1;32m==> default: [37m-;          find /path/to/sessions -cmin +24 | xargs rm[0m
==> default:     [37m+;          cd /path/to/sessions; find -cmin +24 | xargs rm[0m
==> default:     [37m [0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ; PHP 4.2 and less have an undocumented feature/bug that allows you to[0m
==> default:     [37m ; to initialize a session variable in the global scope, even when register_globals[0m[0m
[1;32m==> default:     [37m@@ -1559,11 +1547,12 @@[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m ; Specified here to create the session id.[0m[0m
[1;32m==> default:     [37m ; http://php.net/session.entropy-file[0m
==> default:     [37m-; On systems that don't have /dev/urandom /dev/arandom can be used[0m[0m
[1;32m==> default: 
==> default:     [37m-; On windows, setting the entropy_length setting will activate the [0m
==> default:     [0m
[1;32m==> default: [37m-; Windows random source (using the CryptoAPI)[0m
==> default:     [0m
[1;32m==> default: [37m ;session.entropy_file = /dev/urandom[0m
==> default:     [37m+session.entropy_file =[0m
==> default:     [37m [0m
==> default:     [37m+; http://php.net/session.entropy-length[0m
==> default:     [37m+;session.entropy_length = 16[0m
==> default:     [0m
[1;32m==> default: [37m+[0m
==> default:     [37m ; Set to {nocache,private,public,} to determine HTTP caching aspects[0m
==> default:     [0m
[1;32m==> default: [37m ; or leave this empty to avoid sending anti-caching headers.[0m
==> default:     [37m ; http://php.net/session.cache-limiter[0m
==> default:     [37m@@ -1590,7 +1579,7 @@[0m[0m
[1;32m==> default: 
==> default:     [37m ;   0  (MD5 128 bits)[0m
==> default:     [37m ;   1  (SHA-1 160 bits)[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ; This option may also be set to the name of any hash function supported by[0m
==> default:     [37m-; the hash extension. A list of available hashes is returned by the hash_algos()[0m[0m
[1;32m==> default:     [37m+; the hash extension. A list of available hashes is returned by the hash_alogs()[0m[0m
[1;32m==> default: 
==> default:     [37m ; function.[0m[0m
[1;32m==> default:     [37m ; http://php.net/session.hash-function[0m[0m
[1;32m==> default: 
==> default:     [37m session.hash_function = 0[0m
==> default:     [0m
[1;32m==> default: [37m@@ -1666,7 +1655,7 @@[0m
==> default:     [0m
[1;32m==> default: [37m ;mssql.max_procs = -1[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m [0m
==> default:     [37m ; Specify client character set.[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m-; If empty or not set the client charset from freetds.conf is used[0m
==> default:     [37m+; If empty or not set the client charset from freetds.comf is used[0m[0m
[1;32m==> default:     [0m
[1;32m==> default: [37m ; This is only used when compiled with FreeTDS[0m[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [37m ;mssql.charset = "ISO-8859-1"[0m
==> default:     [37m [0m
==> default:     [37m@@ -1859,13 +1848,8 @@[0m
==> default:     [0m
[1;32m==> default: [37m [dba][0m[0m
[1;32m==> default: 
==> default:     [37m ;dba.default_handler=[0m
==> default:     [37m [0m
==> default:     [0m
[1;32m==> default: [37m-[xsl][0m
==> default:     [37m-; Write operations from within XSLT are disabled by default.[0m
==> default:     [37m-; XSL_SECPREF_CREATE_DIRECTORY | XSL_SECPREF_WRITE_NETWORK | XSL_SECPREF_WRITE_FILE = 44[0m
==> default:     [37m-; Set it to 0 to allow all operations[0m
==> default:     [0m
[1;32m==> default: [37m-;xsl.security_prefs = 44[0m
==> default:     [37m-[0m[0m
[1;32m==> default: 
==> default:     [37m ; Local Variables:[0m
==> default:     [0m
[1;32m==> default: [37m ; tab-width: 4[0m
==> default:     [37m ; End:[0m
==> default:     [0m
[1;32m==> default: [37m+[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: Recipe: php::default[0m
==> default:   * php_pear_channel[pear.php.net] action update[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default:   * php_pear_channel[pecl.php.net] action update[0m
[1;32m==> default:  (up to date)[0m
[1;32m==> default: Recipe: base::default[0m[0m
[1;32m==> default:   * group[drupal] action create[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: group[drupal] created[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- create group drupal[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default:   * user[drupal] action create[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: user[drupal] created[0m
[1;32m==> default:     [0m
[1;32m==> default: [32m- create user drupal[0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: template[/etc/apache2/envvars] sending reload action to service[apache2] (delayed)[0m
[1;32m==> default: Recipe: apache2::default[0m[0m
[1;32m==> default:   [0m
[1;32m==> default: * service[apache2] action reload[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: service[apache2] reloaded[0m
[1;32m==> default: 
==> default:     [0m
[1;32m==> default: [32m- reload service service[apache2][0m[0m
[1;32m==> default: 
==> default: [0m[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: Chef Run complete in 80.144742993 seconds[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: Skipping removal of unused files from the cache[0m
[1;32m==> default: [0m[0m
[1;32m==> default: Running handlers:[0m[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: Running report handlers[0m
[1;32m==> default: Running handlers complete
==> default: [0m[0m
[1;32m==> default: [2016-02-17T15:00:59+00:00] INFO: Report handlers complete[0m
[1;32m==> default: [0m[0m
[1;32m==> default: Deprecated features used![0m[0m
[1;32m==> default:   Default value 4294967295 is invalid for property smp_processor_affinity_mask of resource iis_pool. In Chef 13 this will become an error: Option smp_processor_affinity_mask must be a kind of [Bignum]!  You passed 4294967295.. at 1 location:[0m[0m
[1;32m==> default:     - /tmp/vagrant-chef/d2d25a618e21413b96372d8f2b31cc85/cookbooks/iis/resources/pool.rb:76:in `class_from_file'[0m[0m
[1;32m==> default:   Default value 4294967295 is invalid for property smp_processor_affinity_mask_2 of resource iis_pool. In Chef 13 this will become an error: Option smp_processor_affinity_mask_2 must be a kind of [Bignum]!  You passed 4294967295.. at 1 location:[0m[0m
[1;32m==> default:     - /tmp/vagrant-chef/d2d25a618e21413b96372d8f2b31cc85/cookbooks/iis/resources/pool.rb:77:in `class_from_file'[0m[0m
[1;32m==> default:   Default value "Evolving" is invalid for property stability of resource smf. In Chef 13 this will become an error: Option stability must be equal to one of: Standard Stable Evolving Unstable External Obsolete!  You passed "Evolving".. at 1 location:[0m[0m
[1;32m==> default:     - /tmp/vagrant-chef/d2d25a618e21413b96372d8f2b31cc85/cookbooks/smf/resources/default.rb:39:in `class_from_file'[0m[0m
[1;32m==> default: [0m[0m
[1;32m==> default: Chef Client finished, 41/92 resources updated in 01 minutes 42 seconds[0m[0m
